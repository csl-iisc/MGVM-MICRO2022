
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
0000000000002100 bicgKernel1:
	s_load_dword s4, s[4:5], 0x4                               // 000000002100: C0020102 00000004 
	s_load_dwordx2 s[0:1], s[6:7], 0x18                        // 000000002108: C0060003 00000018 
	s_load_dwordx2 s[2:3], s[6:7], 0x20                        // 000000002110: C0060083 00000020 
	s_waitcnt lgkmcnt(0)                                       // 000000002118: BF8C007F 
	s_and_b32 s3, s4, 0xffff                                   // 00000000211C: 8603FF04 0000FFFF 
	s_mul_i32 s8, s8, s3                                       // 000000002124: 92080308 
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000002128: 32000008 
	v_add_u32_e32 v1, vcc, s2, v0                              // 00000000212C: 32020002 
	v_cmp_gt_i32_e32 vcc, s0, v1                               // 000000002130: 7D880200 
	s_and_saveexec_b64 s[2:3], vcc                             // 000000002134: BE82206A 
	s_cbranch_execz BB0_4                                      // 000000002138: BF88002B 

000000000000213c BB0_1:
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 00000000213C: C00A0203 00000010 
	v_mov_b32_e32 v0, 0                                        // 000000002144: 7E000280 
	v_ashrrev_i64 v[2:3], 30, v[0:1]                           // 000000002148: D2910002 0002009E 
	s_cmp_lt_i32 s1, 1                                         // 000000002150: BF048101 
	s_waitcnt lgkmcnt(0)                                       // 000000002154: BF8C007F 
	v_mov_b32_e32 v4, s9                                       // 000000002158: 7E080209 
	v_add_u32_e32 v2, vcc, s8, v2                              // 00000000215C: 32040408 
	v_addc_u32_e32 v3, vcc, v4, v3, vcc                        // 000000002160: 38060704 
	flat_store_dword v[2:3], v0                                // 000000002164: DC700000 00000002 
	s_cbranch_scc1 BB0_4                                       // 00000000216C: BF85001E 
	v_mul_lo_u32 v4, s1, v1                                    // 000000002170: D2850004 00020201 
	s_load_dwordx4 s[4:7], s[6:7], 0x0                         // 000000002178: C00A0103 00000000 
	v_ashrrev_i32_e32 v5, 31, v4                               // 000000002180: 220A089F 
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000002184: D28F0004 00020882 
	s_waitcnt lgkmcnt(0)                                       // 00000000218C: BF8C007F 
	v_mov_b32_e32 v6, s6                                       // 000000002190: 7E0C0206 
	v_mov_b32_e32 v1, s5                                       // 000000002194: 7E020205 
	v_add_u32_e32 v4, vcc, s4, v4                              // 000000002198: 32080804 
	v_addc_u32_e32 v5, vcc, v1, v5, vcc                        // 00000000219C: 380A0B01 
	v_mov_b32_e32 v7, s7                                       // 0000000021A0: 7E0E0207 
	v_mov_b32_e32 v1, s1                                       // 0000000021A4: 7E020201 

00000000000021a8 BB0_3:
	flat_load_dword v8, v[6:7]                                 // 0000000021A8: DC500000 08000006 
	flat_load_dword v9, v[4:5]                                 // 0000000021B0: DC500000 09000004 
	v_add_u32_e32 v1, vcc, -1, v1                              // 0000000021B8: 320202C1 
	v_add_u32_e32 v4, vcc, 4, v4                               // 0000000021BC: 32080884 
	v_addc_u32_e32 v5, vcc, 0, v5, vcc                         // 0000000021C0: 380A0A80 
	v_add_u32_e32 v6, vcc, 4, v6                               // 0000000021C4: 320C0C84 
	v_addc_u32_e32 v7, vcc, 0, v7, vcc                         // 0000000021C8: 380E0E80 
	v_cmp_ne_u32_e32 vcc, 0, v1                                // 0000000021CC: 7D9A0280 
	s_and_b64 vcc, exec, vcc                                   // 0000000021D0: 86EA6A7E 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000021D4: BF8C0070 
	v_mac_f32_e32 v0, v9, v8                                   // 0000000021D8: 2C001109 
	flat_store_dword v[2:3], v0                                // 0000000021DC: DC700000 00000002 
	s_cbranch_vccnz BB0_3                                      // 0000000021E4: BF87FFF0 

00000000000021e8 BB0_4:
	s_endpgm                                                   // 0000000021E8: BF810000 
	s_nop 0                                                    // 0000000021EC: BF800000 
	s_nop 0                                                    // 0000000021F0: BF800000 
	s_nop 0                                                    // 0000000021F4: BF800000 
	s_nop 0                                                    // 0000000021F8: BF800000 
	s_nop 0                                                    // 0000000021FC: BF800000 

0000000000002300 bicgKernel2:
	s_load_dword s4, s[4:5], 0x4                               // 000000002300: C0020102 00000004 
	s_load_dwordx2 s[2:3], s[6:7], 0x18                        // 000000002308: C0060083 00000018 
	s_load_dwordx2 s[0:1], s[6:7], 0x20                        // 000000002310: C0060003 00000020 
	s_waitcnt lgkmcnt(0)                                       // 000000002318: BF8C007F 
	s_and_b32 s1, s4, 0xffff                                   // 00000000231C: 8601FF04 0000FFFF 
	s_mul_i32 s8, s8, s1                                       // 000000002324: 92080108 
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000002328: 32000008 
	v_add_u32_e32 v0, vcc, s0, v0                              // 00000000232C: 32000000 
	v_cmp_gt_i32_e32 vcc, s3, v0                               // 000000002330: 7D880003 
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002334: BE80206A 
	s_cbranch_execz BB1_4                                      // 000000002338: BF88002B 

000000000000233c BB1_1:
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 00000000233C: C00A0203 00000010 
	v_mov_b32_e32 v2, 0                                        // 000000002344: 7E040280 
	v_mov_b32_e32 v3, v0                                       // 000000002348: 7E060300 
	v_ashrrev_i64 v[3:4], 30, v[2:3]                           // 00000000234C: D2910003 0002049E 
	s_cmp_lt_i32 s2, 1                                         // 000000002354: BF048102 
	s_waitcnt lgkmcnt(0)                                       // 000000002358: BF8C007F 
	v_mov_b32_e32 v1, s9                                       // 00000000235C: 7E020209 
	v_add_u32_e32 v3, vcc, s8, v3                              // 000000002360: 32060608 
	v_addc_u32_e32 v4, vcc, v1, v4, vcc                        // 000000002364: 38080901 
	flat_store_dword v[3:4], v2                                // 000000002368: DC700000 00000203 
	s_cbranch_scc1 BB1_4                                       // 000000002370: BF85001D 
	s_load_dwordx4 s[4:7], s[6:7], 0x0                         // 000000002374: C00A0103 00000000 
	v_mov_b32_e32 v7, s2                                       // 00000000237C: 7E0E0202 
	s_waitcnt lgkmcnt(0)                                       // 000000002380: BF8C007F 
	v_mov_b32_e32 v5, s6                                       // 000000002384: 7E0A0206 
	v_mov_b32_e32 v6, s7                                       // 000000002388: 7E0C0207 

000000000000238c BB1_3:
	v_ashrrev_i32_e32 v1, 31, v0                               // 00000000238C: 2202009F 
	v_lshlrev_b64 v[8:9], 2, v[0:1]                            // 000000002390: D28F0008 00020082 
	v_mov_b32_e32 v1, s5                                       // 000000002398: 7E020205 
	v_add_u32_e32 v8, vcc, s4, v8                              // 00000000239C: 32101004 
	v_addc_u32_e32 v9, vcc, v1, v9, vcc                        // 0000000023A0: 38121301 
	flat_load_dword v1, v[8:9]                                 // 0000000023A4: DC500000 01000008 
	flat_load_dword v8, v[5:6]                                 // 0000000023AC: DC500000 08000005 
	v_add_u32_e32 v7, vcc, -1, v7                              // 0000000023B4: 320E0EC1 
	v_add_u32_e32 v0, vcc, s3, v0                              // 0000000023B8: 32000003 
	v_cmp_ne_u32_e32 vcc, 0, v7                                // 0000000023BC: 7D9A0E80 
	v_add_u32_e64 v5, s[0:1], 4, v5                            // 0000000023C0: D1190005 00020A84 
	s_and_b64 vcc, exec, vcc                                   // 0000000023C8: 86EA6A7E 
	v_addc_u32_e64 v6, s[0:1], 0, v6, s[0:1]                   // 0000000023CC: D11C0006 00020C80 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000023D4: BF8C0070 
	v_mac_f32_e32 v2, v1, v8                                   // 0000000023D8: 2C041101 
	flat_store_dword v[3:4], v2                                // 0000000023DC: DC700000 00000203 
	s_cbranch_vccnz BB1_3                                      // 0000000023E4: BF87FFE9 

00000000000023e8 BB1_4:
	s_endpgm                                                   // 0000000023E8: BF810000 
