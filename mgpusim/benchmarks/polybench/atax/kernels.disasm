
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
0000000000002100 atax_kernel1:
	s_load_dword s4, s[4:5], 0x4                               // 000000002100: C0020102 00000004 
	s_load_dwordx2 s[0:1], s[6:7], 0x18                        // 000000002108: C0060003 00000018 
	s_load_dwordx2 s[2:3], s[6:7], 0x20                        // 000000002110: C0060083 00000020 
	s_waitcnt lgkmcnt(0)                                       // 000000002118: BF8C007F 
	s_and_b32 s3, s4, 0xffff                                   // 00000000211C: 8603FF04 0000FFFF 
	s_mul_i32 s8, s8, s3                                       // 000000002124: 92080308 
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000002128: 32000008 
	v_add_u32_e32 v1, vcc, s2, v0                              // 00000000212C: 32020002 
	v_cmp_gt_i32_e32 vcc, s0, v1                               // 000000002130: 7D880200 
	v_cmp_gt_i32_e64 s[2:3], s1, 0                             // 000000002134: D0C40002 00010001 
	s_and_b64 s[2:3], s[2:3], vcc                              // 00000000213C: 86826A02 
	s_and_saveexec_b64 s[4:5], s[2:3]                          // 000000002140: BE842002 
	s_cbranch_execz BB0_3                                      // 000000002144: BF880028 

0000000000002148 BB0_1:
	s_load_dwordx4 s[8:11], s[6:7], 0x0                        // 000000002148: C00A0203 00000000 
	s_load_dwordx4 s[4:7], s[6:7], 0x10                        // 000000002150: C00A0103 00000010 
	v_mov_b32_e32 v0, 0                                        // 000000002158: 7E000280 
	v_ashrrev_i64 v[2:3], 30, v[0:1]                           // 00000000215C: D2910002 0002009E 
	v_mul_lo_u32 v4, s1, v1                                    // 000000002164: D2850004 00020201 
	s_waitcnt lgkmcnt(0)                                       // 00000000216C: BF8C007F 
	v_mov_b32_e32 v7, s9                                       // 000000002170: 7E0E0209 
	v_mov_b32_e32 v1, s5                                       // 000000002174: 7E020205 
	v_add_u32_e32 v0, vcc, s4, v2                              // 000000002178: 32000404 
	v_addc_u32_e32 v1, vcc, v1, v3, vcc                        // 00000000217C: 38020701 
	flat_load_dword v2, v[0:1]                                 // 000000002180: DC500000 02000000 
	v_ashrrev_i32_e32 v5, 31, v4                               // 000000002188: 220A089F 
	v_lshlrev_b64 v[5:6], 2, v[4:5]                            // 00000000218C: D28F0005 00020882 
	v_mov_b32_e32 v3, s10                                      // 000000002194: 7E06020A 
	v_add_u32_e32 v5, vcc, s8, v5                              // 000000002198: 320A0A08 
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 00000000219C: 380C0D07 
	v_mov_b32_e32 v4, s11                                      // 0000000021A0: 7E08020B 
	v_mov_b32_e32 v7, s1                                       // 0000000021A4: 7E0E0201 

00000000000021a8 BB0_2:
	flat_load_dword v8, v[3:4]                                 // 0000000021A8: DC500000 08000003 
	flat_load_dword v9, v[5:6]                                 // 0000000021B0: DC500000 09000005 
	v_add_u32_e32 v7, vcc, -1, v7                              // 0000000021B8: 320E0EC1 
	v_add_u32_e32 v5, vcc, 4, v5                               // 0000000021BC: 320A0A84 
	v_addc_u32_e32 v6, vcc, 0, v6, vcc                         // 0000000021C0: 380C0C80 
	v_add_u32_e32 v3, vcc, 4, v3                               // 0000000021C4: 32060684 
	v_addc_u32_e32 v4, vcc, 0, v4, vcc                         // 0000000021C8: 38080880 
	v_cmp_eq_u32_e32 vcc, 0, v7                                // 0000000021CC: 7D940E80 
	s_and_b64 vcc, exec, vcc                                   // 0000000021D0: 86EA6A7E 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000021D4: BF8C0070 
	v_mac_f32_e32 v2, v9, v8                                   // 0000000021D8: 2C041109 
	flat_store_dword v[0:1], v2                                // 0000000021DC: DC700000 00000200 
	s_cbranch_vccz BB0_2                                       // 0000000021E4: BF86FFF0 

00000000000021e8 BB0_3:
	s_endpgm                                                   // 0000000021E8: BF810000 
	s_nop 0                                                    // 0000000021EC: BF800000 
	s_nop 0                                                    // 0000000021F0: BF800000 
	s_nop 0                                                    // 0000000021F4: BF800000 
	s_nop 0                                                    // 0000000021F8: BF800000 
	s_nop 0                                                    // 0000000021FC: BF800000 

0000000000002300 atax_kernel2:
	s_load_dword s4, s[4:5], 0x4                               // 000000002300: C0020102 00000004 
	s_load_dwordx2 s[2:3], s[6:7], 0x18                        // 000000002308: C0060083 00000018 
	s_load_dwordx2 s[0:1], s[6:7], 0x20                        // 000000002310: C0060003 00000020 
	s_waitcnt lgkmcnt(0)                                       // 000000002318: BF8C007F 
	s_and_b32 s1, s4, 0xffff                                   // 00000000231C: 8601FF04 0000FFFF 
	s_mul_i32 s8, s8, s1                                       // 000000002324: 92080108 
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000002328: 32000008 
	v_add_u32_e32 v0, vcc, s0, v0                              // 00000000232C: 32000000 
	v_cmp_gt_i32_e32 vcc, s3, v0                               // 000000002330: 7D880003 
	v_cmp_gt_i32_e64 s[0:1], s2, 0                             // 000000002334: D0C40000 00010002 
	s_and_b64 s[0:1], s[0:1], vcc                              // 00000000233C: 86806A00 
	s_and_saveexec_b64 s[4:5], s[0:1]                          // 000000002340: BE842000 
	s_cbranch_execz BB1_3                                      // 000000002344: BF880028 

0000000000002348 BB1_1:
	s_load_dwordx4 s[8:11], s[6:7], 0x0                        // 000000002348: C00A0203 00000000 
	v_mov_b32_e32 v1, 0                                        // 000000002350: 7E020280 
	v_mov_b32_e32 v2, v0                                       // 000000002354: 7E040300 
	v_ashrrev_i64 v[2:3], 30, v[1:2]                           // 000000002358: D2910002 0002029E 
	s_load_dwordx4 s[4:7], s[6:7], 0x10                        // 000000002360: C00A0103 00000010 
	s_waitcnt lgkmcnt(0)                                       // 000000002368: BF8C007F 
	v_mov_b32_e32 v1, s11                                      // 00000000236C: 7E02020B 
	v_add_u32_e32 v2, vcc, s10, v2                             // 000000002370: 3204040A 
	v_addc_u32_e32 v3, vcc, v1, v3, vcc                        // 000000002374: 38060701 
	flat_load_dword v4, v[2:3]                                 // 000000002378: DC500000 04000002 
	v_mov_b32_e32 v6, s5                                       // 000000002380: 7E0C0205 
	v_mov_b32_e32 v5, s4                                       // 000000002384: 7E0A0204 
	v_mov_b32_e32 v7, s2                                       // 000000002388: 7E0E0202 

000000000000238c BB1_2:
	v_ashrrev_i32_e32 v1, 31, v0                               // 00000000238C: 2202009F 
	v_lshlrev_b64 v[8:9], 2, v[0:1]                            // 000000002390: D28F0008 00020082 
	v_mov_b32_e32 v1, s9                                       // 000000002398: 7E020209 
	v_add_u32_e32 v8, vcc, s8, v8                              // 00000000239C: 32101008 
	v_addc_u32_e32 v9, vcc, v1, v9, vcc                        // 0000000023A0: 38121301 
	flat_load_dword v1, v[8:9]                                 // 0000000023A4: DC500000 01000008 
	flat_load_dword v8, v[5:6]                                 // 0000000023AC: DC500000 08000005 
	v_add_u32_e32 v7, vcc, -1, v7                              // 0000000023B4: 320E0EC1 
	v_add_u32_e32 v0, vcc, s3, v0                              // 0000000023B8: 32000003 
	v_cmp_eq_u32_e32 vcc, 0, v7                                // 0000000023BC: 7D940E80 
	v_add_u32_e64 v5, s[0:1], 4, v5                            // 0000000023C0: D1190005 00020A84 
	s_and_b64 vcc, exec, vcc                                   // 0000000023C8: 86EA6A7E 
	v_addc_u32_e64 v6, s[0:1], 0, v6, s[0:1]                   // 0000000023CC: D11C0006 00020C80 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000023D4: BF8C0070 
	v_mac_f32_e32 v4, v1, v8                                   // 0000000023D8: 2C081101 
	flat_store_dword v[2:3], v4                                // 0000000023DC: DC700000 00000402 
	s_cbranch_vccz BB1_2                                       // 0000000023E4: BF86FFE9 

00000000000023e8 BB1_3:
	s_endpgm                                                   // 0000000023E8: BF810000 
