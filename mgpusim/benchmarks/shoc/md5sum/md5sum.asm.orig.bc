; ModuleID = 'md5sum.cl'
source_filename = "md5sum.cl"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: convergent norecurse nounwind writeonly
define protected amdgpu_kernel void @FindKeyWithDigest_Kernel(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 addrspace(1)* nocapture %7, i8 addrspace(1)* nocapture %8, i32 addrspace(1)* nocapture %9) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 !kernel_arg_name !8 {
  %11 = tail call i64 @_Z12get_group_idj(i32 0) #2
  %12 = tail call i64 @_Z14get_local_sizej(i32 0) #2
  %13 = mul i64 %12, %11
  %14 = tail call i64 @_Z12get_local_idj(i32 0) #2
  %15 = add i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = mul nsw i32 %16, %6
  %18 = freeze i32 %17
  %19 = freeze i32 %6
  %20 = udiv i32 %18, %19
  %21 = freeze i32 %20
  %22 = freeze i32 %6
  %23 = udiv i32 %21, %22
  %24 = mul i32 %23, %22
  %25 = sub i32 %21, %24
  %26 = trunc i32 %25 to i8
  %27 = freeze i32 %23
  %28 = freeze i32 %6
  %29 = udiv i32 %27, %28
  %30 = mul i32 %29, %28
  %31 = sub i32 %27, %30
  %32 = trunc i32 %31 to i8
  %33 = freeze i32 %29
  %34 = freeze i32 %6
  %35 = udiv i32 %33, %34
  %36 = mul i32 %35, %34
  %37 = sub i32 %33, %36
  %38 = trunc i32 %37 to i8
  %39 = freeze i32 %35
  %40 = freeze i32 %6
  %41 = udiv i32 %39, %40
  %42 = mul i32 %41, %40
  %43 = sub i32 %39, %42
  %44 = trunc i32 %43 to i8
  %45 = freeze i32 %41
  %46 = freeze i32 %6
  %47 = udiv i32 %45, %46
  %48 = mul i32 %47, %46
  %49 = sub i32 %45, %48
  %50 = trunc i32 %49 to i8
  %51 = freeze i32 %47
  %52 = freeze i32 %6
  %53 = udiv i32 %51, %52
  %54 = mul i32 %53, %52
  %55 = sub i32 %51, %54
  %56 = trunc i32 %55 to i8
  %57 = urem i32 %53, %6
  %58 = trunc i32 %57 to i8
  %59 = icmp sgt i32 %6, 0
  br i1 %59, label %60, label %104

60:                                               ; preds = %10
  %61 = mul i32 %20, %19
  %62 = sub i32 %18, %61
  %63 = trunc i32 %62 to i8
  %64 = shl i32 %5, 3
  %65 = shl i32 %37, 24
  %66 = shl i32 %31, 16
  %67 = and i32 %66, 16711680
  %68 = shl i32 %25, 8
  %69 = and i32 %68, 65280
  %70 = or i32 %67, %69
  %71 = or i32 %70, %65
  %72 = shl i32 %57, 24
  %73 = shl i32 %55, 16
  %74 = and i32 %73, 16711680
  %75 = shl i32 %49, 8
  %76 = and i32 %75, 65280
  %77 = and i32 %43, 255
  %78 = or i32 %76, %77
  %79 = or i32 %78, %74
  %80 = or i32 %79, %72
  %81 = or i32 %80, -2147483648
  %82 = or i32 %80, 8388608
  %83 = or i32 %80, 32768
  %84 = or i32 %80, 128
  %85 = add i32 %64, -1502002290
  %86 = add i32 %64, -1019803690
  %87 = add i32 %64, -35309556
  %88 = add i32 %64, -1416354905
  %89 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 1
  %90 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 2
  %91 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 3
  %92 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 4
  %93 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 5
  %94 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 6
  %95 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 7
  %96 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 1
  %97 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 2
  %98 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 3
  br label %99

99:                                               ; preds = %723, %60
  %100 = phi i32 [ 0, %60 ], [ %725, %723 ]
  %101 = phi i8 [ %63, %60 ], [ %724, %723 ]
  %102 = add nsw i32 %100, %17
  %103 = icmp slt i32 %102, %4
  br i1 %103, label %105, label %104

104:                                              ; preds = %99, %723, %10
  ret void

105:                                              ; preds = %99
  %106 = zext i8 %101 to i32
  %107 = or i32 %71, %106
  switch i32 %5, label %120 [
    i32 0, label %108
    i32 1, label %110
    i32 2, label %112
    i32 3, label %114
    i32 4, label %116
    i32 5, label %117
    i32 6, label %118
    i32 7, label %119
  ]

108:                                              ; preds = %105
  %109 = or i32 %107, 128
  br label %120

110:                                              ; preds = %105
  %111 = or i32 %107, 32768
  br label %120

112:                                              ; preds = %105
  %113 = or i32 %107, 8388608
  br label %120

114:                                              ; preds = %105
  %115 = or i32 %107, -2147483648
  br label %120

116:                                              ; preds = %105
  br label %120

117:                                              ; preds = %105
  br label %120

118:                                              ; preds = %105
  br label %120

119:                                              ; preds = %105
  br label %120

120:                                              ; preds = %105, %108, %110, %112, %114, %116, %117, %118, %119
  %121 = phi i32 [ %80, %105 ], [ %81, %119 ], [ %82, %118 ], [ %83, %117 ], [ %84, %116 ], [ %80, %114 ], [ %80, %112 ], [ %80, %110 ], [ %80, %108 ]
  %122 = phi i32 [ %107, %105 ], [ %107, %119 ], [ %107, %118 ], [ %107, %117 ], [ %107, %116 ], [ %115, %114 ], [ %113, %112 ], [ %111, %110 ], [ %109, %108 ]
  %123 = add i32 %122, -680876937
  %124 = shl i32 %123, 7
  %125 = lshr i32 %123, 25
  %126 = or i32 %124, %125
  %127 = add i32 %126, -271733879
  %128 = and i32 %127, -271733879
  %129 = sub i32 271733878, %126
  %130 = and i32 %129, -1732584194
  %131 = or i32 %128, %130
  %132 = add i32 %121, -117830708
  %133 = add i32 %132, %131
  %134 = shl i32 %133, 12
  %135 = lshr i32 %133, 20
  %136 = or i32 %134, %135
  %137 = add i32 %136, %127
  %138 = and i32 %137, %127
  %139 = and i32 %137, -271733879
  %140 = xor i32 %139, -271733879
  %141 = or i32 %140, %138
  %142 = add i32 %141, -1126478375
  %143 = shl i32 %142, 17
  %144 = lshr i32 %142, 15
  %145 = or i32 %143, %144
  %146 = add i32 %145, %137
  %147 = and i32 %146, %137
  %148 = xor i32 %146, -1
  %149 = and i32 %127, %148
  %150 = or i32 %147, %149
  %151 = add i32 %150, -1316259209
  %152 = shl i32 %151, 22
  %153 = lshr i32 %151, 10
  %154 = or i32 %152, %153
  %155 = add i32 %154, %146
  %156 = and i32 %155, %146
  %157 = xor i32 %155, -1
  %158 = and i32 %137, %157
  %159 = or i32 %156, %158
  %160 = add i32 %126, -448152776
  %161 = add i32 %160, %159
  %162 = shl i32 %161, 7
  %163 = lshr i32 %161, 25
  %164 = or i32 %162, %163
  %165 = add i32 %164, %155
  %166 = and i32 %165, %155
  %167 = xor i32 %165, -1
  %168 = and i32 %146, %167
  %169 = or i32 %166, %168
  %170 = add i32 %137, 1200080426
  %171 = add i32 %170, %169
  %172 = shl i32 %171, 12
  %173 = lshr i32 %171, 20
  %174 = or i32 %172, %173
  %175 = add i32 %174, %165
  %176 = and i32 %175, %165
  %177 = xor i32 %175, -1
  %178 = and i32 %155, %177
  %179 = or i32 %176, %178
  %180 = add i32 %146, -1473231341
  %181 = add i32 %180, %179
  %182 = shl i32 %181, 17
  %183 = lshr i32 %181, 15
  %184 = or i32 %182, %183
  %185 = add i32 %184, %175
  %186 = and i32 %185, %175
  %187 = xor i32 %185, -1
  %188 = and i32 %165, %187
  %189 = or i32 %186, %188
  %190 = add i32 %155, -45705983
  %191 = add i32 %190, %189
  %192 = shl i32 %191, 22
  %193 = lshr i32 %191, 10
  %194 = or i32 %192, %193
  %195 = add i32 %194, %185
  %196 = and i32 %195, %185
  %197 = xor i32 %195, -1
  %198 = and i32 %175, %197
  %199 = or i32 %196, %198
  %200 = add i32 %165, 1770035416
  %201 = add i32 %200, %199
  %202 = shl i32 %201, 7
  %203 = lshr i32 %201, 25
  %204 = or i32 %202, %203
  %205 = add i32 %204, %195
  %206 = and i32 %205, %195
  %207 = xor i32 %205, -1
  %208 = and i32 %185, %207
  %209 = or i32 %206, %208
  %210 = add i32 %175, -1958414417
  %211 = add i32 %210, %209
  %212 = shl i32 %211, 12
  %213 = lshr i32 %211, 20
  %214 = or i32 %212, %213
  %215 = add i32 %214, %205
  %216 = and i32 %215, %205
  %217 = xor i32 %215, -1
  %218 = and i32 %195, %217
  %219 = or i32 %216, %218
  %220 = add i32 %185, -42063
  %221 = add i32 %220, %219
  %222 = shl i32 %221, 17
  %223 = lshr i32 %221, 15
  %224 = or i32 %222, %223
  %225 = add i32 %224, %215
  %226 = and i32 %225, %215
  %227 = xor i32 %225, -1
  %228 = and i32 %205, %227
  %229 = or i32 %226, %228
  %230 = add i32 %195, -1990404162
  %231 = add i32 %230, %229
  %232 = shl i32 %231, 22
  %233 = lshr i32 %231, 10
  %234 = or i32 %232, %233
  %235 = add i32 %234, %225
  %236 = and i32 %235, %225
  %237 = xor i32 %235, -1
  %238 = and i32 %215, %237
  %239 = or i32 %236, %238
  %240 = add i32 %205, 1804603682
  %241 = add i32 %240, %239
  %242 = shl i32 %241, 7
  %243 = lshr i32 %241, 25
  %244 = or i32 %242, %243
  %245 = add i32 %244, %235
  %246 = and i32 %245, %235
  %247 = xor i32 %245, -1
  %248 = and i32 %225, %247
  %249 = or i32 %246, %248
  %250 = add i32 %215, -40341101
  %251 = add i32 %250, %249
  %252 = shl i32 %251, 12
  %253 = lshr i32 %251, 20
  %254 = or i32 %252, %253
  %255 = add i32 %254, %245
  %256 = and i32 %255, %245
  %257 = xor i32 %255, -1
  %258 = and i32 %235, %257
  %259 = or i32 %256, %258
  %260 = add i32 %85, %225
  %261 = add i32 %260, %259
  %262 = shl i32 %261, 17
  %263 = lshr i32 %261, 15
  %264 = or i32 %262, %263
  %265 = add i32 %264, %255
  %266 = and i32 %265, %255
  %267 = xor i32 %265, -1
  %268 = and i32 %245, %267
  %269 = or i32 %266, %268
  %270 = add i32 %235, 1236535329
  %271 = add i32 %270, %269
  %272 = shl i32 %271, 22
  %273 = lshr i32 %271, 10
  %274 = or i32 %272, %273
  %275 = add i32 %274, %265
  %276 = and i32 %275, %255
  %277 = and i32 %265, %257
  %278 = or i32 %276, %277
  %279 = add i32 %121, -165796510
  %280 = add i32 %279, %245
  %281 = add i32 %280, %278
  %282 = shl i32 %281, 5
  %283 = lshr i32 %281, 27
  %284 = or i32 %282, %283
  %285 = add i32 %284, %275
  %286 = and i32 %285, %265
  %287 = and i32 %275, %267
  %288 = or i32 %286, %287
  %289 = add i32 %255, -1069501632
  %290 = add i32 %289, %288
  %291 = shl i32 %290, 9
  %292 = lshr i32 %290, 23
  %293 = or i32 %291, %292
  %294 = add i32 %293, %285
  %295 = and i32 %294, %275
  %296 = xor i32 %275, -1
  %297 = and i32 %285, %296
  %298 = or i32 %295, %297
  %299 = add i32 %265, 643717713
  %300 = add i32 %299, %298
  %301 = shl i32 %300, 14
  %302 = lshr i32 %300, 18
  %303 = or i32 %301, %302
  %304 = add i32 %303, %294
  %305 = and i32 %304, %285
  %306 = xor i32 %285, -1
  %307 = and i32 %294, %306
  %308 = or i32 %305, %307
  %309 = add i32 %122, -373897302
  %310 = add i32 %309, %275
  %311 = add i32 %310, %308
  %312 = shl i32 %311, 20
  %313 = lshr i32 %311, 12
  %314 = or i32 %312, %313
  %315 = add i32 %314, %304
  %316 = and i32 %315, %294
  %317 = xor i32 %294, -1
  %318 = and i32 %304, %317
  %319 = or i32 %316, %318
  %320 = add i32 %285, -701558691
  %321 = add i32 %320, %319
  %322 = shl i32 %321, 5
  %323 = lshr i32 %321, 27
  %324 = or i32 %322, %323
  %325 = add i32 %324, %315
  %326 = and i32 %325, %304
  %327 = xor i32 %304, -1
  %328 = and i32 %315, %327
  %329 = or i32 %326, %328
  %330 = add i32 %294, 38016083
  %331 = add i32 %330, %329
  %332 = shl i32 %331, 9
  %333 = lshr i32 %331, 23
  %334 = or i32 %332, %333
  %335 = add i32 %334, %325
  %336 = and i32 %335, %315
  %337 = xor i32 %315, -1
  %338 = and i32 %325, %337
  %339 = or i32 %336, %338
  %340 = add i32 %304, -660478335
  %341 = add i32 %340, %339
  %342 = shl i32 %341, 14
  %343 = lshr i32 %341, 18
  %344 = or i32 %342, %343
  %345 = add i32 %344, %335
  %346 = and i32 %345, %325
  %347 = xor i32 %325, -1
  %348 = and i32 %335, %347
  %349 = or i32 %346, %348
  %350 = add i32 %315, -405537848
  %351 = add i32 %350, %349
  %352 = shl i32 %351, 20
  %353 = lshr i32 %351, 12
  %354 = or i32 %352, %353
  %355 = add i32 %354, %345
  %356 = and i32 %355, %335
  %357 = xor i32 %335, -1
  %358 = and i32 %345, %357
  %359 = or i32 %356, %358
  %360 = add i32 %325, 568446438
  %361 = add i32 %360, %359
  %362 = shl i32 %361, 5
  %363 = lshr i32 %361, 27
  %364 = or i32 %362, %363
  %365 = add i32 %364, %355
  %366 = and i32 %365, %345
  %367 = xor i32 %345, -1
  %368 = and i32 %355, %367
  %369 = or i32 %366, %368
  %370 = add i32 %86, %335
  %371 = add i32 %370, %369
  %372 = shl i32 %371, 9
  %373 = lshr i32 %371, 23
  %374 = or i32 %372, %373
  %375 = add i32 %374, %365
  %376 = and i32 %375, %355
  %377 = xor i32 %355, -1
  %378 = and i32 %365, %377
  %379 = or i32 %376, %378
  %380 = add i32 %345, -187363961
  %381 = add i32 %380, %379
  %382 = shl i32 %381, 14
  %383 = lshr i32 %381, 18
  %384 = or i32 %382, %383
  %385 = add i32 %384, %375
  %386 = and i32 %385, %365
  %387 = xor i32 %365, -1
  %388 = and i32 %375, %387
  %389 = or i32 %386, %388
  %390 = add i32 %355, 1163531501
  %391 = add i32 %390, %389
  %392 = shl i32 %391, 20
  %393 = lshr i32 %391, 12
  %394 = or i32 %392, %393
  %395 = add i32 %394, %385
  %396 = and i32 %395, %375
  %397 = xor i32 %375, -1
  %398 = and i32 %385, %397
  %399 = or i32 %396, %398
  %400 = add i32 %365, -1444681467
  %401 = add i32 %400, %399
  %402 = shl i32 %401, 5
  %403 = lshr i32 %401, 27
  %404 = or i32 %402, %403
  %405 = add i32 %404, %395
  %406 = and i32 %405, %385
  %407 = xor i32 %385, -1
  %408 = and i32 %395, %407
  %409 = or i32 %406, %408
  %410 = add i32 %375, -51403784
  %411 = add i32 %410, %409
  %412 = shl i32 %411, 9
  %413 = lshr i32 %411, 23
  %414 = or i32 %412, %413
  %415 = add i32 %414, %405
  %416 = and i32 %415, %395
  %417 = xor i32 %395, -1
  %418 = and i32 %405, %417
  %419 = or i32 %416, %418
  %420 = add i32 %385, 1735328473
  %421 = add i32 %420, %419
  %422 = shl i32 %421, 14
  %423 = lshr i32 %421, 18
  %424 = or i32 %422, %423
  %425 = add i32 %424, %415
  %426 = and i32 %425, %405
  %427 = xor i32 %405, -1
  %428 = and i32 %415, %427
  %429 = or i32 %426, %428
  %430 = add i32 %395, -1926607734
  %431 = add i32 %430, %429
  %432 = shl i32 %431, 20
  %433 = lshr i32 %431, 12
  %434 = or i32 %432, %433
  %435 = add i32 %434, %425
  %436 = xor i32 %435, %425
  %437 = xor i32 %436, %415
  %438 = add i32 %405, -378558
  %439 = add i32 %438, %437
  %440 = shl i32 %439, 4
  %441 = lshr i32 %439, 28
  %442 = or i32 %440, %441
  %443 = add i32 %442, %435
  %444 = xor i32 %436, %443
  %445 = add i32 %415, -2022574463
  %446 = add i32 %445, %444
  %447 = shl i32 %446, 11
  %448 = lshr i32 %446, 21
  %449 = or i32 %447, %448
  %450 = add i32 %449, %443
  %451 = xor i32 %443, %435
  %452 = xor i32 %451, %450
  %453 = add i32 %425, 1839030562
  %454 = add i32 %453, %452
  %455 = shl i32 %454, 16
  %456 = lshr i32 %454, 16
  %457 = or i32 %455, %456
  %458 = add i32 %457, %450
  %459 = xor i32 %450, %443
  %460 = xor i32 %459, %458
  %461 = add i32 %87, %435
  %462 = add i32 %461, %460
  %463 = shl i32 %462, 23
  %464 = lshr i32 %462, 9
  %465 = or i32 %463, %464
  %466 = add i32 %465, %458
  %467 = xor i32 %458, %450
  %468 = xor i32 %467, %466
  %469 = add i32 %121, -1530992060
  %470 = add i32 %469, %443
  %471 = add i32 %470, %468
  %472 = shl i32 %471, 4
  %473 = lshr i32 %471, 28
  %474 = or i32 %472, %473
  %475 = add i32 %474, %466
  %476 = xor i32 %466, %458
  %477 = xor i32 %476, %475
  %478 = add i32 %450, 1272893353
  %479 = add i32 %478, %477
  %480 = shl i32 %479, 11
  %481 = lshr i32 %479, 21
  %482 = or i32 %480, %481
  %483 = add i32 %482, %475
  %484 = xor i32 %475, %466
  %485 = xor i32 %484, %483
  %486 = add i32 %458, -155497632
  %487 = add i32 %486, %485
  %488 = shl i32 %487, 16
  %489 = lshr i32 %487, 16
  %490 = or i32 %488, %489
  %491 = add i32 %490, %483
  %492 = xor i32 %483, %475
  %493 = xor i32 %492, %491
  %494 = add i32 %466, -1094730640
  %495 = add i32 %494, %493
  %496 = shl i32 %495, 23
  %497 = lshr i32 %495, 9
  %498 = or i32 %496, %497
  %499 = add i32 %498, %491
  %500 = xor i32 %491, %483
  %501 = xor i32 %500, %499
  %502 = add i32 %475, 681279174
  %503 = add i32 %502, %501
  %504 = shl i32 %503, 4
  %505 = lshr i32 %503, 28
  %506 = or i32 %504, %505
  %507 = add i32 %506, %499
  %508 = xor i32 %499, %491
  %509 = xor i32 %508, %507
  %510 = add i32 %122, -358537222
  %511 = add i32 %510, %483
  %512 = add i32 %511, %509
  %513 = shl i32 %512, 11
  %514 = lshr i32 %512, 21
  %515 = or i32 %513, %514
  %516 = add i32 %515, %507
  %517 = xor i32 %507, %499
  %518 = xor i32 %517, %516
  %519 = add i32 %491, -722521979
  %520 = add i32 %519, %518
  %521 = shl i32 %520, 16
  %522 = lshr i32 %520, 16
  %523 = or i32 %521, %522
  %524 = add i32 %523, %516
  %525 = xor i32 %516, %507
  %526 = xor i32 %525, %524
  %527 = add i32 %499, 76029189
  %528 = add i32 %527, %526
  %529 = shl i32 %528, 23
  %530 = lshr i32 %528, 9
  %531 = or i32 %529, %530
  %532 = add i32 %531, %524
  %533 = xor i32 %524, %516
  %534 = xor i32 %533, %532
  %535 = add i32 %507, -640364487
  %536 = add i32 %535, %534
  %537 = shl i32 %536, 4
  %538 = lshr i32 %536, 28
  %539 = or i32 %537, %538
  %540 = add i32 %539, %532
  %541 = xor i32 %532, %524
  %542 = xor i32 %541, %540
  %543 = add i32 %516, -421815835
  %544 = add i32 %543, %542
  %545 = shl i32 %544, 11
  %546 = lshr i32 %544, 21
  %547 = or i32 %545, %546
  %548 = add i32 %547, %540
  %549 = xor i32 %540, %532
  %550 = xor i32 %549, %548
  %551 = add i32 %524, 530742520
  %552 = add i32 %551, %550
  %553 = shl i32 %552, 16
  %554 = lshr i32 %552, 16
  %555 = or i32 %553, %554
  %556 = add i32 %555, %548
  %557 = xor i32 %548, %540
  %558 = xor i32 %557, %556
  %559 = add i32 %532, -995338651
  %560 = add i32 %559, %558
  %561 = shl i32 %560, 23
  %562 = lshr i32 %560, 9
  %563 = or i32 %561, %562
  %564 = add i32 %563, %556
  %565 = xor i32 %548, -1
  %566 = or i32 %564, %565
  %567 = xor i32 %566, %556
  %568 = add i32 %122, -198630844
  %569 = add i32 %568, %540
  %570 = add i32 %569, %567
  %571 = shl i32 %570, 6
  %572 = lshr i32 %570, 26
  %573 = or i32 %571, %572
  %574 = add i32 %573, %564
  %575 = xor i32 %556, -1
  %576 = or i32 %574, %575
  %577 = xor i32 %576, %564
  %578 = add i32 %548, 1126891415
  %579 = add i32 %578, %577
  %580 = shl i32 %579, 10
  %581 = lshr i32 %579, 22
  %582 = or i32 %580, %581
  %583 = add i32 %582, %574
  %584 = xor i32 %564, -1
  %585 = or i32 %583, %584
  %586 = xor i32 %585, %574
  %587 = add i32 %88, %556
  %588 = add i32 %587, %586
  %589 = shl i32 %588, 15
  %590 = lshr i32 %588, 17
  %591 = or i32 %589, %590
  %592 = add i32 %591, %583
  %593 = xor i32 %574, -1
  %594 = or i32 %592, %593
  %595 = xor i32 %594, %583
  %596 = add i32 %564, -57434055
  %597 = add i32 %596, %595
  %598 = shl i32 %597, 21
  %599 = lshr i32 %597, 11
  %600 = or i32 %598, %599
  %601 = add i32 %600, %592
  %602 = xor i32 %583, -1
  %603 = or i32 %601, %602
  %604 = xor i32 %603, %592
  %605 = add i32 %574, 1700485571
  %606 = add i32 %605, %604
  %607 = shl i32 %606, 6
  %608 = lshr i32 %606, 26
  %609 = or i32 %607, %608
  %610 = add i32 %609, %601
  %611 = xor i32 %592, -1
  %612 = or i32 %610, %611
  %613 = xor i32 %612, %601
  %614 = add i32 %583, -1894986606
  %615 = add i32 %614, %613
  %616 = shl i32 %615, 10
  %617 = lshr i32 %615, 22
  %618 = or i32 %616, %617
  %619 = add i32 %618, %610
  %620 = xor i32 %601, -1
  %621 = or i32 %619, %620
  %622 = xor i32 %621, %610
  %623 = add i32 %592, -1051523
  %624 = add i32 %623, %622
  %625 = shl i32 %624, 15
  %626 = lshr i32 %624, 17
  %627 = or i32 %625, %626
  %628 = add i32 %627, %619
  %629 = xor i32 %610, -1
  %630 = or i32 %628, %629
  %631 = xor i32 %630, %619
  %632 = add i32 %121, -2054922799
  %633 = add i32 %632, %601
  %634 = add i32 %633, %631
  %635 = shl i32 %634, 21
  %636 = lshr i32 %634, 11
  %637 = or i32 %635, %636
  %638 = add i32 %637, %628
  %639 = xor i32 %619, -1
  %640 = or i32 %638, %639
  %641 = xor i32 %640, %628
  %642 = add i32 %610, 1873313359
  %643 = add i32 %642, %641
  %644 = shl i32 %643, 6
  %645 = lshr i32 %643, 26
  %646 = or i32 %644, %645
  %647 = add i32 %646, %638
  %648 = xor i32 %628, -1
  %649 = or i32 %647, %648
  %650 = xor i32 %649, %638
  %651 = add i32 %619, -30611744
  %652 = add i32 %651, %650
  %653 = shl i32 %652, 10
  %654 = lshr i32 %652, 22
  %655 = or i32 %653, %654
  %656 = add i32 %655, %647
  %657 = xor i32 %638, -1
  %658 = or i32 %656, %657
  %659 = xor i32 %658, %647
  %660 = add i32 %628, -1560198380
  %661 = add i32 %660, %659
  %662 = shl i32 %661, 15
  %663 = lshr i32 %661, 17
  %664 = or i32 %662, %663
  %665 = add i32 %664, %656
  %666 = xor i32 %647, -1
  %667 = or i32 %665, %666
  %668 = xor i32 %667, %656
  %669 = add i32 %638, 1309151649
  %670 = add i32 %669, %668
  %671 = shl i32 %670, 21
  %672 = lshr i32 %670, 11
  %673 = or i32 %671, %672
  %674 = add i32 %673, %665
  %675 = xor i32 %656, -1
  %676 = or i32 %674, %675
  %677 = xor i32 %676, %665
  %678 = add i32 %647, -145523070
  %679 = add i32 %678, %677
  %680 = shl i32 %679, 6
  %681 = lshr i32 %679, 26
  %682 = or i32 %680, %681
  %683 = add i32 %682, %674
  %684 = xor i32 %665, -1
  %685 = or i32 %683, %684
  %686 = xor i32 %685, %674
  %687 = add i32 %656, -1120210379
  %688 = add i32 %687, %686
  %689 = shl i32 %688, 10
  %690 = lshr i32 %688, 22
  %691 = or i32 %689, %690
  %692 = add i32 %691, %683
  %693 = xor i32 %674, -1
  %694 = or i32 %692, %693
  %695 = xor i32 %694, %683
  %696 = add i32 %665, 718787259
  %697 = add i32 %696, %695
  %698 = shl i32 %697, 15
  %699 = lshr i32 %697, 17
  %700 = or i32 %698, %699
  %701 = add i32 %700, %692
  %702 = xor i32 %683, -1
  %703 = or i32 %701, %702
  %704 = xor i32 %703, %692
  %705 = add i32 %674, -343485551
  %706 = add i32 %705, %704
  %707 = shl i32 %706, 21
  %708 = lshr i32 %706, 11
  %709 = or i32 %707, %708
  %710 = add i32 %683, 1732584193
  %711 = add i32 %701, -271733879
  %712 = add i32 %711, %709
  %713 = add i32 %701, -1732584194
  %714 = add i32 %692, 271733878
  %715 = icmp eq i32 %710, %0
  %716 = icmp eq i32 %712, %1
  %717 = and i1 %715, %716
  %718 = icmp eq i32 %713, %2
  %719 = and i1 %718, %717
  %720 = icmp eq i32 %714, %3
  %721 = and i1 %720, %719
  br i1 %721, label %722, label %723

722:                                              ; preds = %120
  store i32 %102, i32 addrspace(1)* %7, align 4, !tbaa !9
  store i8 %101, i8 addrspace(1)* %8, align 1, !tbaa !13
  store i8 %26, i8 addrspace(1)* %89, align 1, !tbaa !13
  store i8 %32, i8 addrspace(1)* %90, align 1, !tbaa !13
  store i8 %38, i8 addrspace(1)* %91, align 1, !tbaa !13
  store i8 %44, i8 addrspace(1)* %92, align 1, !tbaa !13
  store i8 %50, i8 addrspace(1)* %93, align 1, !tbaa !13
  store i8 %56, i8 addrspace(1)* %94, align 1, !tbaa !13
  store i8 %58, i8 addrspace(1)* %95, align 1, !tbaa !13
  store i32 %0, i32 addrspace(1)* %9, align 4, !tbaa !9
  store i32 %1, i32 addrspace(1)* %96, align 4, !tbaa !9
  store i32 %2, i32 addrspace(1)* %97, align 4, !tbaa !9
  store i32 %3, i32 addrspace(1)* %98, align 4, !tbaa !9
  br label %723

723:                                              ; preds = %722, %120
  %724 = add i8 %101, 1
  %725 = add nuw nsw i32 %100, 1
  %726 = icmp eq i32 %725, %6
  br i1 %726, label %104, label %99
}

; Function Attrs: convergent nounwind readnone
declare hidden i64 @_Z12get_group_idj(i32) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare hidden i64 @_Z14get_local_sizej(i32) local_unnamed_addr #1

; Function Attrs: convergent nounwind readnone
declare hidden i64 @_Z12get_local_idj(i32) local_unnamed_addr #1

attributes #0 = { convergent norecurse nounwind writeonly "amdgpu-flat-work-group-size"="1,256" "amdgpu-implicitarg-num-bytes"="56" "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="gfx803" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "uniform-work-group-size"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="gfx803" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { convergent nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 1, i32 2}
!3 = !{!"clang version 11.0.0 (/src/external/llvm-project/clang 0383ad1cfb0a8e05b0a020e8632400194628b243)"}
!4 = !{i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1}
!5 = !{!"none", !"none", !"none", !"none", !"none", !"none", !"none", !"none", !"none", !"none"}
!6 = !{!"uint", !"uint", !"uint", !"uint", !"int", !"int", !"int", !"int*", !"uchar*", !"uint*"}
!7 = !{!"", !"", !"", !"", !"", !"", !"", !"", !"", !""}
!8 = !{!"searchDigest0", !"searchDigest1", !"searchDigest2", !"searchDigest3", !"keyspace", !"byteLength", !"valsPerByte", !"foundIndex", !"foundKey", !"foundDigest"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}
!13 = !{!11, !11, i64 0}
