	.text
	.hsa_code_object_version 2,1
	.hsa_code_object_isa 8,0,3,"AMD","AMDGPU"
	.protected	fft1D_512       ; -- Begin function fft1D_512
	.globl	fft1D_512
	.p2align	8
	.type	fft1D_512,@function
	.amdgpu_hsa_kernel fft1D_512
fft1D_512:                              ; @fft1D_512
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 2
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		granulated_workitem_vgpr_count = 21
		granulated_wavefront_sgpr_count = 4
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_wgp_mode = 0
		enable_mem_ordered = 0
		enable_fwd_progress = 0
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_trap_handler = 0
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_wavefront_size32 = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 72
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 35
		workitem_vgpr_count = 87
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = -1
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; %bb.0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_lshl_b32 s2, s6, 9
	v_or_b32_e32 v2, s2, v0
	v_mov_b32_e32 v1, 0
	v_ashrrev_i64 v[1:2], 29, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v3, s1
	v_add_u32_e32 v11, vcc, s0, v1
	v_addc_u32_e32 v12, vcc, v3, v2, vcc
	s_movk_i32 s0, 0x200
	v_add_u32_e32 v3, vcc, s0, v11
	v_addc_u32_e32 v4, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x400
	v_add_u32_e32 v5, vcc, s0, v11
	v_addc_u32_e32 v6, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x600
	v_add_u32_e32 v1, vcc, s0, v11
	v_addc_u32_e32 v2, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x800
	v_cvt_f64_i32_e32 v[42:43], v0
	v_add_u32_e32 v7, vcc, s0, v11
	v_addc_u32_e32 v8, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xa00
	v_add_u32_e32 v9, vcc, s0, v11
	s_mov_b32 s1, 0xbfa921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[15:16], v[42:43], s[0:1]
	v_addc_u32_e32 v10, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xc00
	v_add_u32_e32 v13, vcc, s0, v11
	v_addc_u32_e32 v14, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xe00
	flat_load_dwordx2 v[24:25], v[5:6]
	flat_load_dwordx2 v[28:29], v[3:4]
	v_cvt_f32_f64_e32 v17, v[15:16]
	v_add_u32_e32 v15, vcc, s0, v11
	v_addc_u32_e32 v16, vcc, 0, v12, vcc
	flat_load_dwordx2 v[30:31], v[9:10]
	flat_load_dwordx2 v[32:33], v[7:8]
	flat_load_dwordx2 v[20:21], v[1:2]
	flat_load_dwordx2 v[34:35], v[11:12]
	flat_load_dwordx2 v[22:23], v[15:16]
	flat_load_dwordx2 v[26:27], v[13:14]
	s_brev_b32 s2, -2
	s_brev_b32 s0, 18
	s_mov_b32 s9, s7
	v_cmp_nlt_f32_e64 s[0:1], |v17|, s0
	v_and_b32_e32 v19, s2, v17
	v_and_b32_e32 v18, s2, v17
	s_mov_b32 s32, s9
                                        ; implicit-def: $vgpr36
                                        ; implicit-def: $vgpr37
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_2
	s_cbranch_execz BB0_2
BB0_1:
	v_and_b32_e32 v37, 0x7fffff, v17
	v_or_b32_e32 v37, 0x800000, v37
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v38, v37, s6
	v_mul_lo_u32 v39, v37, s7
	v_mul_hi_u32 v41, v37, s7
	v_mul_lo_u32 v40, v37, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v38, vcc, v39, v38
	v_mul_lo_u32 v44, v37, s6
	v_cndmask_b32_e64 v39, 0, 1, vcc
	v_add_u32_e32 v39, vcc, v39, v41
	v_mul_hi_u32 v41, v37, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v39, vcc, v39, v44
	v_mul_lo_u32 v45, v37, s6
	v_cndmask_b32_e64 v44, 0, 1, vcc
	v_add_u32_e32 v41, vcc, v44, v41
	v_mul_hi_u32 v44, v37, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v41, vcc, v41, v45
	v_mul_lo_u32 v46, v37, s6
	v_cndmask_b32_e64 v45, 0, 1, vcc
	v_add_u32_e32 v44, vcc, v45, v44
	v_mul_hi_u32 v45, v37, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v44, vcc, v44, v46
	v_mul_lo_u32 v47, v37, s6
	v_cndmask_b32_e64 v46, 0, 1, vcc
	v_add_u32_e32 v45, vcc, v46, v45
	v_mul_hi_u32 v46, v37, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v48, v37, s6
	v_add_u32_e32 v45, vcc, v45, v47
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_mul_hi_u32 v37, v37, s6
	v_add_u32_e32 v46, vcc, v47, v46
	v_add_u32_e32 v46, vcc, v46, v48
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_lshrrev_b32_e32 v36, 23, v19
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v36, vcc, s6, v36
	v_add_u32_e32 v37, vcc, v47, v37
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v37, v37, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v41, v41, v39, vcc
	v_cndmask_b32_e32 v39, v39, v38, vcc
	v_cndmask_b32_e32 v38, v38, v40, vcc
	v_cndmask_b32_e64 v40, 0, 32, vcc
	v_sub_u32_e32 v36, vcc, v36, v40
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v40, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v41, v41, v39, vcc
	v_cndmask_b32_e32 v38, v39, v38, vcc
	v_cndmask_b32_e64 v39, 0, 32, vcc
	v_cndmask_b32_e32 v37, v37, v46, vcc
	v_sub_u32_e32 v36, vcc, v36, v39
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v37, v37, v40, vcc
	v_cndmask_b32_e32 v39, v40, v45, vcc
	v_cndmask_b32_e32 v40, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v38, v41, v38, vcc
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_sub_u32_e32 v36, vcc, v36, v41
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_cndmask_b32_e32 v37, v37, v39, vcc
	v_cndmask_b32_e32 v39, v39, v40, vcc
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e32 v38, v44, v38, vcc
	v_sub_u32_e32 v36, vcc, v36, v41
	v_sub_u32_e32 v41, vcc, 32, v36
	v_alignbit_b32 v44, v37, v39, v41
	v_alignbit_b32 v45, v39, v40, v41
	v_cmp_ne_u32_e32 vcc, 0, v36
	v_cndmask_b32_e32 v37, v37, v44, vcc
	v_alignbit_b32 v41, v40, v38, v41
	v_cndmask_b32_e32 v36, v39, v45, vcc
	v_cndmask_b32_e32 v39, v40, v41, vcc
	v_alignbit_b32 v41, v37, v36, 30
	v_bfe_i32 v44, v37, 29, 1
	v_alignbit_b32 v36, v36, v39, 30
	v_alignbit_b32 v38, v39, v38, 30
	v_xor_b32_e32 v41, v44, v41
	v_xor_b32_e32 v36, v44, v36
	v_xor_b32_e32 v38, v44, v38
	v_ffbh_u32_e32 v44, v41
	v_cmp_ne_u32_e32 vcc, 0, v41
	v_cndmask_b32_e32 v44, 32, v44, vcc
	v_lshrrev_b32_e32 v40, 29, v37
	v_sub_u32_e32 v45, vcc, 31, v44
	v_alignbit_b32 v41, v41, v36, v45
	v_alignbit_b32 v36, v36, v38, v45
	v_lshlrev_b32_e32 v40, 31, v40
	v_lshlrev_b32_e32 v38, 23, v44
	v_lshrrev_b32_e32 v45, 9, v41
	v_sub_u32_e32 v38, vcc, v40, v38
	v_or_b32_e32 v38, v38, v45
	v_alignbit_b32 v41, v41, v36, 9
	v_add_u32_e32 v38, vcc, 0.5, v38
	v_ffbh_u32_e32 v45, v41
	v_cmp_ne_u32_e32 vcc, 0, v41
	v_cndmask_b32_e32 v45, 32, v45, vcc
	v_sub_u32_e32 v46, vcc, 31, v45
	v_alignbit_b32 v36, v41, v36, v46
	v_add_u32_e32 v41, vcc, v45, v44
	v_lshlrev_b32_e32 v41, 23, v41
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v41, vcc, s6, v41
	v_or_b32_e32 v40, v41, v40
	v_lshrrev_b32_e32 v36, 9, v36
	v_or_b32_e32 v36, v40, v36
	v_and_b32_e32 v40, 0xbffff000, v38
	v_mul_f32_e32 v44, 0xbfc90fda, v38
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v44, s6, v40
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v41, v38, v40
	v_mac_f32_e32 v44, s7, v40
	v_mac_f32_e32 v44, s6, v41
	v_mul_f32_e32 v40, 0x33a22168, v38
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v44, s7, v41
	v_mac_f32_e32 v40, s6, v36
	v_add_f32_e32 v36, v44, v40
	v_bfe_u32 v39, v37, 29, 1
	v_lshrrev_b32_e32 v37, 30, v37
	v_mac_f32_e32 v36, s6, v38
	v_add_u32_e32 v37, vcc, v39, v37
BB0_2:                                  ; %Flow531
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_4
	s_cbranch_execz BB0_4
BB0_3:
	v_mul_f32_e32 v36, 0x3f22f983, v18
	v_rndne_f32_e32 v38, v36
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v36, 0xfffff000, v38
	v_mul_f32_e32 v39, s6, v38
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v39, v36, s7, -v39
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v40, -v38, s6, v18
	v_sub_f32_e32 v37, v38, v36
	v_mac_f32_e32 v39, s8, v36
	v_mac_f32_e32 v39, s7, v37
	v_sub_f32_e32 v41, v18, v40
	v_mad_f32 v41, -v38, s6, v41
	v_mac_f32_e32 v39, s8, v37
	v_sub_f32_e32 v39, v41, v39
	v_add_f32_e32 v39, v40, v39
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v40, -v38, s6, v39
	v_sub_f32_e32 v39, v39, v40
	v_mad_f32 v39, -v38, s6, v39
	v_mul_f32_e32 v41, 0xb3a22168, v38
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v41, s6, v36
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v41, s7, v36
	v_mac_f32_e32 v41, s6, v37
	v_mac_f32_e32 v41, s7, v37
	v_cvt_i32_f32_e32 v37, v38
	v_sub_f32_e32 v36, v39, v41
	v_add_f32_e32 v36, v40, v36
	v_mac_f32_e32 v36, 0xa7c234c4, v38
BB0_4:                                  ; %_Z3cosf.exit30
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr40
                                        ; implicit-def: $vgpr41
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_6
	s_cbranch_execz BB0_6
BB0_5:
	v_and_b32_e32 v39, 0x7fffff, v17
	v_or_b32_e32 v39, 0x800000, v39
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v40, v39, s2
	v_mul_lo_u32 v41, v39, s3
	v_mul_hi_u32 v45, v39, s3
	v_mul_lo_u32 v44, v39, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v40, vcc, v41, v40
	v_mul_lo_u32 v46, v39, s2
	v_cndmask_b32_e64 v41, 0, 1, vcc
	v_add_u32_e32 v41, vcc, v41, v45
	v_mul_hi_u32 v45, v39, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v41, vcc, v41, v46
	v_mul_lo_u32 v47, v39, s2
	v_cndmask_b32_e64 v46, 0, 1, vcc
	v_add_u32_e32 v45, vcc, v46, v45
	v_mul_hi_u32 v46, v39, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v45, vcc, v45, v47
	v_mul_lo_u32 v48, v39, s2
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v46, vcc, v47, v46
	v_mul_hi_u32 v47, v39, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v46, vcc, v46, v48
	v_mul_lo_u32 v49, v39, s2
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v39, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v50, v39, s2
	v_add_u32_e32 v47, vcc, v47, v49
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_mul_hi_u32 v39, v39, s2
	v_add_u32_e32 v48, vcc, v49, v48
	v_add_u32_e32 v48, vcc, v48, v50
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_lshrrev_b32_e32 v38, 23, v19
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v38, vcc, s2, v38
	v_add_u32_e32 v39, vcc, v49, v39
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v39, v39, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v41, vcc
	v_cndmask_b32_e32 v41, v41, v40, vcc
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e64 v44, 0, 32, vcc
	v_sub_u32_e32 v38, vcc, v38, v44
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v44, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v41, vcc
	v_cndmask_b32_e32 v40, v41, v40, vcc
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_cndmask_b32_e32 v39, v39, v48, vcc
	v_sub_u32_e32 v38, vcc, v38, v41
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v39, v39, v44, vcc
	v_cndmask_b32_e32 v41, v44, v47, vcc
	v_cndmask_b32_e32 v44, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v40, v45, v40, vcc
	v_cndmask_b32_e64 v45, 0, 32, vcc
	v_sub_u32_e32 v38, vcc, v38, v45
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e64 v45, 0, 32, vcc
	v_cndmask_b32_e32 v39, v39, v41, vcc
	v_cndmask_b32_e32 v41, v41, v44, vcc
	v_cndmask_b32_e32 v44, v44, v46, vcc
	v_cndmask_b32_e32 v40, v46, v40, vcc
	v_sub_u32_e32 v38, vcc, v38, v45
	v_sub_u32_e32 v45, vcc, 32, v38
	v_alignbit_b32 v46, v39, v41, v45
	v_cmp_ne_u32_e32 vcc, 0, v38
	v_alignbit_b32 v47, v41, v44, v45
	v_cndmask_b32_e32 v38, v39, v46, vcc
	v_alignbit_b32 v45, v44, v40, v45
	v_cndmask_b32_e32 v39, v41, v47, vcc
	v_cndmask_b32_e32 v41, v44, v45, vcc
	v_alignbit_b32 v45, v38, v39, 30
	v_bfe_i32 v46, v38, 29, 1
	v_alignbit_b32 v39, v39, v41, 30
	v_alignbit_b32 v40, v41, v40, 30
	v_xor_b32_e32 v45, v46, v45
	v_xor_b32_e32 v39, v46, v39
	v_xor_b32_e32 v40, v46, v40
	v_ffbh_u32_e32 v46, v45
	v_cmp_ne_u32_e32 vcc, 0, v45
	v_cndmask_b32_e32 v46, 32, v46, vcc
	v_lshrrev_b32_e32 v44, 29, v38
	v_sub_u32_e32 v47, vcc, 31, v46
	v_alignbit_b32 v45, v45, v39, v47
	v_alignbit_b32 v39, v39, v40, v47
	v_lshlrev_b32_e32 v44, 31, v44
	v_lshlrev_b32_e32 v40, 23, v46
	v_sub_u32_e32 v40, vcc, v44, v40
	v_lshrrev_b32_e32 v47, 9, v45
	v_or_b32_e32 v40, v40, v47
	v_add_u32_e32 v47, vcc, 0.5, v40
	v_alignbit_b32 v40, v45, v39, 9
	v_ffbh_u32_e32 v45, v40
	v_cmp_ne_u32_e32 vcc, 0, v40
	v_cndmask_b32_e32 v45, 32, v45, vcc
	v_sub_u32_e32 v48, vcc, 31, v45
	v_alignbit_b32 v39, v40, v39, v48
	v_add_u32_e32 v40, vcc, v45, v46
	v_lshlrev_b32_e32 v40, 23, v40
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v40, vcc, s2, v40
	v_or_b32_e32 v40, v40, v44
	v_lshrrev_b32_e32 v39, 9, v39
	v_or_b32_e32 v39, v40, v39
	v_and_b32_e32 v40, 0xbffff000, v47
	v_mul_f32_e32 v45, 0xbfc90fda, v47
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v45, s2, v40
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v44, v47, v40
	v_mac_f32_e32 v45, s3, v40
	v_mac_f32_e32 v45, s2, v44
	v_mul_f32_e32 v40, 0x33a22168, v47
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v45, s3, v44
	v_mac_f32_e32 v40, s2, v39
	v_add_f32_e32 v40, v45, v40
	v_bfe_u32 v41, v38, 29, 1
	v_lshrrev_b32_e32 v38, 30, v38
	v_mac_f32_e32 v40, s2, v47
	v_add_u32_e32 v41, vcc, v41, v38
BB0_6:                                  ; %Flow530
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_8
	s_cbranch_execz BB0_8
BB0_7:
	v_mul_f32_e32 v38, 0x3f22f983, v18
	v_rndne_f32_e32 v38, v38
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v39, 0xfffff000, v38
	v_mul_f32_e32 v41, s2, v38
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v41, v39, s3, -v41
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v44, -v38, s2, v18
	v_sub_f32_e32 v40, v38, v39
	v_mac_f32_e32 v41, s6, v39
	v_mac_f32_e32 v41, s3, v40
	v_sub_f32_e32 v18, v18, v44
	v_mad_f32 v18, -v38, s2, v18
	v_mac_f32_e32 v41, s6, v40
	v_sub_f32_e32 v18, v18, v41
	v_add_f32_e32 v18, v44, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v44, -v38, s2, v18
	v_sub_f32_e32 v18, v18, v44
	v_mad_f32 v18, -v38, s2, v18
	v_mul_f32_e32 v45, 0xb3a22168, v38
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v45, s2, v39
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v45, s3, v39
	v_mac_f32_e32 v45, s2, v40
	v_mac_f32_e32 v45, s3, v40
	v_cvt_i32_f32_e32 v41, v38
	v_sub_f32_e32 v18, v18, v45
	v_add_f32_e32 v40, v44, v18
	v_mac_f32_e32 v40, 0xa7c234c4, v38
BB0_8:                                  ; %_Z3sinf.exit29
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbf9921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[38:39], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr44
                                        ; implicit-def: $vgpr45
	v_cvt_f32_f64_e32 v38, v[38:39]
	v_and_b32_e32 v39, s0, v38
	v_and_b32_e32 v18, s0, v38
	v_cmp_nlt_f32_e64 s[0:1], |v38|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_10
	s_cbranch_execz BB0_10
BB0_9:
	v_and_b32_e32 v45, 0x7fffff, v38
	v_or_b32_e32 v45, 0x800000, v45
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v46, v45, s6
	v_mul_lo_u32 v47, v45, s7
	v_mul_hi_u32 v49, v45, s7
	v_mul_lo_u32 v48, v45, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v46, vcc, v47, v46
	v_mul_lo_u32 v50, v45, s6
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v47, v49
	v_mul_hi_u32 v49, v45, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v47, vcc, v47, v50
	v_mul_lo_u32 v51, v45, s6
	v_cndmask_b32_e64 v50, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v50, v49
	v_mul_hi_u32 v50, v45, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_lo_u32 v52, v45, s6
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_add_u32_e32 v50, vcc, v51, v50
	v_mul_hi_u32 v51, v45, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v50, vcc, v50, v52
	v_mul_lo_u32 v53, v45, s6
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v45, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v54, v45, s6
	v_add_u32_e32 v51, vcc, v51, v53
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_mul_hi_u32 v45, v45, s6
	v_add_u32_e32 v52, vcc, v53, v52
	v_add_u32_e32 v52, vcc, v52, v54
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v39
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v44, vcc, s6, v44
	v_add_u32_e32 v45, vcc, v53, v45
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v45, v45, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v48, vcc
	v_cndmask_b32_e64 v48, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v48
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v48, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v47, vcc
	v_cndmask_b32_e32 v46, v47, v46, vcc
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_cndmask_b32_e32 v45, v45, v52, vcc
	v_sub_u32_e32 v44, vcc, v44, v47
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v45, v45, v48, vcc
	v_cndmask_b32_e32 v47, v48, v51, vcc
	v_cndmask_b32_e32 v48, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v46, v49, v46, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v45, v45, v47, vcc
	v_cndmask_b32_e32 v47, v47, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e32 v46, v50, v46, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_sub_u32_e32 v49, vcc, 32, v44
	v_alignbit_b32 v50, v45, v47, v49
	v_alignbit_b32 v51, v47, v48, v49
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_cndmask_b32_e32 v45, v45, v50, vcc
	v_alignbit_b32 v49, v48, v46, v49
	v_cndmask_b32_e32 v44, v47, v51, vcc
	v_cndmask_b32_e32 v47, v48, v49, vcc
	v_alignbit_b32 v49, v45, v44, 30
	v_bfe_i32 v50, v45, 29, 1
	v_alignbit_b32 v44, v44, v47, 30
	v_alignbit_b32 v46, v47, v46, 30
	v_xor_b32_e32 v49, v50, v49
	v_xor_b32_e32 v44, v50, v44
	v_xor_b32_e32 v46, v50, v46
	v_ffbh_u32_e32 v50, v49
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v50, 32, v50, vcc
	v_lshrrev_b32_e32 v48, 29, v45
	v_sub_u32_e32 v51, vcc, 31, v50
	v_alignbit_b32 v49, v49, v44, v51
	v_alignbit_b32 v44, v44, v46, v51
	v_lshlrev_b32_e32 v48, 31, v48
	v_lshlrev_b32_e32 v46, 23, v50
	v_lshrrev_b32_e32 v51, 9, v49
	v_sub_u32_e32 v46, vcc, v48, v46
	v_or_b32_e32 v46, v46, v51
	v_alignbit_b32 v49, v49, v44, 9
	v_add_u32_e32 v46, vcc, 0.5, v46
	v_ffbh_u32_e32 v51, v49
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v51, 32, v51, vcc
	v_sub_u32_e32 v52, vcc, 31, v51
	v_alignbit_b32 v44, v49, v44, v52
	v_add_u32_e32 v49, vcc, v51, v50
	v_lshlrev_b32_e32 v49, 23, v49
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v49, vcc, s6, v49
	v_or_b32_e32 v48, v49, v48
	v_lshrrev_b32_e32 v44, 9, v44
	v_or_b32_e32 v44, v48, v44
	v_and_b32_e32 v48, 0xbffff000, v46
	v_mul_f32_e32 v50, 0xbfc90fda, v46
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v50, s6, v48
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v49, v46, v48
	v_mac_f32_e32 v50, s7, v48
	v_mac_f32_e32 v50, s6, v49
	v_mul_f32_e32 v48, 0x33a22168, v46
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v50, s7, v49
	v_mac_f32_e32 v48, s6, v44
	v_add_f32_e32 v44, v50, v48
	v_bfe_u32 v47, v45, 29, 1
	v_lshrrev_b32_e32 v45, 30, v45
	v_mac_f32_e32 v44, s6, v46
	v_add_u32_e32 v45, vcc, v47, v45
BB0_10:                                 ; %Flow529
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_12
	s_cbranch_execz BB0_12
BB0_11:
	v_mul_f32_e32 v44, 0x3f22f983, v18
	v_rndne_f32_e32 v46, v44
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v44, 0xfffff000, v46
	v_mul_f32_e32 v47, s6, v46
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v47, v44, s7, -v47
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v48, -v46, s6, v18
	v_sub_f32_e32 v45, v46, v44
	v_mac_f32_e32 v47, s8, v44
	v_mac_f32_e32 v47, s7, v45
	v_sub_f32_e32 v49, v18, v48
	v_mad_f32 v49, -v46, s6, v49
	v_mac_f32_e32 v47, s8, v45
	v_sub_f32_e32 v47, v49, v47
	v_add_f32_e32 v47, v48, v47
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v48, -v46, s6, v47
	v_sub_f32_e32 v47, v47, v48
	v_mad_f32 v47, -v46, s6, v47
	v_mul_f32_e32 v49, 0xb3a22168, v46
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v49, s6, v44
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v49, s7, v44
	v_mac_f32_e32 v49, s6, v45
	v_mac_f32_e32 v49, s7, v45
	v_cvt_i32_f32_e32 v45, v46
	v_sub_f32_e32 v44, v47, v49
	v_add_f32_e32 v44, v48, v44
	v_mac_f32_e32 v44, 0xa7c234c4, v46
BB0_12:                                 ; %_Z3cosf.exit28
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr48
                                        ; implicit-def: $vgpr49
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_14
	s_cbranch_execz BB0_14
BB0_13:
	v_and_b32_e32 v47, 0x7fffff, v38
	v_or_b32_e32 v47, 0x800000, v47
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v48, v47, s2
	v_mul_lo_u32 v49, v47, s3
	v_mul_hi_u32 v51, v47, s3
	v_mul_lo_u32 v50, v47, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_lo_u32 v52, v47, s2
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_hi_u32 v51, v47, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v49, vcc, v49, v52
	v_mul_lo_u32 v53, v47, s2
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v47, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_lo_u32 v54, v47, s2
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_hi_u32 v53, v47, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v52, vcc, v52, v54
	v_mul_lo_u32 v55, v47, s2
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v47, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v56, v47, s2
	v_add_u32_e32 v53, vcc, v53, v55
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_mul_hi_u32 v47, v47, s2
	v_add_u32_e32 v54, vcc, v55, v54
	v_add_u32_e32 v54, vcc, v54, v56
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_lshrrev_b32_e32 v46, 23, v39
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v46, vcc, s2, v46
	v_add_u32_e32 v47, vcc, v55, v47
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e64 v50, 0, 32, vcc
	v_sub_u32_e32 v46, vcc, v46, v50
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v50, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v48, v49, v48, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_sub_u32_e32 v46, vcc, v46, v49
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v47, v47, v50, vcc
	v_cndmask_b32_e32 v49, v50, v53, vcc
	v_cndmask_b32_e32 v50, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v48, v51, v48, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_sub_u32_e32 v46, vcc, v46, v51
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v49, vcc
	v_cndmask_b32_e32 v49, v49, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e32 v48, v52, v48, vcc
	v_sub_u32_e32 v46, vcc, v46, v51
	v_sub_u32_e32 v51, vcc, 32, v46
	v_alignbit_b32 v52, v47, v49, v51
	v_cmp_ne_u32_e32 vcc, 0, v46
	v_alignbit_b32 v53, v49, v50, v51
	v_cndmask_b32_e32 v46, v47, v52, vcc
	v_alignbit_b32 v51, v50, v48, v51
	v_cndmask_b32_e32 v47, v49, v53, vcc
	v_cndmask_b32_e32 v49, v50, v51, vcc
	v_alignbit_b32 v51, v46, v47, 30
	v_bfe_i32 v52, v46, 29, 1
	v_alignbit_b32 v47, v47, v49, 30
	v_alignbit_b32 v48, v49, v48, 30
	v_xor_b32_e32 v51, v52, v51
	v_xor_b32_e32 v47, v52, v47
	v_xor_b32_e32 v48, v52, v48
	v_ffbh_u32_e32 v52, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_lshrrev_b32_e32 v50, 29, v46
	v_sub_u32_e32 v53, vcc, 31, v52
	v_alignbit_b32 v51, v51, v47, v53
	v_alignbit_b32 v47, v47, v48, v53
	v_lshlrev_b32_e32 v50, 31, v50
	v_lshlrev_b32_e32 v48, 23, v52
	v_sub_u32_e32 v48, vcc, v50, v48
	v_lshrrev_b32_e32 v53, 9, v51
	v_or_b32_e32 v48, v48, v53
	v_add_u32_e32 v53, vcc, 0.5, v48
	v_alignbit_b32 v48, v51, v47, 9
	v_ffbh_u32_e32 v51, v48
	v_cmp_ne_u32_e32 vcc, 0, v48
	v_cndmask_b32_e32 v51, 32, v51, vcc
	v_sub_u32_e32 v54, vcc, 31, v51
	v_alignbit_b32 v47, v48, v47, v54
	v_add_u32_e32 v48, vcc, v51, v52
	v_lshlrev_b32_e32 v48, 23, v48
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v48, vcc, s2, v48
	v_or_b32_e32 v48, v48, v50
	v_lshrrev_b32_e32 v47, 9, v47
	v_or_b32_e32 v47, v48, v47
	v_and_b32_e32 v48, 0xbffff000, v53
	v_mul_f32_e32 v51, 0xbfc90fda, v53
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v51, s2, v48
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v50, v53, v48
	v_mac_f32_e32 v51, s3, v48
	v_mac_f32_e32 v51, s2, v50
	v_mul_f32_e32 v48, 0x33a22168, v53
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v51, s3, v50
	v_mac_f32_e32 v48, s2, v47
	v_add_f32_e32 v48, v51, v48
	v_bfe_u32 v49, v46, 29, 1
	v_lshrrev_b32_e32 v46, 30, v46
	v_mac_f32_e32 v48, s2, v53
	v_add_u32_e32 v49, vcc, v49, v46
BB0_14:                                 ; %Flow528
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_16
	s_cbranch_execz BB0_16
BB0_15:
	v_mul_f32_e32 v46, 0x3f22f983, v18
	v_rndne_f32_e32 v46, v46
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v47, 0xfffff000, v46
	v_mul_f32_e32 v49, s2, v46
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v49, v47, s3, -v49
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v50, -v46, s2, v18
	v_sub_f32_e32 v48, v46, v47
	v_mac_f32_e32 v49, s6, v47
	v_mac_f32_e32 v49, s3, v48
	v_sub_f32_e32 v18, v18, v50
	v_mad_f32 v18, -v46, s2, v18
	v_mac_f32_e32 v49, s6, v48
	v_sub_f32_e32 v18, v18, v49
	v_add_f32_e32 v18, v50, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v50, -v46, s2, v18
	v_sub_f32_e32 v18, v18, v50
	v_mad_f32 v18, -v46, s2, v18
	v_mul_f32_e32 v51, 0xb3a22168, v46
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v51, s2, v47
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v51, s3, v47
	v_mac_f32_e32 v51, s2, v48
	v_mac_f32_e32 v51, s3, v48
	v_cvt_i32_f32_e32 v49, v46
	v_sub_f32_e32 v18, v18, v51
	v_add_f32_e32 v48, v50, v18
	v_mac_f32_e32 v48, 0xa7c234c4, v46
BB0_16:                                 ; %_Z3sinf.exit27
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbfb2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[46:47], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr50
                                        ; implicit-def: $vgpr51
	v_cvt_f32_f64_e32 v46, v[46:47]
	v_and_b32_e32 v47, s0, v46
	v_and_b32_e32 v18, s0, v46
	v_cmp_nlt_f32_e64 s[0:1], |v46|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_18
	s_cbranch_execz BB0_18
BB0_17:
	v_and_b32_e32 v51, 0x7fffff, v46
	v_or_b32_e32 v51, 0x800000, v51
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v52, v51, s6
	v_mul_lo_u32 v53, v51, s7
	v_mul_hi_u32 v55, v51, s7
	v_mul_lo_u32 v54, v51, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_lo_u32 v56, v51, s6
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v53, v55
	v_mul_hi_u32 v55, v51, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v53, vcc, v53, v56
	v_mul_lo_u32 v57, v51, s6
	v_cndmask_b32_e64 v56, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v56, v55
	v_mul_hi_u32 v56, v51, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v55, vcc, v55, v57
	v_mul_lo_u32 v58, v51, s6
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_add_u32_e32 v56, vcc, v57, v56
	v_mul_hi_u32 v57, v51, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v56, vcc, v56, v58
	v_mul_lo_u32 v59, v51, s6
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v51, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v60, v51, s6
	v_add_u32_e32 v57, vcc, v57, v59
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_mul_hi_u32 v51, v51, s6
	v_add_u32_e32 v58, vcc, v59, v58
	v_add_u32_e32 v58, vcc, v58, v60
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_lshrrev_b32_e32 v50, 23, v47
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v50, vcc, s6, v50
	v_add_u32_e32 v51, vcc, v59, v51
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v51, v51, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v54, vcc
	v_cndmask_b32_e64 v54, 0, 32, vcc
	v_sub_u32_e32 v50, vcc, v50, v54
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v54, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v53, vcc
	v_cndmask_b32_e32 v52, v53, v52, vcc
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_cndmask_b32_e32 v51, v51, v58, vcc
	v_sub_u32_e32 v50, vcc, v50, v53
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v51, v51, v54, vcc
	v_cndmask_b32_e32 v53, v54, v57, vcc
	v_cndmask_b32_e32 v54, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v52, v55, v52, vcc
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_sub_u32_e32 v50, vcc, v50, v55
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_cndmask_b32_e32 v51, v51, v53, vcc
	v_cndmask_b32_e32 v53, v53, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e32 v52, v56, v52, vcc
	v_sub_u32_e32 v50, vcc, v50, v55
	v_sub_u32_e32 v55, vcc, 32, v50
	v_alignbit_b32 v56, v51, v53, v55
	v_alignbit_b32 v57, v53, v54, v55
	v_cmp_ne_u32_e32 vcc, 0, v50
	v_cndmask_b32_e32 v51, v51, v56, vcc
	v_alignbit_b32 v55, v54, v52, v55
	v_cndmask_b32_e32 v50, v53, v57, vcc
	v_cndmask_b32_e32 v53, v54, v55, vcc
	v_alignbit_b32 v55, v51, v50, 30
	v_bfe_i32 v56, v51, 29, 1
	v_alignbit_b32 v50, v50, v53, 30
	v_alignbit_b32 v52, v53, v52, 30
	v_xor_b32_e32 v55, v56, v55
	v_xor_b32_e32 v50, v56, v50
	v_xor_b32_e32 v52, v56, v52
	v_ffbh_u32_e32 v56, v55
	v_cmp_ne_u32_e32 vcc, 0, v55
	v_cndmask_b32_e32 v56, 32, v56, vcc
	v_lshrrev_b32_e32 v54, 29, v51
	v_sub_u32_e32 v57, vcc, 31, v56
	v_alignbit_b32 v55, v55, v50, v57
	v_alignbit_b32 v50, v50, v52, v57
	v_lshlrev_b32_e32 v54, 31, v54
	v_lshlrev_b32_e32 v52, 23, v56
	v_lshrrev_b32_e32 v57, 9, v55
	v_sub_u32_e32 v52, vcc, v54, v52
	v_or_b32_e32 v52, v52, v57
	v_alignbit_b32 v55, v55, v50, 9
	v_add_u32_e32 v52, vcc, 0.5, v52
	v_ffbh_u32_e32 v57, v55
	v_cmp_ne_u32_e32 vcc, 0, v55
	v_cndmask_b32_e32 v57, 32, v57, vcc
	v_sub_u32_e32 v58, vcc, 31, v57
	v_alignbit_b32 v50, v55, v50, v58
	v_add_u32_e32 v55, vcc, v57, v56
	v_lshlrev_b32_e32 v55, 23, v55
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v55, vcc, s6, v55
	v_or_b32_e32 v54, v55, v54
	v_lshrrev_b32_e32 v50, 9, v50
	v_or_b32_e32 v50, v54, v50
	v_and_b32_e32 v54, 0xbffff000, v52
	v_mul_f32_e32 v56, 0xbfc90fda, v52
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v56, s6, v54
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v55, v52, v54
	v_mac_f32_e32 v56, s7, v54
	v_mac_f32_e32 v56, s6, v55
	v_mul_f32_e32 v54, 0x33a22168, v52
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v56, s7, v55
	v_mac_f32_e32 v54, s6, v50
	v_add_f32_e32 v50, v56, v54
	v_bfe_u32 v53, v51, 29, 1
	v_lshrrev_b32_e32 v51, 30, v51
	v_mac_f32_e32 v50, s6, v52
	v_add_u32_e32 v51, vcc, v53, v51
BB0_18:                                 ; %Flow527
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_20
	s_cbranch_execz BB0_20
BB0_19:
	v_mul_f32_e32 v50, 0x3f22f983, v18
	v_rndne_f32_e32 v52, v50
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v50, 0xfffff000, v52
	v_mul_f32_e32 v53, s6, v52
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v53, v50, s7, -v53
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v54, -v52, s6, v18
	v_sub_f32_e32 v51, v52, v50
	v_mac_f32_e32 v53, s8, v50
	v_mac_f32_e32 v53, s7, v51
	v_sub_f32_e32 v55, v18, v54
	v_mad_f32 v55, -v52, s6, v55
	v_mac_f32_e32 v53, s8, v51
	v_sub_f32_e32 v53, v55, v53
	v_add_f32_e32 v53, v54, v53
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v54, -v52, s6, v53
	v_sub_f32_e32 v53, v53, v54
	v_mad_f32 v53, -v52, s6, v53
	v_mul_f32_e32 v55, 0xb3a22168, v52
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v55, s6, v50
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v55, s7, v50
	v_mac_f32_e32 v55, s6, v51
	v_mac_f32_e32 v55, s7, v51
	v_cvt_i32_f32_e32 v51, v52
	v_sub_f32_e32 v50, v53, v55
	v_add_f32_e32 v50, v54, v50
	v_mac_f32_e32 v50, 0xa7c234c4, v52
BB0_20:                                 ; %_Z3cosf.exit26
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr54
                                        ; implicit-def: $vgpr55
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_22
	s_cbranch_execz BB0_22
BB0_21:
	v_and_b32_e32 v53, 0x7fffff, v46
	v_or_b32_e32 v53, 0x800000, v53
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v54, v53, s2
	v_mul_lo_u32 v55, v53, s3
	v_mul_hi_u32 v57, v53, s3
	v_mul_lo_u32 v56, v53, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v54, vcc, v55, v54
	v_mul_lo_u32 v58, v53, s2
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v55, v57
	v_mul_hi_u32 v57, v53, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v55, vcc, v55, v58
	v_mul_lo_u32 v59, v53, s2
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v53, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_lo_u32 v60, v53, s2
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_hi_u32 v59, v53, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v58, vcc, v58, v60
	v_mul_lo_u32 v61, v53, s2
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v53, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v62, v53, s2
	v_add_u32_e32 v59, vcc, v59, v61
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_mul_hi_u32 v53, v53, s2
	v_add_u32_e32 v60, vcc, v61, v60
	v_add_u32_e32 v60, vcc, v60, v62
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_lshrrev_b32_e32 v52, 23, v47
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v52, vcc, s2, v52
	v_add_u32_e32 v53, vcc, v61, v53
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v53, v53, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e64 v56, 0, 32, vcc
	v_sub_u32_e32 v52, vcc, v52, v56
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v56, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v55, vcc
	v_cndmask_b32_e32 v54, v55, v54, vcc
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_cndmask_b32_e32 v53, v53, v60, vcc
	v_sub_u32_e32 v52, vcc, v52, v55
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v53, v53, v56, vcc
	v_cndmask_b32_e32 v55, v56, v59, vcc
	v_cndmask_b32_e32 v56, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v54, v57, v54, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_sub_u32_e32 v52, vcc, v52, v57
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v53, v53, v55, vcc
	v_cndmask_b32_e32 v55, v55, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e32 v54, v58, v54, vcc
	v_sub_u32_e32 v52, vcc, v52, v57
	v_sub_u32_e32 v57, vcc, 32, v52
	v_alignbit_b32 v58, v53, v55, v57
	v_cmp_ne_u32_e32 vcc, 0, v52
	v_alignbit_b32 v59, v55, v56, v57
	v_cndmask_b32_e32 v52, v53, v58, vcc
	v_alignbit_b32 v57, v56, v54, v57
	v_cndmask_b32_e32 v53, v55, v59, vcc
	v_cndmask_b32_e32 v55, v56, v57, vcc
	v_alignbit_b32 v57, v52, v53, 30
	v_bfe_i32 v58, v52, 29, 1
	v_alignbit_b32 v53, v53, v55, 30
	v_alignbit_b32 v54, v55, v54, 30
	v_xor_b32_e32 v57, v58, v57
	v_xor_b32_e32 v53, v58, v53
	v_xor_b32_e32 v54, v58, v54
	v_ffbh_u32_e32 v58, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, 32, v58, vcc
	v_lshrrev_b32_e32 v56, 29, v52
	v_sub_u32_e32 v59, vcc, 31, v58
	v_alignbit_b32 v57, v57, v53, v59
	v_alignbit_b32 v53, v53, v54, v59
	v_lshlrev_b32_e32 v56, 31, v56
	v_lshlrev_b32_e32 v54, 23, v58
	v_sub_u32_e32 v54, vcc, v56, v54
	v_lshrrev_b32_e32 v59, 9, v57
	v_or_b32_e32 v54, v54, v59
	v_add_u32_e32 v59, vcc, 0.5, v54
	v_alignbit_b32 v54, v57, v53, 9
	v_ffbh_u32_e32 v57, v54
	v_cmp_ne_u32_e32 vcc, 0, v54
	v_cndmask_b32_e32 v57, 32, v57, vcc
	v_sub_u32_e32 v60, vcc, 31, v57
	v_alignbit_b32 v53, v54, v53, v60
	v_add_u32_e32 v54, vcc, v57, v58
	v_lshlrev_b32_e32 v54, 23, v54
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v54, vcc, s2, v54
	v_or_b32_e32 v54, v54, v56
	v_lshrrev_b32_e32 v53, 9, v53
	v_or_b32_e32 v53, v54, v53
	v_and_b32_e32 v54, 0xbffff000, v59
	v_mul_f32_e32 v57, 0xbfc90fda, v59
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v57, s2, v54
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v56, v59, v54
	v_mac_f32_e32 v57, s3, v54
	v_mac_f32_e32 v57, s2, v56
	v_mul_f32_e32 v54, 0x33a22168, v59
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v57, s3, v56
	v_mac_f32_e32 v54, s2, v53
	v_add_f32_e32 v54, v57, v54
	v_bfe_u32 v55, v52, 29, 1
	v_lshrrev_b32_e32 v52, 30, v52
	v_mac_f32_e32 v54, s2, v59
	v_add_u32_e32 v55, vcc, v55, v52
BB0_22:                                 ; %Flow526
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_24
	s_cbranch_execz BB0_24
BB0_23:
	v_mul_f32_e32 v52, 0x3f22f983, v18
	v_rndne_f32_e32 v52, v52
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v53, 0xfffff000, v52
	v_mul_f32_e32 v55, s2, v52
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v55, v53, s3, -v55
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v56, -v52, s2, v18
	v_sub_f32_e32 v54, v52, v53
	v_mac_f32_e32 v55, s6, v53
	v_mac_f32_e32 v55, s3, v54
	v_sub_f32_e32 v18, v18, v56
	v_mad_f32 v18, -v52, s2, v18
	v_mac_f32_e32 v55, s6, v54
	v_sub_f32_e32 v18, v18, v55
	v_add_f32_e32 v18, v56, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v56, -v52, s2, v18
	v_sub_f32_e32 v18, v18, v56
	v_mad_f32 v18, -v52, s2, v18
	v_mul_f32_e32 v57, 0xb3a22168, v52
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v57, s2, v53
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v57, s3, v53
	v_mac_f32_e32 v57, s2, v54
	v_mac_f32_e32 v57, s3, v54
	v_cvt_i32_f32_e32 v55, v52
	v_sub_f32_e32 v18, v18, v57
	v_add_f32_e32 v54, v56, v18
	v_mac_f32_e32 v54, 0xa7c234c4, v52
BB0_24:                                 ; %_Z3sinf.exit25
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbf8921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[52:53], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr56
                                        ; implicit-def: $vgpr57
	v_cvt_f32_f64_e32 v52, v[52:53]
	v_and_b32_e32 v53, s0, v52
	v_and_b32_e32 v18, s0, v52
	v_cmp_nlt_f32_e64 s[0:1], |v52|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_26
	s_cbranch_execz BB0_26
BB0_25:
	v_and_b32_e32 v57, 0x7fffff, v52
	v_or_b32_e32 v57, 0x800000, v57
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v58, v57, s6
	v_mul_lo_u32 v59, v57, s7
	v_mul_hi_u32 v61, v57, s7
	v_mul_lo_u32 v60, v57, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_lo_u32 v62, v57, s6
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v59, v61
	v_mul_hi_u32 v61, v57, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v59, vcc, v59, v62
	v_mul_lo_u32 v63, v57, s6
	v_cndmask_b32_e64 v62, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v62, v61
	v_mul_hi_u32 v62, v57, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_lo_u32 v64, v57, s6
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_add_u32_e32 v62, vcc, v63, v62
	v_mul_hi_u32 v63, v57, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v62, vcc, v62, v64
	v_mul_lo_u32 v65, v57, s6
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v57, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v66, v57, s6
	v_add_u32_e32 v63, vcc, v63, v65
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_mul_hi_u32 v57, v57, s6
	v_add_u32_e32 v64, vcc, v65, v64
	v_add_u32_e32 v64, vcc, v64, v66
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_lshrrev_b32_e32 v56, 23, v53
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v56, vcc, s6, v56
	v_add_u32_e32 v57, vcc, v65, v57
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v57, v57, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v60, vcc
	v_cndmask_b32_e64 v60, 0, 32, vcc
	v_sub_u32_e32 v56, vcc, v56, v60
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v60, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v59, vcc
	v_cndmask_b32_e32 v58, v59, v58, vcc
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_cndmask_b32_e32 v57, v57, v64, vcc
	v_sub_u32_e32 v56, vcc, v56, v59
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v57, v57, v60, vcc
	v_cndmask_b32_e32 v59, v60, v63, vcc
	v_cndmask_b32_e32 v60, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v58, v61, v58, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_sub_u32_e32 v56, vcc, v56, v61
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v57, v57, v59, vcc
	v_cndmask_b32_e32 v59, v59, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e32 v58, v62, v58, vcc
	v_sub_u32_e32 v56, vcc, v56, v61
	v_sub_u32_e32 v61, vcc, 32, v56
	v_alignbit_b32 v62, v57, v59, v61
	v_alignbit_b32 v63, v59, v60, v61
	v_cmp_ne_u32_e32 vcc, 0, v56
	v_cndmask_b32_e32 v57, v57, v62, vcc
	v_alignbit_b32 v61, v60, v58, v61
	v_cndmask_b32_e32 v56, v59, v63, vcc
	v_cndmask_b32_e32 v59, v60, v61, vcc
	v_alignbit_b32 v61, v57, v56, 30
	v_bfe_i32 v62, v57, 29, 1
	v_alignbit_b32 v56, v56, v59, 30
	v_alignbit_b32 v58, v59, v58, 30
	v_xor_b32_e32 v61, v62, v61
	v_xor_b32_e32 v56, v62, v56
	v_xor_b32_e32 v58, v62, v58
	v_ffbh_u32_e32 v62, v61
	v_cmp_ne_u32_e32 vcc, 0, v61
	v_cndmask_b32_e32 v62, 32, v62, vcc
	v_lshrrev_b32_e32 v60, 29, v57
	v_sub_u32_e32 v63, vcc, 31, v62
	v_alignbit_b32 v61, v61, v56, v63
	v_alignbit_b32 v56, v56, v58, v63
	v_lshlrev_b32_e32 v60, 31, v60
	v_lshlrev_b32_e32 v58, 23, v62
	v_lshrrev_b32_e32 v63, 9, v61
	v_sub_u32_e32 v58, vcc, v60, v58
	v_or_b32_e32 v58, v58, v63
	v_alignbit_b32 v61, v61, v56, 9
	v_add_u32_e32 v58, vcc, 0.5, v58
	v_ffbh_u32_e32 v63, v61
	v_cmp_ne_u32_e32 vcc, 0, v61
	v_cndmask_b32_e32 v63, 32, v63, vcc
	v_sub_u32_e32 v64, vcc, 31, v63
	v_alignbit_b32 v56, v61, v56, v64
	v_add_u32_e32 v61, vcc, v63, v62
	v_lshlrev_b32_e32 v61, 23, v61
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v61, vcc, s6, v61
	v_or_b32_e32 v60, v61, v60
	v_lshrrev_b32_e32 v56, 9, v56
	v_or_b32_e32 v56, v60, v56
	v_and_b32_e32 v60, 0xbffff000, v58
	v_mul_f32_e32 v62, 0xbfc90fda, v58
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v62, s6, v60
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v61, v58, v60
	v_mac_f32_e32 v62, s7, v60
	v_mac_f32_e32 v62, s6, v61
	v_mul_f32_e32 v60, 0x33a22168, v58
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v62, s7, v61
	v_mac_f32_e32 v60, s6, v56
	v_add_f32_e32 v56, v62, v60
	v_bfe_u32 v59, v57, 29, 1
	v_lshrrev_b32_e32 v57, 30, v57
	v_mac_f32_e32 v56, s6, v58
	v_add_u32_e32 v57, vcc, v59, v57
BB0_26:                                 ; %Flow525
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_28
	s_cbranch_execz BB0_28
BB0_27:
	v_mul_f32_e32 v56, 0x3f22f983, v18
	v_rndne_f32_e32 v58, v56
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v56, 0xfffff000, v58
	v_mul_f32_e32 v59, s6, v58
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v59, v56, s7, -v59
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v60, -v58, s6, v18
	v_sub_f32_e32 v57, v58, v56
	v_mac_f32_e32 v59, s8, v56
	v_mac_f32_e32 v59, s7, v57
	v_sub_f32_e32 v61, v18, v60
	v_mad_f32 v61, -v58, s6, v61
	v_mac_f32_e32 v59, s8, v57
	v_sub_f32_e32 v59, v61, v59
	v_add_f32_e32 v59, v60, v59
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v60, -v58, s6, v59
	v_sub_f32_e32 v59, v59, v60
	v_mad_f32 v59, -v58, s6, v59
	v_mul_f32_e32 v61, 0xb3a22168, v58
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v61, s6, v56
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v61, s7, v56
	v_mac_f32_e32 v61, s6, v57
	v_mac_f32_e32 v61, s7, v57
	v_cvt_i32_f32_e32 v57, v58
	v_sub_f32_e32 v56, v59, v61
	v_add_f32_e32 v56, v60, v56
	v_mac_f32_e32 v56, 0xa7c234c4, v58
BB0_28:                                 ; %_Z3cosf.exit24
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr60
                                        ; implicit-def: $vgpr61
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_30
	s_cbranch_execz BB0_30
BB0_29:
	v_and_b32_e32 v59, 0x7fffff, v52
	v_or_b32_e32 v59, 0x800000, v59
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v60, v59, s2
	v_mul_lo_u32 v61, v59, s3
	v_mul_hi_u32 v63, v59, s3
	v_mul_lo_u32 v62, v59, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_lo_u32 v64, v59, s2
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_hi_u32 v63, v59, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v61, vcc, v61, v64
	v_mul_lo_u32 v65, v59, s2
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v59, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_lo_u32 v66, v59, s2
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_hi_u32 v65, v59, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v64, vcc, v64, v66
	v_mul_lo_u32 v67, v59, s2
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v59, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v68, v59, s2
	v_add_u32_e32 v65, vcc, v65, v67
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_mul_hi_u32 v59, v59, s2
	v_add_u32_e32 v66, vcc, v67, v66
	v_add_u32_e32 v66, vcc, v66, v68
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_lshrrev_b32_e32 v58, 23, v53
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v58, vcc, s2, v58
	v_add_u32_e32 v59, vcc, v67, v59
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v59, v59, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e64 v62, 0, 32, vcc
	v_sub_u32_e32 v58, vcc, v58, v62
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v62, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v60, v61, v60, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v59, v59, v66, vcc
	v_sub_u32_e32 v58, vcc, v58, v61
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v59, v59, v62, vcc
	v_cndmask_b32_e32 v61, v62, v65, vcc
	v_cndmask_b32_e32 v62, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v60, v63, v60, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_sub_u32_e32 v58, vcc, v58, v63
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v59, v59, v61, vcc
	v_cndmask_b32_e32 v61, v61, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e32 v60, v64, v60, vcc
	v_sub_u32_e32 v58, vcc, v58, v63
	v_sub_u32_e32 v63, vcc, 32, v58
	v_alignbit_b32 v64, v59, v61, v63
	v_cmp_ne_u32_e32 vcc, 0, v58
	v_alignbit_b32 v65, v61, v62, v63
	v_cndmask_b32_e32 v58, v59, v64, vcc
	v_alignbit_b32 v63, v62, v60, v63
	v_cndmask_b32_e32 v59, v61, v65, vcc
	v_cndmask_b32_e32 v61, v62, v63, vcc
	v_alignbit_b32 v63, v58, v59, 30
	v_bfe_i32 v64, v58, 29, 1
	v_alignbit_b32 v59, v59, v61, 30
	v_alignbit_b32 v60, v61, v60, 30
	v_xor_b32_e32 v63, v64, v63
	v_xor_b32_e32 v59, v64, v59
	v_xor_b32_e32 v60, v64, v60
	v_ffbh_u32_e32 v64, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, 32, v64, vcc
	v_lshrrev_b32_e32 v62, 29, v58
	v_sub_u32_e32 v65, vcc, 31, v64
	v_alignbit_b32 v63, v63, v59, v65
	v_alignbit_b32 v59, v59, v60, v65
	v_lshlrev_b32_e32 v62, 31, v62
	v_lshlrev_b32_e32 v60, 23, v64
	v_sub_u32_e32 v60, vcc, v62, v60
	v_lshrrev_b32_e32 v65, 9, v63
	v_or_b32_e32 v60, v60, v65
	v_add_u32_e32 v65, vcc, 0.5, v60
	v_alignbit_b32 v60, v63, v59, 9
	v_ffbh_u32_e32 v63, v60
	v_cmp_ne_u32_e32 vcc, 0, v60
	v_cndmask_b32_e32 v63, 32, v63, vcc
	v_sub_u32_e32 v66, vcc, 31, v63
	v_alignbit_b32 v59, v60, v59, v66
	v_add_u32_e32 v60, vcc, v63, v64
	v_lshlrev_b32_e32 v60, 23, v60
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v60, vcc, s2, v60
	v_or_b32_e32 v60, v60, v62
	v_lshrrev_b32_e32 v59, 9, v59
	v_or_b32_e32 v59, v60, v59
	v_and_b32_e32 v60, 0xbffff000, v65
	v_mul_f32_e32 v63, 0xbfc90fda, v65
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v63, s2, v60
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v62, v65, v60
	v_mac_f32_e32 v63, s3, v60
	v_mac_f32_e32 v63, s2, v62
	v_mul_f32_e32 v60, 0x33a22168, v65
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v63, s3, v62
	v_mac_f32_e32 v60, s2, v59
	v_add_f32_e32 v60, v63, v60
	v_bfe_u32 v61, v58, 29, 1
	v_lshrrev_b32_e32 v58, 30, v58
	v_mac_f32_e32 v60, s2, v65
	v_add_u32_e32 v61, vcc, v61, v58
BB0_30:                                 ; %Flow524
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_32
	s_cbranch_execz BB0_32
BB0_31:
	v_mul_f32_e32 v58, 0x3f22f983, v18
	v_rndne_f32_e32 v58, v58
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v59, 0xfffff000, v58
	v_mul_f32_e32 v61, s2, v58
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v61, v59, s3, -v61
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v62, -v58, s2, v18
	v_sub_f32_e32 v60, v58, v59
	v_mac_f32_e32 v61, s6, v59
	v_mac_f32_e32 v61, s3, v60
	v_sub_f32_e32 v18, v18, v62
	v_mad_f32 v18, -v58, s2, v18
	v_mac_f32_e32 v61, s6, v60
	v_sub_f32_e32 v18, v18, v61
	v_add_f32_e32 v18, v62, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v62, -v58, s2, v18
	v_sub_f32_e32 v18, v18, v62
	v_mad_f32 v18, -v58, s2, v18
	v_mul_f32_e32 v63, 0xb3a22168, v58
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v63, s2, v59
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v63, s3, v59
	v_mac_f32_e32 v63, s2, v60
	v_mac_f32_e32 v63, s3, v60
	v_cvt_i32_f32_e32 v61, v58
	v_sub_f32_e32 v18, v18, v63
	v_add_f32_e32 v60, v62, v18
	v_mac_f32_e32 v60, 0xa7c234c4, v58
BB0_32:                                 ; %_Z3sinf.exit23
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbfaf6a7a
	s_mov_b32 s0, 0x2955385e
	v_mul_f64 v[58:59], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr62
                                        ; implicit-def: $vgpr63
	v_cvt_f32_f64_e32 v58, v[58:59]
	v_and_b32_e32 v59, s0, v58
	v_and_b32_e32 v18, s0, v58
	v_cmp_nlt_f32_e64 s[0:1], |v58|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_34
	s_cbranch_execz BB0_34
BB0_33:
	v_and_b32_e32 v63, 0x7fffff, v58
	v_or_b32_e32 v63, 0x800000, v63
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v64, v63, s6
	v_mul_lo_u32 v65, v63, s7
	v_mul_hi_u32 v67, v63, s7
	v_mul_lo_u32 v66, v63, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_lo_u32 v68, v63, s6
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v65, v67
	v_mul_hi_u32 v67, v63, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v65, vcc, v65, v68
	v_mul_lo_u32 v69, v63, s6
	v_cndmask_b32_e64 v68, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v68, v67
	v_mul_hi_u32 v68, v63, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v67, vcc, v67, v69
	v_mul_lo_u32 v70, v63, s6
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_add_u32_e32 v68, vcc, v69, v68
	v_mul_hi_u32 v69, v63, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v68, vcc, v68, v70
	v_mul_lo_u32 v71, v63, s6
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v63, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v72, v63, s6
	v_add_u32_e32 v69, vcc, v69, v71
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_mul_hi_u32 v63, v63, s6
	v_add_u32_e32 v70, vcc, v71, v70
	v_add_u32_e32 v70, vcc, v70, v72
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_lshrrev_b32_e32 v62, 23, v59
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v62, vcc, s6, v62
	v_add_u32_e32 v63, vcc, v71, v63
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v63, v63, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e64 v66, 0, 32, vcc
	v_sub_u32_e32 v62, vcc, v62, v66
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v66, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v65, vcc
	v_cndmask_b32_e32 v64, v65, v64, vcc
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_cndmask_b32_e32 v63, v63, v70, vcc
	v_sub_u32_e32 v62, vcc, v62, v65
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v63, v63, v66, vcc
	v_cndmask_b32_e32 v65, v66, v69, vcc
	v_cndmask_b32_e32 v66, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v64, v67, v64, vcc
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_sub_u32_e32 v62, vcc, v62, v67
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_cndmask_b32_e32 v63, v63, v65, vcc
	v_cndmask_b32_e32 v65, v65, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e32 v64, v68, v64, vcc
	v_sub_u32_e32 v62, vcc, v62, v67
	v_sub_u32_e32 v67, vcc, 32, v62
	v_alignbit_b32 v68, v63, v65, v67
	v_alignbit_b32 v69, v65, v66, v67
	v_cmp_ne_u32_e32 vcc, 0, v62
	v_cndmask_b32_e32 v63, v63, v68, vcc
	v_alignbit_b32 v67, v66, v64, v67
	v_cndmask_b32_e32 v62, v65, v69, vcc
	v_cndmask_b32_e32 v65, v66, v67, vcc
	v_alignbit_b32 v67, v63, v62, 30
	v_bfe_i32 v68, v63, 29, 1
	v_alignbit_b32 v62, v62, v65, 30
	v_alignbit_b32 v64, v65, v64, 30
	v_xor_b32_e32 v67, v68, v67
	v_xor_b32_e32 v62, v68, v62
	v_xor_b32_e32 v64, v68, v64
	v_ffbh_u32_e32 v68, v67
	v_cmp_ne_u32_e32 vcc, 0, v67
	v_cndmask_b32_e32 v68, 32, v68, vcc
	v_lshrrev_b32_e32 v66, 29, v63
	v_sub_u32_e32 v69, vcc, 31, v68
	v_alignbit_b32 v67, v67, v62, v69
	v_alignbit_b32 v62, v62, v64, v69
	v_lshlrev_b32_e32 v66, 31, v66
	v_lshlrev_b32_e32 v64, 23, v68
	v_lshrrev_b32_e32 v69, 9, v67
	v_sub_u32_e32 v64, vcc, v66, v64
	v_or_b32_e32 v64, v64, v69
	v_alignbit_b32 v67, v67, v62, 9
	v_add_u32_e32 v64, vcc, 0.5, v64
	v_ffbh_u32_e32 v69, v67
	v_cmp_ne_u32_e32 vcc, 0, v67
	v_cndmask_b32_e32 v69, 32, v69, vcc
	v_sub_u32_e32 v70, vcc, 31, v69
	v_alignbit_b32 v62, v67, v62, v70
	v_add_u32_e32 v67, vcc, v69, v68
	v_lshlrev_b32_e32 v67, 23, v67
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v67, vcc, s6, v67
	v_or_b32_e32 v66, v67, v66
	v_lshrrev_b32_e32 v62, 9, v62
	v_or_b32_e32 v62, v66, v62
	v_and_b32_e32 v66, 0xbffff000, v64
	v_mul_f32_e32 v68, 0xbfc90fda, v64
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v68, s6, v66
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v67, v64, v66
	v_mac_f32_e32 v68, s7, v66
	v_mac_f32_e32 v68, s6, v67
	v_mul_f32_e32 v66, 0x33a22168, v64
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v68, s7, v67
	v_mac_f32_e32 v66, s6, v62
	v_add_f32_e32 v62, v68, v66
	v_bfe_u32 v65, v63, 29, 1
	v_lshrrev_b32_e32 v63, 30, v63
	v_mac_f32_e32 v62, s6, v64
	v_add_u32_e32 v63, vcc, v65, v63
BB0_34:                                 ; %Flow523
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_36
	s_cbranch_execz BB0_36
BB0_35:
	v_mul_f32_e32 v62, 0x3f22f983, v18
	v_rndne_f32_e32 v64, v62
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v62, 0xfffff000, v64
	v_mul_f32_e32 v65, s6, v64
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v65, v62, s7, -v65
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v66, -v64, s6, v18
	v_sub_f32_e32 v63, v64, v62
	v_mac_f32_e32 v65, s8, v62
	v_mac_f32_e32 v65, s7, v63
	v_sub_f32_e32 v67, v18, v66
	v_mad_f32 v67, -v64, s6, v67
	v_mac_f32_e32 v65, s8, v63
	v_sub_f32_e32 v65, v67, v65
	v_add_f32_e32 v65, v66, v65
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v66, -v64, s6, v65
	v_sub_f32_e32 v65, v65, v66
	v_mad_f32 v65, -v64, s6, v65
	v_mul_f32_e32 v67, 0xb3a22168, v64
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v67, s6, v62
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v67, s7, v62
	v_mac_f32_e32 v67, s6, v63
	v_mac_f32_e32 v67, s7, v63
	v_cvt_i32_f32_e32 v63, v64
	v_sub_f32_e32 v62, v65, v67
	v_add_f32_e32 v62, v66, v62
	v_mac_f32_e32 v62, 0xa7c234c4, v64
BB0_36:                                 ; %_Z3cosf.exit22
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr66
                                        ; implicit-def: $vgpr67
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_38
	s_cbranch_execz BB0_38
BB0_37:
	v_and_b32_e32 v65, 0x7fffff, v58
	v_or_b32_e32 v65, 0x800000, v65
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v66, v65, s2
	v_mul_lo_u32 v67, v65, s3
	v_mul_hi_u32 v69, v65, s3
	v_mul_lo_u32 v68, v65, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v66, vcc, v67, v66
	v_mul_lo_u32 v70, v65, s2
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v67, v69
	v_mul_hi_u32 v69, v65, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v67, vcc, v67, v70
	v_mul_lo_u32 v71, v65, s2
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v65, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_lo_u32 v72, v65, s2
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_hi_u32 v71, v65, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v70, vcc, v70, v72
	v_mul_lo_u32 v73, v65, s2
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v65, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v74, v65, s2
	v_add_u32_e32 v71, vcc, v71, v73
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_mul_hi_u32 v65, v65, s2
	v_add_u32_e32 v72, vcc, v73, v72
	v_add_u32_e32 v72, vcc, v72, v74
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_lshrrev_b32_e32 v64, 23, v59
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v64, vcc, s2, v64
	v_add_u32_e32 v65, vcc, v73, v65
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v65, v65, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e64 v68, 0, 32, vcc
	v_sub_u32_e32 v64, vcc, v64, v68
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v68, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v67, vcc
	v_cndmask_b32_e32 v66, v67, v66, vcc
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_cndmask_b32_e32 v65, v65, v72, vcc
	v_sub_u32_e32 v64, vcc, v64, v67
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v65, v65, v68, vcc
	v_cndmask_b32_e32 v67, v68, v71, vcc
	v_cndmask_b32_e32 v68, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v66, v69, v66, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_sub_u32_e32 v64, vcc, v64, v69
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v65, v65, v67, vcc
	v_cndmask_b32_e32 v67, v67, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e32 v66, v70, v66, vcc
	v_sub_u32_e32 v64, vcc, v64, v69
	v_sub_u32_e32 v69, vcc, 32, v64
	v_alignbit_b32 v70, v65, v67, v69
	v_cmp_ne_u32_e32 vcc, 0, v64
	v_alignbit_b32 v71, v67, v68, v69
	v_cndmask_b32_e32 v64, v65, v70, vcc
	v_alignbit_b32 v69, v68, v66, v69
	v_cndmask_b32_e32 v65, v67, v71, vcc
	v_cndmask_b32_e32 v67, v68, v69, vcc
	v_alignbit_b32 v69, v64, v65, 30
	v_bfe_i32 v70, v64, 29, 1
	v_alignbit_b32 v65, v65, v67, 30
	v_alignbit_b32 v66, v67, v66, 30
	v_xor_b32_e32 v69, v70, v69
	v_xor_b32_e32 v65, v70, v65
	v_xor_b32_e32 v66, v70, v66
	v_ffbh_u32_e32 v70, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, 32, v70, vcc
	v_lshrrev_b32_e32 v68, 29, v64
	v_sub_u32_e32 v71, vcc, 31, v70
	v_alignbit_b32 v69, v69, v65, v71
	v_alignbit_b32 v65, v65, v66, v71
	v_lshlrev_b32_e32 v68, 31, v68
	v_lshlrev_b32_e32 v66, 23, v70
	v_sub_u32_e32 v66, vcc, v68, v66
	v_lshrrev_b32_e32 v71, 9, v69
	v_or_b32_e32 v66, v66, v71
	v_add_u32_e32 v71, vcc, 0.5, v66
	v_alignbit_b32 v66, v69, v65, 9
	v_ffbh_u32_e32 v69, v66
	v_cmp_ne_u32_e32 vcc, 0, v66
	v_cndmask_b32_e32 v69, 32, v69, vcc
	v_sub_u32_e32 v72, vcc, 31, v69
	v_alignbit_b32 v65, v66, v65, v72
	v_add_u32_e32 v66, vcc, v69, v70
	v_lshlrev_b32_e32 v66, 23, v66
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v66, vcc, s2, v66
	v_or_b32_e32 v66, v66, v68
	v_lshrrev_b32_e32 v65, 9, v65
	v_or_b32_e32 v65, v66, v65
	v_and_b32_e32 v66, 0xbffff000, v71
	v_mul_f32_e32 v69, 0xbfc90fda, v71
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v69, s2, v66
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v68, v71, v66
	v_mac_f32_e32 v69, s3, v66
	v_mac_f32_e32 v69, s2, v68
	v_mul_f32_e32 v66, 0x33a22168, v71
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v69, s3, v68
	v_mac_f32_e32 v66, s2, v65
	v_add_f32_e32 v66, v69, v66
	v_bfe_u32 v67, v64, 29, 1
	v_lshrrev_b32_e32 v64, 30, v64
	v_mac_f32_e32 v66, s2, v71
	v_add_u32_e32 v67, vcc, v67, v64
BB0_38:                                 ; %Flow522
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_40
	s_cbranch_execz BB0_40
BB0_39:
	v_mul_f32_e32 v64, 0x3f22f983, v18
	v_rndne_f32_e32 v64, v64
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v65, 0xfffff000, v64
	v_mul_f32_e32 v67, s2, v64
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v67, v65, s3, -v67
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v68, -v64, s2, v18
	v_sub_f32_e32 v66, v64, v65
	v_mac_f32_e32 v67, s6, v65
	v_mac_f32_e32 v67, s3, v66
	v_sub_f32_e32 v18, v18, v68
	v_mad_f32 v18, -v64, s2, v18
	v_mac_f32_e32 v67, s6, v66
	v_sub_f32_e32 v18, v18, v67
	v_add_f32_e32 v18, v68, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v68, -v64, s2, v18
	v_sub_f32_e32 v18, v18, v68
	v_mad_f32 v18, -v64, s2, v18
	v_mul_f32_e32 v69, 0xb3a22168, v64
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v69, s2, v65
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v69, s3, v65
	v_mac_f32_e32 v69, s2, v66
	v_mac_f32_e32 v69, s3, v66
	v_cvt_i32_f32_e32 v67, v64
	v_sub_f32_e32 v18, v18, v69
	v_add_f32_e32 v66, v68, v18
	v_mac_f32_e32 v66, 0xa7c234c4, v64
BB0_40:                                 ; %_Z3sinf.exit21
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbfa2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[64:65], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr68
                                        ; implicit-def: $vgpr69
	v_cvt_f32_f64_e32 v64, v[64:65]
	v_and_b32_e32 v65, s0, v64
	v_and_b32_e32 v18, s0, v64
	v_cmp_nlt_f32_e64 s[0:1], |v64|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_42
	s_cbranch_execz BB0_42
BB0_41:
	v_and_b32_e32 v69, 0x7fffff, v64
	v_or_b32_e32 v69, 0x800000, v69
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v70, v69, s6
	v_mul_lo_u32 v71, v69, s7
	v_mul_hi_u32 v73, v69, s7
	v_mul_lo_u32 v72, v69, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_lo_u32 v74, v69, s6
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v71, v73
	v_mul_hi_u32 v73, v69, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v71, vcc, v71, v74
	v_mul_lo_u32 v75, v69, s6
	v_cndmask_b32_e64 v74, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v74, v73
	v_mul_hi_u32 v74, v69, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v73, vcc, v73, v75
	v_mul_lo_u32 v76, v69, s6
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_hi_u32 v75, v69, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v74, vcc, v74, v76
	v_mul_lo_u32 v77, v69, s6
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v69, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v78, v69, s6
	v_add_u32_e32 v75, vcc, v75, v77
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_mul_hi_u32 v69, v69, s6
	v_add_u32_e32 v76, vcc, v77, v76
	v_add_u32_e32 v76, vcc, v76, v78
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_lshrrev_b32_e32 v68, 23, v65
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v68, vcc, s6, v68
	v_add_u32_e32 v69, vcc, v77, v69
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v69, v69, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e64 v72, 0, 32, vcc
	v_sub_u32_e32 v68, vcc, v68, v72
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v72, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v71, vcc
	v_cndmask_b32_e32 v70, v71, v70, vcc
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_cndmask_b32_e32 v69, v69, v76, vcc
	v_sub_u32_e32 v68, vcc, v68, v71
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v69, v69, v72, vcc
	v_cndmask_b32_e32 v71, v72, v75, vcc
	v_cndmask_b32_e32 v72, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v70, v73, v70, vcc
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_sub_u32_e32 v68, vcc, v68, v73
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_cndmask_b32_e32 v69, v69, v71, vcc
	v_cndmask_b32_e32 v71, v71, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e32 v70, v74, v70, vcc
	v_sub_u32_e32 v68, vcc, v68, v73
	v_sub_u32_e32 v73, vcc, 32, v68
	v_alignbit_b32 v74, v69, v71, v73
	v_alignbit_b32 v75, v71, v72, v73
	v_cmp_ne_u32_e32 vcc, 0, v68
	v_cndmask_b32_e32 v69, v69, v74, vcc
	v_alignbit_b32 v73, v72, v70, v73
	v_cndmask_b32_e32 v68, v71, v75, vcc
	v_cndmask_b32_e32 v71, v72, v73, vcc
	v_alignbit_b32 v73, v69, v68, 30
	v_bfe_i32 v74, v69, 29, 1
	v_alignbit_b32 v68, v68, v71, 30
	v_alignbit_b32 v70, v71, v70, 30
	v_xor_b32_e32 v73, v74, v73
	v_xor_b32_e32 v68, v74, v68
	v_xor_b32_e32 v70, v74, v70
	v_ffbh_u32_e32 v74, v73
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v74, 32, v74, vcc
	v_lshrrev_b32_e32 v72, 29, v69
	v_sub_u32_e32 v75, vcc, 31, v74
	v_alignbit_b32 v73, v73, v68, v75
	v_alignbit_b32 v68, v68, v70, v75
	v_lshlrev_b32_e32 v72, 31, v72
	v_lshlrev_b32_e32 v70, 23, v74
	v_lshrrev_b32_e32 v75, 9, v73
	v_sub_u32_e32 v70, vcc, v72, v70
	v_or_b32_e32 v70, v70, v75
	v_alignbit_b32 v73, v73, v68, 9
	v_add_u32_e32 v70, vcc, 0.5, v70
	v_ffbh_u32_e32 v75, v73
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v75, 32, v75, vcc
	v_sub_u32_e32 v76, vcc, 31, v75
	v_alignbit_b32 v68, v73, v68, v76
	v_add_u32_e32 v73, vcc, v75, v74
	v_lshlrev_b32_e32 v73, 23, v73
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v73, vcc, s6, v73
	v_or_b32_e32 v72, v73, v72
	v_lshrrev_b32_e32 v68, 9, v68
	v_or_b32_e32 v68, v72, v68
	v_and_b32_e32 v72, 0xbffff000, v70
	v_mul_f32_e32 v74, 0xbfc90fda, v70
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v74, s6, v72
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v73, v70, v72
	v_mac_f32_e32 v74, s7, v72
	v_mac_f32_e32 v74, s6, v73
	v_mul_f32_e32 v72, 0x33a22168, v70
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v74, s7, v73
	v_mac_f32_e32 v72, s6, v68
	v_add_f32_e32 v68, v74, v72
	v_bfe_u32 v71, v69, 29, 1
	v_lshrrev_b32_e32 v69, 30, v69
	v_mac_f32_e32 v68, s6, v70
	v_add_u32_e32 v69, vcc, v71, v69
BB0_42:                                 ; %Flow521
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_44
	s_cbranch_execz BB0_44
BB0_43:
	v_mul_f32_e32 v68, 0x3f22f983, v18
	v_rndne_f32_e32 v70, v68
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v68, 0xfffff000, v70
	v_mul_f32_e32 v71, s6, v70
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v71, v68, s7, -v71
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v72, -v70, s6, v18
	v_sub_f32_e32 v69, v70, v68
	v_mac_f32_e32 v71, s8, v68
	v_mac_f32_e32 v71, s7, v69
	v_sub_f32_e32 v73, v18, v72
	v_mad_f32 v73, -v70, s6, v73
	v_mac_f32_e32 v71, s8, v69
	v_sub_f32_e32 v71, v73, v71
	v_add_f32_e32 v71, v72, v71
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v72, -v70, s6, v71
	v_sub_f32_e32 v71, v71, v72
	v_mad_f32 v71, -v70, s6, v71
	v_mul_f32_e32 v73, 0xb3a22168, v70
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v73, s6, v68
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v73, s7, v68
	v_mac_f32_e32 v73, s6, v69
	v_mac_f32_e32 v73, s7, v69
	v_cvt_i32_f32_e32 v69, v70
	v_sub_f32_e32 v68, v71, v73
	v_add_f32_e32 v68, v72, v68
	v_mac_f32_e32 v68, 0xa7c234c4, v70
BB0_44:                                 ; %_Z3cosf.exit20
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr70
                                        ; implicit-def: $vgpr71
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_46
	s_cbranch_execz BB0_46
BB0_45:
	v_and_b32_e32 v71, 0x7fffff, v64
	v_or_b32_e32 v71, 0x800000, v71
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v72, v71, s2
	v_mul_lo_u32 v73, v71, s3
	v_mul_hi_u32 v75, v71, s3
	v_mul_lo_u32 v74, v71, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v72, vcc, v73, v72
	v_mul_lo_u32 v76, v71, s2
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v73, v75
	v_mul_hi_u32 v75, v71, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v73, vcc, v73, v76
	v_mul_lo_u32 v77, v71, s2
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v71, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_lo_u32 v78, v71, s2
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_hi_u32 v77, v71, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v76, vcc, v76, v78
	v_mul_lo_u32 v79, v71, s2
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v71, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v80, v71, s2
	v_add_u32_e32 v77, vcc, v77, v79
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_mul_hi_u32 v71, v71, s2
	v_add_u32_e32 v78, vcc, v79, v78
	v_add_u32_e32 v78, vcc, v78, v80
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_lshrrev_b32_e32 v70, 23, v65
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v70, vcc, s2, v70
	v_add_u32_e32 v71, vcc, v79, v71
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v71, v71, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e64 v74, 0, 32, vcc
	v_sub_u32_e32 v70, vcc, v70, v74
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v74, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v73, vcc
	v_cndmask_b32_e32 v72, v73, v72, vcc
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_cndmask_b32_e32 v71, v71, v78, vcc
	v_sub_u32_e32 v70, vcc, v70, v73
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v71, v71, v74, vcc
	v_cndmask_b32_e32 v73, v74, v77, vcc
	v_cndmask_b32_e32 v74, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v72, v75, v72, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_sub_u32_e32 v70, vcc, v70, v75
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v71, v71, v73, vcc
	v_cndmask_b32_e32 v73, v73, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v72, v76, v72, vcc
	v_sub_u32_e32 v70, vcc, v70, v75
	v_sub_u32_e32 v75, vcc, 32, v70
	v_alignbit_b32 v76, v71, v73, v75
	v_alignbit_b32 v77, v73, v74, v75
	v_cmp_ne_u32_e32 vcc, 0, v70
	v_cndmask_b32_e32 v71, v71, v76, vcc
	v_alignbit_b32 v75, v74, v72, v75
	v_cndmask_b32_e32 v70, v73, v77, vcc
	v_cndmask_b32_e32 v73, v74, v75, vcc
	v_alignbit_b32 v75, v71, v70, 30
	v_bfe_i32 v76, v71, 29, 1
	v_alignbit_b32 v70, v70, v73, 30
	v_alignbit_b32 v72, v73, v72, 30
	v_xor_b32_e32 v75, v76, v75
	v_xor_b32_e32 v70, v76, v70
	v_xor_b32_e32 v72, v76, v72
	v_ffbh_u32_e32 v76, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, 32, v76, vcc
	v_lshrrev_b32_e32 v74, 29, v71
	v_sub_u32_e32 v77, vcc, 31, v76
	v_alignbit_b32 v75, v75, v70, v77
	v_alignbit_b32 v70, v70, v72, v77
	v_lshlrev_b32_e32 v74, 31, v74
	v_lshlrev_b32_e32 v72, 23, v76
	v_lshrrev_b32_e32 v77, 9, v75
	v_sub_u32_e32 v72, vcc, v74, v72
	v_or_b32_e32 v72, v72, v77
	v_alignbit_b32 v75, v75, v70, 9
	v_add_u32_e32 v72, vcc, 0.5, v72
	v_ffbh_u32_e32 v77, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v77, 32, v77, vcc
	v_sub_u32_e32 v78, vcc, 31, v77
	v_alignbit_b32 v70, v75, v70, v78
	v_add_u32_e32 v75, vcc, v77, v76
	v_lshlrev_b32_e32 v75, 23, v75
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v75, vcc, s2, v75
	v_or_b32_e32 v74, v75, v74
	v_lshrrev_b32_e32 v70, 9, v70
	v_or_b32_e32 v70, v74, v70
	v_and_b32_e32 v74, 0xbffff000, v72
	v_mul_f32_e32 v76, 0xbfc90fda, v72
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v76, s2, v74
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v75, v72, v74
	v_mac_f32_e32 v76, s3, v74
	v_mac_f32_e32 v76, s2, v75
	v_mul_f32_e32 v74, 0x33a22168, v72
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v76, s3, v75
	v_mac_f32_e32 v74, s2, v70
	v_add_f32_e32 v70, v76, v74
	v_bfe_u32 v73, v71, 29, 1
	v_lshrrev_b32_e32 v71, 30, v71
	v_mac_f32_e32 v70, s2, v72
	v_add_u32_e32 v71, vcc, v73, v71
BB0_46:                                 ; %Flow520
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB0_48
	s_cbranch_execz BB0_48
BB0_47:
	v_mul_f32_e32 v70, 0x3f22f983, v18
	v_rndne_f32_e32 v72, v70
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v70, 0xfffff000, v72
	v_mul_f32_e32 v73, s2, v72
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v73, v70, s3, -v73
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v74, -v72, s2, v18
	v_sub_f32_e32 v71, v72, v70
	v_mac_f32_e32 v73, s6, v70
	v_mac_f32_e32 v73, s3, v71
	v_sub_f32_e32 v18, v18, v74
	v_mad_f32 v18, -v72, s2, v18
	v_mac_f32_e32 v73, s6, v71
	v_sub_f32_e32 v18, v18, v73
	v_add_f32_e32 v18, v74, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v73, -v72, s2, v18
	v_sub_f32_e32 v18, v18, v73
	v_mad_f32 v18, -v72, s2, v18
	v_mul_f32_e32 v74, 0xb3a22168, v72
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v74, s2, v70
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v74, s3, v70
	v_mac_f32_e32 v74, s2, v71
	v_mac_f32_e32 v74, s3, v71
	v_cvt_i32_f32_e32 v71, v72
	v_sub_f32_e32 v18, v18, v74
	v_add_f32_e32 v70, v73, v18
	v_mac_f32_e32 v70, 0xa7c234c4, v72
BB0_48:                                 ; %_Z3sinf.exit19
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0xbfb5fdbb
	s_mov_b32 s0, 0xe9bba775
	v_mul_f64 v[42:43], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr72
                                        ; implicit-def: $vgpr73
	v_cvt_f32_f64_e32 v42, v[42:43]
	v_and_b32_e32 v43, s0, v42
	v_and_b32_e32 v18, s0, v42
	v_cmp_nlt_f32_e64 s[0:1], |v42|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB0_50
	s_cbranch_execz BB0_50
BB0_49:
	v_and_b32_e32 v73, 0x7fffff, v42
	v_or_b32_e32 v73, 0x800000, v73
	s_mov_b32 s6, 0xfe5163ab
	s_mov_b32 s7, 0x3c439041
	v_mul_hi_u32 v74, v73, s6
	v_mul_lo_u32 v75, v73, s7
	v_mul_hi_u32 v77, v73, s7
	v_mul_lo_u32 v76, v73, s6
	s_mov_b32 s6, 0xdb629599
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_lo_u32 v78, v73, s6
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_hi_u32 v77, v73, s6
	s_mov_b32 s6, 0xf534ddc0
	v_add_u32_e32 v75, vcc, v75, v78
	v_mul_lo_u32 v79, v73, s6
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v73, s6
	s_mov_b32 s6, 0xfc2757d1
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_lo_u32 v80, v73, s6
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_hi_u32 v79, v73, s6
	s_mov_b32 s6, 0x4e441529
	v_add_u32_e32 v78, vcc, v78, v80
	v_mul_lo_u32 v81, v73, s6
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v73, s6
	s_mov_b32 s6, 0xa2f9836e
	v_mul_lo_u32 v82, v73, s6
	v_add_u32_e32 v79, vcc, v79, v81
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_mul_hi_u32 v73, v73, s6
	v_add_u32_e32 v80, vcc, v81, v80
	v_add_u32_e32 v80, vcc, v80, v82
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_lshrrev_b32_e32 v72, 23, v43
	s_movk_i32 s6, 0xff88
	v_add_u32_e32 v72, vcc, s6, v72
	v_add_u32_e32 v73, vcc, v81, v73
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v73, v73, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_sub_u32_e32 v72, vcc, v72, v76
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v76, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v74, v75, v74, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v73, v73, v80, vcc
	v_sub_u32_e32 v72, vcc, v72, v75
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v73, v73, v76, vcc
	v_cndmask_b32_e32 v75, v76, v79, vcc
	v_cndmask_b32_e32 v76, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v74, v77, v74, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_sub_u32_e32 v72, vcc, v72, v77
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v73, v73, v75, vcc
	v_cndmask_b32_e32 v75, v75, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v74, v78, v74, vcc
	v_sub_u32_e32 v72, vcc, v72, v77
	v_sub_u32_e32 v77, vcc, 32, v72
	v_alignbit_b32 v78, v73, v75, v77
	v_alignbit_b32 v79, v75, v76, v77
	v_cmp_ne_u32_e32 vcc, 0, v72
	v_cndmask_b32_e32 v73, v73, v78, vcc
	v_alignbit_b32 v77, v76, v74, v77
	v_cndmask_b32_e32 v72, v75, v79, vcc
	v_cndmask_b32_e32 v75, v76, v77, vcc
	v_alignbit_b32 v77, v73, v72, 30
	v_bfe_i32 v78, v73, 29, 1
	v_alignbit_b32 v72, v72, v75, 30
	v_alignbit_b32 v74, v75, v74, 30
	v_xor_b32_e32 v77, v78, v77
	v_xor_b32_e32 v72, v78, v72
	v_xor_b32_e32 v74, v78, v74
	v_ffbh_u32_e32 v78, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v78, 32, v78, vcc
	v_lshrrev_b32_e32 v76, 29, v73
	v_sub_u32_e32 v79, vcc, 31, v78
	v_alignbit_b32 v77, v77, v72, v79
	v_alignbit_b32 v72, v72, v74, v79
	v_lshlrev_b32_e32 v76, 31, v76
	v_lshlrev_b32_e32 v74, 23, v78
	v_lshrrev_b32_e32 v79, 9, v77
	v_sub_u32_e32 v74, vcc, v76, v74
	v_or_b32_e32 v74, v74, v79
	v_alignbit_b32 v77, v77, v72, 9
	v_add_u32_e32 v74, vcc, 0.5, v74
	v_ffbh_u32_e32 v79, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v79, 32, v79, vcc
	v_sub_u32_e32 v80, vcc, 31, v79
	v_alignbit_b32 v72, v77, v72, v80
	v_add_u32_e32 v77, vcc, v79, v78
	v_lshlrev_b32_e32 v77, 23, v77
	s_mov_b32 s6, 0x33000000
	v_sub_u32_e32 v77, vcc, s6, v77
	v_or_b32_e32 v76, v77, v76
	v_lshrrev_b32_e32 v72, 9, v72
	v_or_b32_e32 v72, v76, v72
	v_and_b32_e32 v76, 0xbffff000, v74
	v_mul_f32_e32 v78, 0xbfc90fda, v74
	s_mov_b32 s6, 0x3fc90000
	v_mac_f32_e32 v78, s6, v76
	s_mov_b32 s7, 0x39fda000
	v_sub_f32_e32 v77, v74, v76
	v_mac_f32_e32 v78, s7, v76
	v_mac_f32_e32 v78, s6, v77
	v_mul_f32_e32 v76, 0x33a22168, v74
	s_mov_b32 s6, 0x3fc90fda
	v_mac_f32_e32 v78, s7, v77
	v_mac_f32_e32 v76, s6, v72
	v_add_f32_e32 v72, v78, v76
	v_bfe_u32 v75, v73, 29, 1
	v_lshrrev_b32_e32 v73, 30, v73
	v_mac_f32_e32 v72, s6, v74
	v_add_u32_e32 v73, vcc, v75, v73
BB0_50:                                 ; %Flow519
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_52
	s_cbranch_execz BB0_52
BB0_51:
	v_mul_f32_e32 v72, 0x3f22f983, v18
	v_rndne_f32_e32 v74, v72
	s_mov_b32 s6, 0x3fc90fda
	v_and_b32_e32 v72, 0xfffff000, v74
	v_mul_f32_e32 v75, s6, v74
	s_mov_b32 s7, 0x3fc90000
	v_mad_f32 v75, v72, s7, -v75
	s_mov_b32 s8, 0x39fda000
	v_mad_f32 v76, -v74, s6, v18
	v_sub_f32_e32 v73, v74, v72
	v_mac_f32_e32 v75, s8, v72
	v_mac_f32_e32 v75, s7, v73
	v_sub_f32_e32 v77, v18, v76
	v_mad_f32 v77, -v74, s6, v77
	v_mac_f32_e32 v75, s8, v73
	v_sub_f32_e32 v75, v77, v75
	v_add_f32_e32 v75, v76, v75
	s_mov_b32 s6, 0x33a22168
	v_mad_f32 v76, -v74, s6, v75
	v_sub_f32_e32 v75, v75, v76
	v_mad_f32 v75, -v74, s6, v75
	v_mul_f32_e32 v77, 0xb3a22168, v74
	s_mov_b32 s6, 0x33a22000
	v_mac_f32_e32 v77, s6, v72
	s_mov_b32 s7, 0x2c340000
	v_mac_f32_e32 v77, s7, v72
	v_mac_f32_e32 v77, s6, v73
	v_mac_f32_e32 v77, s7, v73
	v_cvt_i32_f32_e32 v73, v74
	v_sub_f32_e32 v72, v75, v77
	v_add_f32_e32 v72, v76, v72
	v_mac_f32_e32 v72, 0xa7c234c4, v74
BB0_52:                                 ; %_Z3cosf.exit18
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr74
                                        ; implicit-def: $vgpr75
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB0_54
	s_cbranch_execz BB0_54
BB0_53:
	v_and_b32_e32 v75, 0x7fffff, v42
	v_or_b32_e32 v75, 0x800000, v75
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v76, v75, s2
	v_mul_lo_u32 v77, v75, s3
	v_mul_hi_u32 v79, v75, s3
	v_mul_lo_u32 v78, v75, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_lo_u32 v80, v75, s2
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_hi_u32 v79, v75, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v77, vcc, v77, v80
	v_mul_lo_u32 v81, v75, s2
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v75, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_lo_u32 v82, v75, s2
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_add_u32_e32 v80, vcc, v81, v80
	v_mul_hi_u32 v81, v75, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v80, vcc, v80, v82
	v_mul_lo_u32 v83, v75, s2
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v75, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v84, v75, s2
	v_add_u32_e32 v81, vcc, v81, v83
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_mul_hi_u32 v75, v75, s2
	v_add_u32_e32 v82, vcc, v83, v82
	v_add_u32_e32 v82, vcc, v82, v84
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_lshrrev_b32_e32 v74, 23, v43
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v74, vcc, s2, v74
	v_add_u32_e32 v75, vcc, v83, v75
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v75, v75, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e64 v78, 0, 32, vcc
	v_sub_u32_e32 v74, vcc, v74, v78
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v78, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v77, vcc
	v_cndmask_b32_e32 v76, v77, v76, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v75, v75, v82, vcc
	v_sub_u32_e32 v74, vcc, v74, v77
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v75, v75, v78, vcc
	v_cndmask_b32_e32 v77, v78, v81, vcc
	v_cndmask_b32_e32 v78, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v76, v79, v76, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_sub_u32_e32 v74, vcc, v74, v79
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v75, v75, v77, vcc
	v_cndmask_b32_e32 v77, v77, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e32 v76, v80, v76, vcc
	v_sub_u32_e32 v74, vcc, v74, v79
	v_sub_u32_e32 v79, vcc, 32, v74
	v_alignbit_b32 v80, v75, v77, v79
	v_alignbit_b32 v81, v77, v78, v79
	v_cmp_ne_u32_e32 vcc, 0, v74
	v_cndmask_b32_e32 v75, v75, v80, vcc
	v_alignbit_b32 v79, v78, v76, v79
	v_cndmask_b32_e32 v74, v77, v81, vcc
	v_cndmask_b32_e32 v77, v78, v79, vcc
	v_alignbit_b32 v79, v75, v74, 30
	v_bfe_i32 v80, v75, 29, 1
	v_alignbit_b32 v74, v74, v77, 30
	v_alignbit_b32 v76, v77, v76, 30
	v_xor_b32_e32 v79, v80, v79
	v_xor_b32_e32 v74, v80, v74
	v_xor_b32_e32 v76, v80, v76
	v_ffbh_u32_e32 v80, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v80, 32, v80, vcc
	v_lshrrev_b32_e32 v78, 29, v75
	v_sub_u32_e32 v81, vcc, 31, v80
	v_alignbit_b32 v79, v79, v74, v81
	v_alignbit_b32 v74, v74, v76, v81
	v_lshlrev_b32_e32 v78, 31, v78
	v_lshlrev_b32_e32 v76, 23, v80
	v_lshrrev_b32_e32 v81, 9, v79
	v_sub_u32_e32 v76, vcc, v78, v76
	v_or_b32_e32 v76, v76, v81
	v_alignbit_b32 v79, v79, v74, 9
	v_add_u32_e32 v76, vcc, 0.5, v76
	v_ffbh_u32_e32 v81, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v81, 32, v81, vcc
	v_sub_u32_e32 v82, vcc, 31, v81
	v_alignbit_b32 v74, v79, v74, v82
	v_add_u32_e32 v79, vcc, v81, v80
	v_lshlrev_b32_e32 v79, 23, v79
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v79, vcc, s2, v79
	v_or_b32_e32 v78, v79, v78
	v_lshrrev_b32_e32 v74, 9, v74
	v_or_b32_e32 v74, v78, v74
	v_and_b32_e32 v78, 0xbffff000, v76
	v_mul_f32_e32 v80, 0xbfc90fda, v76
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v80, s2, v78
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v79, v76, v78
	v_mac_f32_e32 v80, s3, v78
	v_mac_f32_e32 v80, s2, v79
	v_mul_f32_e32 v78, 0x33a22168, v76
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v80, s3, v79
	v_mac_f32_e32 v78, s2, v74
	v_add_f32_e32 v74, v80, v78
	v_bfe_u32 v77, v75, 29, 1
	v_lshrrev_b32_e32 v75, 30, v75
	v_mac_f32_e32 v74, s2, v76
	v_add_u32_e32 v75, vcc, v77, v75
BB0_54:                                 ; %Flow518
	s_or_saveexec_b64 s[2:3], s[0:1]
	s_load_dword s0, s[4:5], 0x8
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_56
	s_cbranch_execz BB0_56
BB0_55:
	v_mul_f32_e32 v74, 0x3f22f983, v18
	v_rndne_f32_e32 v76, v74
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v74, 0xfffff000, v76
	v_mul_f32_e32 v77, s1, v76
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v77, v74, s4, -v77
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v78, -v76, s1, v18
	v_sub_f32_e32 v75, v76, v74
	v_mac_f32_e32 v77, s5, v74
	v_mac_f32_e32 v77, s4, v75
	v_sub_f32_e32 v18, v18, v78
	v_mad_f32 v18, -v76, s1, v18
	v_mac_f32_e32 v77, s5, v75
	v_sub_f32_e32 v18, v18, v77
	v_add_f32_e32 v18, v78, v18
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v77, -v76, s1, v18
	v_sub_f32_e32 v18, v18, v77
	v_mad_f32 v18, -v76, s1, v18
	v_mul_f32_e32 v78, 0xb3a22168, v76
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v78, s1, v74
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v78, s4, v74
	v_mac_f32_e32 v78, s1, v75
	v_mac_f32_e32 v78, s4, v75
	v_cvt_i32_f32_e32 v75, v76
	v_sub_f32_e32 v18, v18, v78
	v_add_f32_e32 v74, v77, v18
	v_mac_f32_e32 v74, 0xa7c234c4, v76
BB0_56:                                 ; %_Z3sinf.exit17
	s_or_b64 exec, exec, s[2:3]
	s_waitcnt vmcnt(2) lgkmcnt(0)
	v_add_f32_e32 v77, v34, v32
	v_add_f32_e32 v78, v35, v33
	v_sub_f32_e32 v32, v34, v32
	v_sub_f32_e32 v33, v35, v33
	v_add_f32_e32 v34, v28, v30
	v_add_f32_e32 v35, v29, v31
	v_sub_f32_e32 v28, v28, v30
	v_sub_f32_e32 v29, v29, v31
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v30, v24, v26
	v_add_f32_e32 v31, v25, v27
	v_sub_f32_e32 v24, v24, v26
	v_sub_f32_e32 v25, v25, v27
	v_add_f32_e32 v26, v20, v22
	v_add_f32_e32 v27, v21, v23
	v_sub_f32_e32 v20, v20, v22
	v_sub_f32_e32 v21, v21, v23
	s_mov_b32 s3, 0xb94c1982
	v_mul_f32_e32 v22, v36, v36
	v_mov_b32_e32 v23, 0x3c0881c4
	v_mad_f32 v79, s3, v22, v23
	v_madak_f32 v79, v22, v79, 0xbe2aaa9d
	v_mul_f32_e32 v79, v22, v79
	v_mac_f32_e32 v36, v36, v79
	s_mov_b32 s2, 0x37d75334
	v_mov_b32_e32 v79, 0xbab64f3b
	v_mad_f32 v80, s2, v22, v79
	v_madak_f32 v80, v22, v80, 0x3d2aabf7
	v_madak_f32 v80, v22, v80, 0xbf000004
	v_mad_f32 v22, v22, v80, 1.0
	v_and_b32_e32 v80, 1, v37
	v_cmp_eq_u32_e32 vcc, 0, v80
	v_cndmask_b32_e64 v22, -v36, v22, vcc
	v_lshlrev_b32_e32 v36, 30, v37
	v_and_b32_e32 v36, 0x80000000, v36
	v_xor_b32_e32 v22, v36, v22
	v_mul_f32_e32 v36, v40, v40
	v_mad_f32 v37, s3, v36, v23
	v_madak_f32 v37, v36, v37, 0xbe2aaa9d
	v_mul_f32_e32 v37, v36, v37
	v_mac_f32_e32 v40, v40, v37
	v_mad_f32 v37, s2, v36, v79
	v_madak_f32 v37, v36, v37, 0x3d2aabf7
	v_madak_f32 v37, v36, v37, 0xbf000004
	v_mad_f32 v36, v36, v37, 1.0
	v_and_b32_e32 v37, 1, v41
	v_cmp_eq_u32_e32 vcc, 0, v37
	v_lshlrev_b32_e32 v37, 30, v41
	v_xor_b32_e32 v17, v37, v17
	v_bfrev_b32_e32 v37, 1
	v_cndmask_b32_e32 v36, v36, v40, vcc
	v_and_b32_e32 v17, v37, v17
	s_mov_b32 s1, 0x7f7fffff
	v_xor_b32_e32 v17, v17, v36
	v_add_f32_e32 v80, v35, v27
	v_add_f32_e32 v40, v78, v31
	v_mov_b32_e32 v36, 0x7fc00000
	v_cmp_lt_u32_e32 vcc, s1, v19
	v_cndmask_b32_e32 v19, v22, v36, vcc
	v_add_f32_e32 v41, v34, v26
	v_add_f32_e32 v22, v77, v30
	v_cndmask_b32_e32 v17, v17, v36, vcc
	v_sub_f32_e32 v82, v40, v80
	v_mul_f32_e32 v83, v17, v82
	v_sub_f32_e32 v81, v22, v41
	v_mul_f32_e32 v82, v82, v19
	v_sub_f32_e32 v26, v34, v26
	v_sub_f32_e32 v27, v35, v27
	v_mac_f32_e32 v82, v81, v17
	v_sub_f32_e32 v17, v77, v30
	v_mad_f32 v30, 0, v26, v27
	v_mad_f32 v26, v27, 0, -v26
	v_mul_f32_e32 v27, v44, v44
	v_mad_f32 v83, v81, v19, -v83
	v_sub_f32_e32 v19, v78, v31
	v_mad_f32 v31, s3, v27, v23
	v_madak_f32 v31, v27, v31, 0xbe2aaa9d
	v_mul_f32_e32 v31, v27, v31
	v_mac_f32_e32 v44, v44, v31
	v_mad_f32 v31, s2, v27, v79
	v_madak_f32 v31, v27, v31, 0x3d2aabf7
	v_madak_f32 v31, v27, v31, 0xbf000004
	v_mad_f32 v27, v27, v31, 1.0
	v_and_b32_e32 v31, 1, v45
	v_cmp_eq_u32_e32 vcc, 0, v31
	v_lshlrev_b32_e32 v31, 30, v45
	v_cndmask_b32_e64 v27, -v44, v27, vcc
	v_and_b32_e32 v31, v37, v31
	v_xor_b32_e32 v27, v31, v27
	v_mul_f32_e32 v31, v48, v48
	v_mad_f32 v34, s3, v31, v23
	v_madak_f32 v34, v31, v34, 0xbe2aaa9d
	v_mul_f32_e32 v34, v31, v34
	v_mac_f32_e32 v48, v48, v34
	v_mad_f32 v34, s2, v31, v79
	v_madak_f32 v34, v31, v34, 0x3d2aabf7
	v_madak_f32 v34, v31, v34, 0xbf000004
	v_mad_f32 v31, v31, v34, 1.0
	v_and_b32_e32 v34, 1, v49
	v_cmp_eq_u32_e32 vcc, 0, v34
	v_lshlrev_b32_e32 v34, 30, v49
	v_xor_b32_e32 v34, v34, v38
	v_cndmask_b32_e32 v31, v31, v48, vcc
	v_and_b32_e32 v34, v37, v34
	v_xor_b32_e32 v31, v34, v31
	v_cmp_lt_u32_e32 vcc, s1, v39
	v_add_f32_e32 v35, v19, v26
	v_cndmask_b32_e32 v31, v31, v36, vcc
	v_add_f32_e32 v34, v17, v30
	v_sub_f32_e32 v19, v19, v26
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_mul_f32_e32 v38, v31, v35
	v_mul_f32_e32 v26, v50, v50
	v_mul_f32_e32 v35, v35, v27
	v_mad_f32 v38, v34, v27, -v38
	v_mad_f32 v27, s3, v26, v23
	v_madak_f32 v27, v26, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v26, v27
	v_mac_f32_e32 v50, v50, v27
	v_mad_f32 v27, s2, v26, v79
	v_madak_f32 v27, v26, v27, 0x3d2aabf7
	v_madak_f32 v27, v26, v27, 0xbf000004
	v_mad_f32 v26, v26, v27, 1.0
	v_and_b32_e32 v27, 1, v51
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v51
	v_cndmask_b32_e64 v26, -v50, v26, vcc
	v_and_b32_e32 v27, v37, v27
	v_xor_b32_e32 v26, v27, v26
	v_mul_f32_e32 v27, v54, v54
	v_sub_f32_e32 v17, v17, v30
	v_mad_f32 v30, s3, v27, v23
	v_madak_f32 v30, v27, v30, 0xbe2aaa9d
	v_mul_f32_e32 v30, v27, v30
	v_mac_f32_e32 v54, v54, v30
	v_mad_f32 v30, s2, v27, v79
	v_madak_f32 v30, v27, v30, 0x3d2aabf7
	v_madak_f32 v30, v27, v30, 0xbf000004
	v_mad_f32 v27, v27, v30, 1.0
	v_and_b32_e32 v30, 1, v55
	v_cmp_eq_u32_e32 vcc, 0, v30
	v_lshlrev_b32_e32 v30, 30, v55
	v_xor_b32_e32 v30, v30, v46
	v_cndmask_b32_e32 v27, v27, v54, vcc
	v_and_b32_e32 v30, v37, v30
	v_cmp_lt_u32_e32 vcc, s1, v47
	v_xor_b32_e32 v27, v30, v27
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_cndmask_b32_e32 v26, v26, v36, vcc
	v_mul_f32_e32 v30, v27, v19
	v_mac_f32_e32 v35, v34, v31
	v_mul_f32_e32 v31, v19, v26
	v_mad_f32 v30, v17, v26, -v30
	v_mad_f32 v26, 0, v24, v25
	v_mad_f32 v24, v25, 0, -v24
	v_sub_f32_e32 v25, v21, v20
	v_sub_f32_e64 v20, -v20, v21
	v_mul_f32_e32 v21, v56, v56
	v_mac_f32_e32 v31, v17, v27
	v_mad_f32 v27, s3, v21, v23
	v_madak_f32 v27, v21, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v21, v27
	v_mac_f32_e32 v56, v56, v27
	v_mad_f32 v27, s2, v21, v79
	v_madak_f32 v27, v21, v27, 0x3d2aabf7
	v_madak_f32 v27, v21, v27, 0xbf000004
	v_mad_f32 v21, v21, v27, 1.0
	v_and_b32_e32 v27, 1, v57
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v57
	v_cndmask_b32_e64 v21, -v56, v21, vcc
	v_and_b32_e32 v27, v37, v27
	v_xor_b32_e32 v21, v27, v21
	v_mul_f32_e32 v27, v60, v60
	v_add_f32_e32 v17, v28, v29
	v_sub_f32_e32 v19, v29, v28
	v_mad_f32 v28, s3, v27, v23
	v_madak_f32 v28, v27, v28, 0xbe2aaa9d
	v_mul_f32_e32 v28, v27, v28
	v_mac_f32_e32 v60, v60, v28
	v_mad_f32 v28, s2, v27, v79
	v_madak_f32 v28, v27, v28, 0x3d2aabf7
	v_madak_f32 v28, v27, v28, 0xbf000004
	v_mad_f32 v27, v27, v28, 1.0
	v_and_b32_e32 v28, 1, v61
	v_cmp_eq_u32_e32 vcc, 0, v28
	v_lshlrev_b32_e32 v28, 30, v61
	s_mov_b32 s4, 0x3f3504f3
	v_xor_b32_e32 v28, v28, v52
	v_cndmask_b32_e32 v27, v27, v60, vcc
	v_and_b32_e32 v28, v37, v28
	v_mul_f32_e32 v20, s4, v20
	v_xor_b32_e32 v27, v28, v27
	v_cmp_lt_u32_e32 vcc, s1, v53
	v_mul_f32_e32 v25, s4, v25
	v_add_f32_e32 v29, v33, v24
	v_mad_f32 v39, s4, v19, v20
	v_add_f32_e32 v28, v32, v26
	v_mad_f32 v34, s4, v17, v25
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_add_f32_e32 v45, v29, v39
	v_cndmask_b32_e32 v21, v21, v36, vcc
	v_add_f32_e32 v44, v28, v34
	v_mul_f32_e32 v46, v27, v45
	v_mad_f32 v46, v44, v21, -v46
	v_mul_f32_e32 v21, v45, v21
	v_mac_f32_e32 v21, v44, v27
	v_sub_f32_e32 v27, v28, v34
	v_sub_f32_e32 v28, v29, v39
	v_mul_f32_e32 v29, v62, v62
	v_mad_f32 v34, s3, v29, v23
	v_madak_f32 v34, v29, v34, 0xbe2aaa9d
	v_mul_f32_e32 v34, v29, v34
	v_mac_f32_e32 v62, v62, v34
	v_mad_f32 v34, s2, v29, v79
	v_madak_f32 v34, v29, v34, 0x3d2aabf7
	v_madak_f32 v34, v29, v34, 0xbf000004
	v_mad_f32 v29, v29, v34, 1.0
	v_and_b32_e32 v34, 1, v63
	v_cmp_eq_u32_e32 vcc, 0, v34
	v_lshlrev_b32_e32 v34, 30, v63
	v_cndmask_b32_e64 v29, -v62, v29, vcc
	v_and_b32_e32 v34, v37, v34
	v_xor_b32_e32 v29, v34, v29
	v_mul_f32_e32 v34, v66, v66
	v_mad_f32 v39, s3, v34, v23
	v_madak_f32 v39, v34, v39, 0xbe2aaa9d
	v_mul_f32_e32 v39, v34, v39
	v_mad_f32 v17, v17, s4, -v25
	v_mad_f32 v19, v19, s4, -v20
	v_mac_f32_e32 v66, v66, v39
	v_mad_f32 v39, s2, v34, v79
	v_mad_f32 v20, 0, v17, v19
	v_mad_f32 v17, v19, 0, -v17
	v_mul_f32_e32 v19, v68, v68
	v_madak_f32 v39, v34, v39, 0x3d2aabf7
	v_mad_f32 v25, s3, v19, v23
	v_madak_f32 v39, v34, v39, 0xbf000004
	v_madak_f32 v25, v19, v25, 0xbe2aaa9d
	v_mad_f32 v34, v34, v39, 1.0
	v_and_b32_e32 v39, 1, v67
	v_mul_f32_e32 v25, v19, v25
	v_cmp_eq_u32_e32 vcc, 0, v39
	v_lshlrev_b32_e32 v39, 30, v67
	v_mac_f32_e32 v68, v68, v25
	v_mad_f32 v25, s2, v19, v79
	v_xor_b32_e32 v39, v39, v58
	v_madak_f32 v25, v19, v25, 0x3d2aabf7
	v_madak_f32 v25, v19, v25, 0xbf000004
	v_cndmask_b32_e32 v34, v34, v66, vcc
	v_and_b32_e32 v39, v37, v39
	v_cmp_lt_u32_e32 vcc, s1, v59
	v_xor_b32_e32 v34, v39, v34
	v_mad_f32 v19, v19, v25, 1.0
	v_and_b32_e32 v25, 1, v69
	v_cndmask_b32_e32 v29, v29, v36, vcc
	v_cndmask_b32_e32 v34, v34, v36, vcc
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v69
	v_cndmask_b32_e64 v19, -v68, v19, vcc
	v_and_b32_e32 v25, v37, v25
	v_mul_f32_e32 v39, v34, v28
	v_mul_f32_e32 v44, v28, v29
	v_xor_b32_e32 v19, v25, v19
	v_mul_f32_e32 v25, v70, v70
	v_mad_f32 v39, v27, v29, -v39
	v_mac_f32_e32 v44, v27, v34
	v_mad_f32 v27, s3, v25, v23
	v_madak_f32 v27, v25, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v25, v27
	v_mac_f32_e32 v70, v70, v27
	v_mad_f32 v27, s2, v25, v79
	v_madak_f32 v27, v25, v27, 0x3d2aabf7
	v_madak_f32 v27, v25, v27, 0xbf000004
	v_mad_f32 v25, v25, v27, 1.0
	v_and_b32_e32 v27, 1, v71
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v71
	v_xor_b32_e32 v27, v27, v64
	v_cndmask_b32_e32 v25, v25, v70, vcc
	v_and_b32_e32 v27, v37, v27
	v_sub_f32_e32 v24, v33, v24
	v_cmp_lt_u32_e32 vcc, s1, v65
	v_xor_b32_e32 v25, v27, v25
	v_sub_f32_e32 v26, v32, v26
	v_add_f32_e32 v28, v24, v17
	v_cndmask_b32_e32 v25, v25, v36, vcc
	v_add_f32_e32 v27, v26, v20
	v_cndmask_b32_e32 v19, v19, v36, vcc
	v_mul_f32_e32 v29, v25, v28
	v_mad_f32 v29, v27, v19, -v29
	v_mul_f32_e32 v19, v28, v19
	v_sub_f32_e32 v17, v24, v17
	v_mul_f32_e32 v24, v72, v72
	v_mac_f32_e32 v19, v27, v25
	v_mad_f32 v25, s3, v24, v23
	v_madak_f32 v25, v24, v25, 0xbe2aaa9d
	v_mul_f32_e32 v25, v24, v25
	v_mac_f32_e32 v72, v72, v25
	v_mad_f32 v25, s2, v24, v79
	v_madak_f32 v25, v24, v25, 0x3d2aabf7
	v_madak_f32 v25, v24, v25, 0xbf000004
	v_mad_f32 v24, v24, v25, 1.0
	v_and_b32_e32 v25, 1, v73
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v73
	v_cndmask_b32_e64 v24, -v72, v24, vcc
	v_and_b32_e32 v25, v37, v25
	v_xor_b32_e32 v24, v25, v24
	v_mul_f32_e32 v25, v74, v74
	v_sub_f32_e32 v20, v26, v20
	v_mac_f32_e32 v23, s3, v25
	v_mov_b32_e32 v26, 0xbe2aaa9d
	v_mac_f32_e32 v26, v25, v23
	v_mul_f32_e32 v23, v25, v26
	v_mac_f32_e32 v74, v74, v23
	v_mac_f32_e32 v79, s2, v25
	v_mov_b32_e32 v23, 0x3d2aabf7
	v_mac_f32_e32 v23, v25, v79
	v_mov_b32_e32 v26, 0xbf000004
	v_mac_f32_e32 v26, v25, v23
	v_mad_f32 v23, v25, v26, 1.0
	v_and_b32_e32 v25, 1, v75
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v75
	v_xor_b32_e32 v25, v25, v42
	v_cndmask_b32_e32 v23, v23, v74, vcc
	v_and_b32_e32 v25, v37, v25
	v_cmp_lt_u32_e32 vcc, s1, v43
	v_xor_b32_e32 v23, v25, v23
	v_cndmask_b32_e32 v24, v24, v36, vcc
	v_cndmask_b32_e32 v23, v23, v36, vcc
	v_mul_f32_e32 v25, v23, v17
	v_mul_f32_e32 v32, v17, v24
	v_lshlrev_b32_e32 v17, 2, v0
	v_add_u32_e32 v17, vcc, s0, v17
	s_movk_i32 s1, 0x420
	v_add_u32_e32 v33, vcc, s1, v17
	s_movk_i32 s1, 0x630
	v_lshrrev_b32_e32 v76, 3, v0
	v_mad_f32 v25, v20, v24, -v25
	v_mac_f32_e32 v32, v20, v23
	v_add_f32_e32 v20, v22, v41
	s_mov_b32 m0, -1
	ds_write2_b32 v17, v20, v46 offset1:66
	ds_write2_b32 v17, v38, v29 offset0:132 offset1:198
	v_add_u32_e32 v34, vcc, s1, v17
	v_and_b32_e32 v18, 7, v0
	s_movk_i32 s1, 0x42
	v_cvt_f64_i32_e32 v[45:46], v76
	v_mad_u32_u24 v20, v18, s1, v76
	v_lshlrev_b32_e32 v20, 2, v20
	ds_write2_b32 v33, v83, v39 offset1:66
	v_add_f32_e32 v22, v40, v80
	v_add_u32_e32 v39, vcc, s0, v20
	s_mov_b32 s3, 0xbfd921fb
	s_mov_b32 s2, 0x54442d18
	ds_write2_b32 v34, v30, v25 offset1:66
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[27:28], v39 offset1:8
	ds_read2_b32 v[23:24], v39 offset0:16 offset1:24
	ds_read2_b32 v[29:30], v39 offset0:32 offset1:40
	ds_read2_b32 v[25:26], v39 offset0:48 offset1:56
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_write2_b32 v17, v22, v21 offset1:66
	ds_write2_b32 v17, v35, v19 offset0:132 offset1:198
	v_mul_f64 v[19:20], v[45:46], s[2:3]
	ds_write2_b32 v33, v82, v44 offset1:66
	ds_write2_b32 v34, v31, v32 offset1:66
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[35:36], v39 offset1:8
	ds_read2_b32 v[37:38], v39 offset0:32 offset1:40
	ds_read2_b32 v[31:32], v39 offset0:16 offset1:24
	ds_read2_b32 v[33:34], v39 offset0:48 offset1:56
	v_cvt_f32_f64_e32 v20, v[19:20]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
	s_waitcnt lgkmcnt(0)
	v_cmp_nlt_f32_e64 s[2:3], |v20|, s2
	v_and_b32_e32 v19, s1, v20
	v_and_b32_e32 v41, s1, v20
	s_barrier
	s_waitcnt lgkmcnt(0)
                                        ; implicit-def: $vgpr21
                                        ; implicit-def: $vgpr22
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_58
	s_cbranch_execz BB0_58
BB0_57:
	v_and_b32_e32 v22, 0x7fffff, v20
	v_or_b32_e32 v22, 0x800000, v22
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v39, v22, s1
	v_mul_lo_u32 v40, v22, s6
	v_mul_hi_u32 v43, v22, s6
	v_mul_lo_u32 v42, v22, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v39, vcc, v40, v39
	v_mul_lo_u32 v44, v22, s1
	v_cndmask_b32_e64 v40, 0, 1, vcc
	v_add_u32_e32 v40, vcc, v40, v43
	v_mul_hi_u32 v43, v22, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v40, vcc, v40, v44
	v_mul_lo_u32 v47, v22, s1
	v_cndmask_b32_e64 v44, 0, 1, vcc
	v_add_u32_e32 v43, vcc, v44, v43
	v_mul_hi_u32 v44, v22, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v43, vcc, v43, v47
	v_mul_lo_u32 v48, v22, s1
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v44, vcc, v47, v44
	v_mul_hi_u32 v47, v22, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v44, vcc, v44, v48
	v_mul_lo_u32 v49, v22, s1
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v22, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v50, v22, s1
	v_add_u32_e32 v47, vcc, v47, v49
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_mul_hi_u32 v22, v22, s1
	v_add_u32_e32 v48, vcc, v49, v48
	v_add_u32_e32 v48, vcc, v48, v50
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_lshrrev_b32_e32 v21, 23, v19
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v21, vcc, s1, v21
	v_add_u32_e32 v22, vcc, v49, v22
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v22, v22, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v43, v43, v40, vcc
	v_cndmask_b32_e32 v40, v40, v39, vcc
	v_cndmask_b32_e32 v39, v39, v42, vcc
	v_cndmask_b32_e64 v42, 0, 32, vcc
	v_sub_u32_e32 v21, vcc, v21, v42
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v42, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v43, v43, v40, vcc
	v_cndmask_b32_e32 v39, v40, v39, vcc
	v_cndmask_b32_e64 v40, 0, 32, vcc
	v_cndmask_b32_e32 v22, v22, v48, vcc
	v_sub_u32_e32 v21, vcc, v21, v40
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v22, v22, v42, vcc
	v_cndmask_b32_e32 v40, v42, v47, vcc
	v_cndmask_b32_e32 v42, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v39, v43, v39, vcc
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_sub_u32_e32 v21, vcc, v21, v43
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_cndmask_b32_e32 v22, v22, v40, vcc
	v_cndmask_b32_e32 v40, v40, v42, vcc
	v_cndmask_b32_e32 v42, v42, v44, vcc
	v_cndmask_b32_e32 v39, v44, v39, vcc
	v_sub_u32_e32 v21, vcc, v21, v43
	v_sub_u32_e32 v43, vcc, 32, v21
	v_alignbit_b32 v44, v22, v40, v43
	v_alignbit_b32 v47, v40, v42, v43
	v_cmp_ne_u32_e32 vcc, 0, v21
	v_cndmask_b32_e32 v22, v22, v44, vcc
	v_alignbit_b32 v43, v42, v39, v43
	v_cndmask_b32_e32 v21, v40, v47, vcc
	v_cndmask_b32_e32 v40, v42, v43, vcc
	v_alignbit_b32 v43, v22, v21, 30
	v_bfe_i32 v44, v22, 29, 1
	v_alignbit_b32 v21, v21, v40, 30
	v_alignbit_b32 v39, v40, v39, 30
	v_xor_b32_e32 v43, v44, v43
	v_xor_b32_e32 v21, v44, v21
	v_xor_b32_e32 v39, v44, v39
	v_ffbh_u32_e32 v44, v43
	v_cmp_ne_u32_e32 vcc, 0, v43
	v_cndmask_b32_e32 v44, 32, v44, vcc
	v_lshrrev_b32_e32 v42, 29, v22
	v_sub_u32_e32 v47, vcc, 31, v44
	v_alignbit_b32 v43, v43, v21, v47
	v_alignbit_b32 v21, v21, v39, v47
	v_lshlrev_b32_e32 v42, 31, v42
	v_lshlrev_b32_e32 v39, 23, v44
	v_lshrrev_b32_e32 v47, 9, v43
	v_sub_u32_e32 v39, vcc, v42, v39
	v_or_b32_e32 v39, v39, v47
	v_alignbit_b32 v43, v43, v21, 9
	v_add_u32_e32 v39, vcc, 0.5, v39
	v_ffbh_u32_e32 v47, v43
	v_cmp_ne_u32_e32 vcc, 0, v43
	v_cndmask_b32_e32 v47, 32, v47, vcc
	v_sub_u32_e32 v48, vcc, 31, v47
	v_alignbit_b32 v21, v43, v21, v48
	v_add_u32_e32 v43, vcc, v47, v44
	v_lshlrev_b32_e32 v43, 23, v43
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v43, vcc, s1, v43
	v_or_b32_e32 v42, v43, v42
	v_lshrrev_b32_e32 v21, 9, v21
	v_or_b32_e32 v21, v42, v21
	v_and_b32_e32 v42, 0xbffff000, v39
	v_mul_f32_e32 v44, 0xbfc90fda, v39
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v44, s1, v42
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v43, v39, v42
	v_mac_f32_e32 v44, s6, v42
	v_mac_f32_e32 v44, s1, v43
	v_mul_f32_e32 v42, 0x33a22168, v39
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v44, s6, v43
	v_mac_f32_e32 v42, s1, v21
	v_add_f32_e32 v21, v44, v42
	v_bfe_u32 v40, v22, 29, 1
	v_lshrrev_b32_e32 v22, 30, v22
	v_mac_f32_e32 v21, s1, v39
	v_add_u32_e32 v22, vcc, v40, v22
BB0_58:                                 ; %Flow517
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_60
	s_cbranch_execz BB0_60
BB0_59:
	v_mul_f32_e32 v21, 0x3f22f983, v41
	v_rndne_f32_e32 v39, v21
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v21, 0xfffff000, v39
	v_mul_f32_e32 v40, s1, v39
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v40, v21, s6, -v40
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v42, -v39, s1, v41
	v_sub_f32_e32 v22, v39, v21
	v_mac_f32_e32 v40, s7, v21
	v_mac_f32_e32 v40, s6, v22
	v_sub_f32_e32 v43, v41, v42
	v_mad_f32 v43, -v39, s1, v43
	v_mac_f32_e32 v40, s7, v22
	v_sub_f32_e32 v40, v43, v40
	v_add_f32_e32 v40, v42, v40
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v42, -v39, s1, v40
	v_sub_f32_e32 v40, v40, v42
	v_mad_f32 v40, -v39, s1, v40
	v_mul_f32_e32 v43, 0xb3a22168, v39
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v43, s1, v21
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v43, s6, v21
	v_mac_f32_e32 v43, s1, v22
	v_mac_f32_e32 v43, s6, v22
	v_cvt_i32_f32_e32 v22, v39
	v_sub_f32_e32 v21, v40, v43
	v_add_f32_e32 v21, v42, v21
	v_mac_f32_e32 v21, 0xa7c234c4, v39
BB0_60:                                 ; %_Z3cosf.exit16
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr39
                                        ; implicit-def: $vgpr40
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_62
	s_cbranch_execz BB0_62
BB0_61:
	v_and_b32_e32 v40, 0x7fffff, v20
	v_or_b32_e32 v40, 0x800000, v40
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v42, v40, s1
	v_mul_lo_u32 v43, v40, s4
	v_mul_hi_u32 v47, v40, s4
	v_mul_lo_u32 v44, v40, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v42, vcc, v43, v42
	v_mul_lo_u32 v48, v40, s1
	v_cndmask_b32_e64 v43, 0, 1, vcc
	v_add_u32_e32 v43, vcc, v43, v47
	v_mul_hi_u32 v47, v40, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v43, vcc, v43, v48
	v_mul_lo_u32 v49, v40, s1
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v40, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v47, vcc, v47, v49
	v_mul_lo_u32 v50, v40, s1
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_hi_u32 v49, v40, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v48, vcc, v48, v50
	v_mul_lo_u32 v51, v40, s1
	v_cndmask_b32_e64 v50, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v50, v49
	v_mul_hi_u32 v50, v40, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v52, v40, s1
	v_add_u32_e32 v49, vcc, v49, v51
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_mul_hi_u32 v40, v40, s1
	v_add_u32_e32 v50, vcc, v51, v50
	v_add_u32_e32 v50, vcc, v50, v52
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_lshrrev_b32_e32 v39, 23, v19
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v39, vcc, s1, v39
	v_add_u32_e32 v40, vcc, v51, v40
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v40, v40, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v43, vcc
	v_cndmask_b32_e32 v43, v43, v42, vcc
	v_cndmask_b32_e32 v42, v42, v44, vcc
	v_cndmask_b32_e64 v44, 0, 32, vcc
	v_sub_u32_e32 v39, vcc, v39, v44
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v44, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v43, vcc
	v_cndmask_b32_e32 v42, v43, v42, vcc
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_cndmask_b32_e32 v40, v40, v50, vcc
	v_sub_u32_e32 v39, vcc, v39, v43
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e32 v43, v44, v49, vcc
	v_cndmask_b32_e32 v44, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v42, v47, v42, vcc
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_sub_u32_e32 v39, vcc, v39, v47
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_cndmask_b32_e32 v40, v40, v43, vcc
	v_cndmask_b32_e32 v43, v43, v44, vcc
	v_cndmask_b32_e32 v44, v44, v48, vcc
	v_cndmask_b32_e32 v42, v48, v42, vcc
	v_sub_u32_e32 v39, vcc, v39, v47
	v_sub_u32_e32 v47, vcc, 32, v39
	v_alignbit_b32 v48, v40, v43, v47
	v_alignbit_b32 v49, v43, v44, v47
	v_cmp_ne_u32_e32 vcc, 0, v39
	v_cndmask_b32_e32 v40, v40, v48, vcc
	v_alignbit_b32 v47, v44, v42, v47
	v_cndmask_b32_e32 v39, v43, v49, vcc
	v_cndmask_b32_e32 v43, v44, v47, vcc
	v_alignbit_b32 v47, v40, v39, 30
	v_bfe_i32 v48, v40, 29, 1
	v_alignbit_b32 v39, v39, v43, 30
	v_alignbit_b32 v42, v43, v42, 30
	v_xor_b32_e32 v47, v48, v47
	v_xor_b32_e32 v39, v48, v39
	v_xor_b32_e32 v42, v48, v42
	v_ffbh_u32_e32 v48, v47
	v_cmp_ne_u32_e32 vcc, 0, v47
	v_cndmask_b32_e32 v48, 32, v48, vcc
	v_lshrrev_b32_e32 v44, 29, v40
	v_sub_u32_e32 v49, vcc, 31, v48
	v_alignbit_b32 v47, v47, v39, v49
	v_alignbit_b32 v39, v39, v42, v49
	v_lshlrev_b32_e32 v44, 31, v44
	v_lshlrev_b32_e32 v42, 23, v48
	v_lshrrev_b32_e32 v49, 9, v47
	v_sub_u32_e32 v42, vcc, v44, v42
	v_or_b32_e32 v42, v42, v49
	v_alignbit_b32 v47, v47, v39, 9
	v_add_u32_e32 v42, vcc, 0.5, v42
	v_ffbh_u32_e32 v49, v47
	v_cmp_ne_u32_e32 vcc, 0, v47
	v_cndmask_b32_e32 v49, 32, v49, vcc
	v_sub_u32_e32 v50, vcc, 31, v49
	v_alignbit_b32 v39, v47, v39, v50
	v_add_u32_e32 v47, vcc, v49, v48
	v_lshlrev_b32_e32 v47, 23, v47
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v47, vcc, s1, v47
	v_or_b32_e32 v44, v47, v44
	v_lshrrev_b32_e32 v39, 9, v39
	v_or_b32_e32 v39, v44, v39
	v_and_b32_e32 v44, 0xbffff000, v42
	v_mul_f32_e32 v48, 0xbfc90fda, v42
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v48, s1, v44
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v47, v42, v44
	v_mac_f32_e32 v48, s4, v44
	v_mac_f32_e32 v48, s1, v47
	v_mul_f32_e32 v44, 0x33a22168, v42
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v48, s4, v47
	v_mac_f32_e32 v44, s1, v39
	v_add_f32_e32 v39, v48, v44
	v_bfe_u32 v43, v40, 29, 1
	v_lshrrev_b32_e32 v40, 30, v40
	v_mac_f32_e32 v39, s1, v42
	v_add_u32_e32 v40, vcc, v43, v40
BB0_62:                                 ; %Flow516
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_64
	s_cbranch_execz BB0_64
BB0_63:
	v_mul_f32_e32 v39, 0x3f22f983, v41
	v_rndne_f32_e32 v42, v39
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v39, 0xfffff000, v42
	v_mul_f32_e32 v43, s1, v42
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v43, v39, s4, -v43
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v44, -v42, s1, v41
	v_sub_f32_e32 v40, v42, v39
	v_mac_f32_e32 v43, s5, v39
	v_mac_f32_e32 v43, s4, v40
	v_sub_f32_e32 v41, v41, v44
	v_mad_f32 v41, -v42, s1, v41
	v_mac_f32_e32 v43, s5, v40
	v_sub_f32_e32 v41, v41, v43
	v_add_f32_e32 v41, v44, v41
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v43, -v42, s1, v41
	v_sub_f32_e32 v41, v41, v43
	v_mad_f32 v41, -v42, s1, v41
	v_mul_f32_e32 v44, 0xb3a22168, v42
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v44, s1, v39
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v44, s4, v39
	v_mac_f32_e32 v44, s1, v40
	v_mac_f32_e32 v44, s4, v40
	v_cvt_i32_f32_e32 v40, v42
	v_sub_f32_e32 v39, v41, v44
	v_add_f32_e32 v39, v43, v39
	v_mac_f32_e32 v39, 0xa7c234c4, v42
BB0_64:                                 ; %_Z3sinf.exit15
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfc921fb
	s_mov_b32 s2, 0x54442d18
	v_mul_f64 v[41:42], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr47
                                        ; implicit-def: $vgpr48
	v_cvt_f32_f64_e32 v41, v[41:42]
	v_and_b32_e32 v42, s1, v41
	v_and_b32_e32 v43, s1, v41
	v_cmp_nlt_f32_e64 s[2:3], |v41|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_66
	s_cbranch_execz BB0_66
BB0_65:
	v_and_b32_e32 v47, 0x7fffff, v41
	v_or_b32_e32 v47, 0x800000, v47
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v48, v47, s1
	v_mul_lo_u32 v49, v47, s6
	v_mul_hi_u32 v51, v47, s6
	v_mul_lo_u32 v50, v47, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_lo_u32 v52, v47, s1
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_hi_u32 v51, v47, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v49, vcc, v49, v52
	v_mul_lo_u32 v53, v47, s1
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v47, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_lo_u32 v54, v47, s1
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_hi_u32 v53, v47, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v52, vcc, v52, v54
	v_mul_lo_u32 v55, v47, s1
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v47, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v56, v47, s1
	v_add_u32_e32 v53, vcc, v53, v55
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_mul_hi_u32 v47, v47, s1
	v_add_u32_e32 v54, vcc, v55, v54
	v_add_u32_e32 v54, vcc, v54, v56
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v42
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v44, vcc, s1, v44
	v_add_u32_e32 v47, vcc, v55, v47
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e64 v50, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v50
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v50, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v48, v49, v48, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v47, v47, v50, vcc
	v_cndmask_b32_e32 v49, v50, v53, vcc
	v_cndmask_b32_e32 v50, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v48, v51, v48, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v49, vcc
	v_cndmask_b32_e32 v49, v49, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e32 v48, v52, v48, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_sub_u32_e32 v51, vcc, 32, v44
	v_alignbit_b32 v52, v47, v49, v51
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_alignbit_b32 v53, v49, v50, v51
	v_cndmask_b32_e32 v44, v47, v52, vcc
	v_alignbit_b32 v51, v50, v48, v51
	v_cndmask_b32_e32 v47, v49, v53, vcc
	v_cndmask_b32_e32 v49, v50, v51, vcc
	v_alignbit_b32 v51, v44, v47, 30
	v_bfe_i32 v52, v44, 29, 1
	v_alignbit_b32 v47, v47, v49, 30
	v_alignbit_b32 v48, v49, v48, 30
	v_xor_b32_e32 v51, v52, v51
	v_xor_b32_e32 v47, v52, v47
	v_xor_b32_e32 v48, v52, v48
	v_ffbh_u32_e32 v52, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_lshrrev_b32_e32 v50, 29, v44
	v_sub_u32_e32 v53, vcc, 31, v52
	v_alignbit_b32 v51, v51, v47, v53
	v_alignbit_b32 v47, v47, v48, v53
	v_lshlrev_b32_e32 v50, 31, v50
	v_lshlrev_b32_e32 v48, 23, v52
	v_lshrrev_b32_e32 v53, 9, v51
	v_sub_u32_e32 v48, vcc, v50, v48
	v_or_b32_e32 v48, v48, v53
	v_alignbit_b32 v51, v51, v47, 9
	v_add_u32_e32 v48, vcc, 0.5, v48
	v_ffbh_u32_e32 v53, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v53, 32, v53, vcc
	v_sub_u32_e32 v54, vcc, 31, v53
	v_alignbit_b32 v47, v51, v47, v54
	v_add_u32_e32 v51, vcc, v53, v52
	v_lshlrev_b32_e32 v51, 23, v51
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v51, vcc, s1, v51
	v_or_b32_e32 v50, v51, v50
	v_lshrrev_b32_e32 v47, 9, v47
	v_or_b32_e32 v47, v50, v47
	v_and_b32_e32 v50, 0xbffff000, v48
	v_mul_f32_e32 v52, 0xbfc90fda, v48
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v52, s1, v50
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v51, v48, v50
	v_mac_f32_e32 v52, s6, v50
	v_mac_f32_e32 v52, s1, v51
	v_mul_f32_e32 v50, 0x33a22168, v48
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v52, s6, v51
	v_mac_f32_e32 v50, s1, v47
	v_add_f32_e32 v47, v52, v50
	v_bfe_u32 v49, v44, 29, 1
	v_lshrrev_b32_e32 v44, 30, v44
	v_mac_f32_e32 v47, s1, v48
	v_add_u32_e32 v48, vcc, v49, v44
BB0_66:                                 ; %Flow515
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_68
	s_cbranch_execz BB0_68
BB0_67:
	v_mul_f32_e32 v44, 0x3f22f983, v43
	v_rndne_f32_e32 v44, v44
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v47, 0xfffff000, v44
	v_mul_f32_e32 v49, s1, v44
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v49, v47, s6, -v49
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v50, -v44, s1, v43
	v_sub_f32_e32 v48, v44, v47
	v_mac_f32_e32 v49, s7, v47
	v_mac_f32_e32 v49, s6, v48
	v_sub_f32_e32 v51, v43, v50
	v_mad_f32 v51, -v44, s1, v51
	v_mac_f32_e32 v49, s7, v48
	v_sub_f32_e32 v49, v51, v49
	v_add_f32_e32 v49, v50, v49
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v50, -v44, s1, v49
	v_sub_f32_e32 v49, v49, v50
	v_mad_f32 v49, -v44, s1, v49
	v_mul_f32_e32 v51, 0xb3a22168, v44
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v51, s1, v47
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v51, s6, v47
	v_mac_f32_e32 v51, s1, v48
	v_mac_f32_e32 v51, s6, v48
	v_cvt_i32_f32_e32 v48, v44
	v_sub_f32_e32 v47, v49, v51
	v_add_f32_e32 v47, v50, v47
	v_mac_f32_e32 v47, 0xa7c234c4, v44
BB0_68:                                 ; %_Z3cosf.exit14
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr51
                                        ; implicit-def: $vgpr52
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_70
	s_cbranch_execz BB0_70
BB0_69:
	v_and_b32_e32 v49, 0x7fffff, v41
	v_or_b32_e32 v49, 0x800000, v49
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v50, v49, s1
	v_mul_lo_u32 v51, v49, s4
	v_mul_hi_u32 v53, v49, s4
	v_mul_lo_u32 v52, v49, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v50, vcc, v51, v50
	v_mul_lo_u32 v54, v49, s1
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_hi_u32 v53, v49, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v51, vcc, v51, v54
	v_mul_lo_u32 v55, v49, s1
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v49, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v53, vcc, v53, v55
	v_mul_lo_u32 v56, v49, s1
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_add_u32_e32 v54, vcc, v55, v54
	v_mul_hi_u32 v55, v49, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v54, vcc, v54, v56
	v_mul_lo_u32 v57, v49, s1
	v_cndmask_b32_e64 v56, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v56, v55
	v_mul_hi_u32 v56, v49, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v58, v49, s1
	v_add_u32_e32 v55, vcc, v55, v57
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_mul_hi_u32 v49, v49, s1
	v_add_u32_e32 v56, vcc, v57, v56
	v_add_u32_e32 v56, vcc, v56, v58
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v42
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v44, vcc, s1, v44
	v_add_u32_e32 v49, vcc, v57, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v49, v49, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e64 v52, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v52
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v52, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v51, vcc
	v_cndmask_b32_e32 v50, v51, v50, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v49, v49, v56, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v49, v49, v52, vcc
	v_cndmask_b32_e32 v51, v52, v55, vcc
	v_cndmask_b32_e32 v52, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v50, v53, v50, vcc
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v53
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_cndmask_b32_e32 v49, v49, v51, vcc
	v_cndmask_b32_e32 v51, v51, v52, vcc
	v_cndmask_b32_e32 v52, v52, v54, vcc
	v_cndmask_b32_e32 v50, v54, v50, vcc
	v_sub_u32_e32 v44, vcc, v44, v53
	v_sub_u32_e32 v53, vcc, 32, v44
	v_alignbit_b32 v54, v49, v51, v53
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_cndmask_b32_e32 v44, v49, v54, vcc
	v_alignbit_b32 v55, v51, v52, v53
	v_alignbit_b32 v53, v52, v50, v53
	v_cndmask_b32_e32 v49, v51, v55, vcc
	v_cndmask_b32_e32 v51, v52, v53, vcc
	v_lshrrev_b32_e32 v52, 29, v44
	v_alignbit_b32 v53, v44, v49, 30
	v_alignbit_b32 v49, v49, v51, 30
	v_alignbit_b32 v50, v51, v50, 30
	v_lshlrev_b32_e32 v51, 31, v52
	v_bfe_i32 v52, v44, 29, 1
	v_xor_b32_e32 v53, v52, v53
	v_xor_b32_e32 v49, v52, v49
	v_xor_b32_e32 v50, v52, v50
	v_ffbh_u32_e32 v52, v53
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_sub_u32_e32 v55, vcc, 31, v52
	v_alignbit_b32 v53, v53, v49, v55
	v_alignbit_b32 v49, v49, v50, v55
	v_lshlrev_b32_e32 v50, 23, v52
	v_lshrrev_b32_e32 v55, 9, v53
	v_sub_u32_e32 v50, vcc, v51, v50
	v_or_b32_e32 v50, v50, v55
	v_alignbit_b32 v53, v53, v49, 9
	v_add_u32_e32 v50, vcc, 0.5, v50
	v_ffbh_u32_e32 v55, v53
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v55, 32, v55, vcc
	v_add_u32_e32 v52, vcc, v55, v52
	v_sub_u32_e32 v56, vcc, 31, v55
	v_lshlrev_b32_e32 v52, 23, v52
	s_mov_b32 s1, 0x33000000
	v_alignbit_b32 v49, v53, v49, v56
	v_sub_u32_e32 v52, vcc, s1, v52
	v_or_b32_e32 v51, v52, v51
	v_lshrrev_b32_e32 v49, 9, v49
	v_or_b32_e32 v49, v51, v49
	v_and_b32_e32 v51, 0xbffff000, v50
	v_mul_f32_e32 v53, 0xbfc90fda, v50
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v53, s1, v51
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v52, v50, v51
	v_mac_f32_e32 v53, s4, v51
	v_mac_f32_e32 v53, s1, v52
	v_mul_f32_e32 v51, 0x33a22168, v50
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v53, s4, v52
	v_mac_f32_e32 v51, s1, v49
	v_add_f32_e32 v51, v53, v51
	v_bfe_u32 v54, v44, 29, 1
	v_lshrrev_b32_e32 v44, 30, v44
	v_mac_f32_e32 v51, s1, v50
	v_add_u32_e32 v52, vcc, v54, v44
BB0_70:                                 ; %Flow514
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_72
	s_cbranch_execz BB0_72
BB0_71:
	v_mul_f32_e32 v44, 0x3f22f983, v43
	v_rndne_f32_e32 v44, v44
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v49, 0xfffff000, v44
	v_mul_f32_e32 v51, s1, v44
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v51, v49, s4, -v51
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v52, -v44, s1, v43
	v_sub_f32_e32 v50, v44, v49
	v_mac_f32_e32 v51, s5, v49
	v_mac_f32_e32 v51, s4, v50
	v_sub_f32_e32 v43, v43, v52
	v_mad_f32 v43, -v44, s1, v43
	v_mac_f32_e32 v51, s5, v50
	v_sub_f32_e32 v43, v43, v51
	v_add_f32_e32 v43, v52, v43
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v51, -v44, s1, v43
	v_sub_f32_e32 v43, v43, v51
	v_mad_f32 v43, -v44, s1, v43
	v_mul_f32_e32 v53, 0xb3a22168, v44
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v53, s1, v49
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v53, s4, v49
	v_mac_f32_e32 v53, s1, v50
	v_mac_f32_e32 v53, s4, v50
	v_cvt_i32_f32_e32 v52, v44
	v_sub_f32_e32 v43, v43, v53
	v_add_f32_e32 v51, v51, v43
	v_mac_f32_e32 v51, 0xa7c234c4, v44
BB0_72:                                 ; %_Z3sinf.exit13
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfe2d97c
	s_mov_b32 s2, 0x7f3321d2
	v_mul_f64 v[43:44], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr49
                                        ; implicit-def: $vgpr50
	v_cvt_f32_f64_e32 v44, v[43:44]
	v_and_b32_e32 v43, s1, v44
	v_and_b32_e32 v55, s1, v44
	v_cmp_nlt_f32_e64 s[2:3], |v44|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_74
	s_cbranch_execz BB0_74
BB0_73:
	v_and_b32_e32 v50, 0x7fffff, v44
	v_or_b32_e32 v50, 0x800000, v50
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v53, v50, s1
	v_mul_lo_u32 v54, v50, s6
	v_mul_hi_u32 v57, v50, s6
	v_mul_lo_u32 v56, v50, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_lo_u32 v58, v50, s1
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v54, vcc, v54, v57
	v_mul_hi_u32 v57, v50, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v54, vcc, v54, v58
	v_mul_lo_u32 v59, v50, s1
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v50, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_lo_u32 v60, v50, s1
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_hi_u32 v59, v50, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v58, vcc, v58, v60
	v_mul_lo_u32 v61, v50, s1
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v50, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v62, v50, s1
	v_add_u32_e32 v59, vcc, v59, v61
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_mul_hi_u32 v50, v50, s1
	v_add_u32_e32 v60, vcc, v61, v60
	v_add_u32_e32 v60, vcc, v60, v62
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_lshrrev_b32_e32 v49, 23, v43
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v49, vcc, s1, v49
	v_add_u32_e32 v50, vcc, v61, v50
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v50, v50, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v56, vcc
	v_cndmask_b32_e64 v56, 0, 32, vcc
	v_sub_u32_e32 v49, vcc, v49, v56
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v56, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v54, vcc
	v_cndmask_b32_e32 v53, v54, v53, vcc
	v_cndmask_b32_e64 v54, 0, 32, vcc
	v_cndmask_b32_e32 v50, v50, v60, vcc
	v_sub_u32_e32 v49, vcc, v49, v54
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v50, v50, v56, vcc
	v_cndmask_b32_e32 v54, v56, v59, vcc
	v_cndmask_b32_e32 v56, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v53, v57, v53, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_sub_u32_e32 v49, vcc, v49, v57
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v50, v50, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e32 v53, v58, v53, vcc
	v_sub_u32_e32 v49, vcc, v49, v57
	v_sub_u32_e32 v57, vcc, 32, v49
	v_alignbit_b32 v58, v50, v54, v57
	v_alignbit_b32 v59, v54, v56, v57
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v50, v50, v58, vcc
	v_alignbit_b32 v57, v56, v53, v57
	v_cndmask_b32_e32 v49, v54, v59, vcc
	v_cndmask_b32_e32 v54, v56, v57, vcc
	v_alignbit_b32 v57, v50, v49, 30
	v_bfe_i32 v58, v50, 29, 1
	v_alignbit_b32 v49, v49, v54, 30
	v_alignbit_b32 v53, v54, v53, 30
	v_xor_b32_e32 v57, v58, v57
	v_xor_b32_e32 v49, v58, v49
	v_xor_b32_e32 v53, v58, v53
	v_ffbh_u32_e32 v58, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, 32, v58, vcc
	v_lshrrev_b32_e32 v56, 29, v50
	v_sub_u32_e32 v59, vcc, 31, v58
	v_alignbit_b32 v57, v57, v49, v59
	v_alignbit_b32 v49, v49, v53, v59
	v_lshlrev_b32_e32 v56, 31, v56
	v_lshlrev_b32_e32 v53, 23, v58
	v_lshrrev_b32_e32 v59, 9, v57
	v_sub_u32_e32 v53, vcc, v56, v53
	v_or_b32_e32 v53, v53, v59
	v_alignbit_b32 v57, v57, v49, 9
	v_add_u32_e32 v53, vcc, 0.5, v53
	v_ffbh_u32_e32 v59, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v59, 32, v59, vcc
	v_sub_u32_e32 v60, vcc, 31, v59
	v_alignbit_b32 v49, v57, v49, v60
	v_add_u32_e32 v57, vcc, v59, v58
	v_lshlrev_b32_e32 v57, 23, v57
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v57, vcc, s1, v57
	v_or_b32_e32 v56, v57, v56
	v_lshrrev_b32_e32 v49, 9, v49
	v_or_b32_e32 v49, v56, v49
	v_and_b32_e32 v56, 0xbffff000, v53
	v_mul_f32_e32 v58, 0xbfc90fda, v53
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v58, s1, v56
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v57, v53, v56
	v_mac_f32_e32 v58, s6, v56
	v_mac_f32_e32 v58, s1, v57
	v_mul_f32_e32 v56, 0x33a22168, v53
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v58, s6, v57
	v_mac_f32_e32 v56, s1, v49
	v_add_f32_e32 v49, v58, v56
	v_bfe_u32 v54, v50, 29, 1
	v_lshrrev_b32_e32 v50, 30, v50
	v_mac_f32_e32 v49, s1, v53
	v_add_u32_e32 v50, vcc, v54, v50
BB0_74:                                 ; %Flow513
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_76
	s_cbranch_execz BB0_76
BB0_75:
	v_mul_f32_e32 v49, 0x3f22f983, v55
	v_rndne_f32_e32 v53, v49
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v49, 0xfffff000, v53
	v_mul_f32_e32 v54, s1, v53
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v54, v49, s6, -v54
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v56, -v53, s1, v55
	v_sub_f32_e32 v50, v53, v49
	v_mac_f32_e32 v54, s7, v49
	v_mac_f32_e32 v54, s6, v50
	v_sub_f32_e32 v57, v55, v56
	v_mad_f32 v57, -v53, s1, v57
	v_mac_f32_e32 v54, s7, v50
	v_sub_f32_e32 v54, v57, v54
	v_add_f32_e32 v54, v56, v54
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v56, -v53, s1, v54
	v_sub_f32_e32 v54, v54, v56
	v_mad_f32 v54, -v53, s1, v54
	v_mul_f32_e32 v57, 0xb3a22168, v53
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v57, s1, v49
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v57, s6, v49
	v_mac_f32_e32 v57, s1, v50
	v_mac_f32_e32 v57, s6, v50
	v_cvt_i32_f32_e32 v50, v53
	v_sub_f32_e32 v49, v54, v57
	v_add_f32_e32 v49, v56, v49
	v_mac_f32_e32 v49, 0xa7c234c4, v53
BB0_76:                                 ; %_Z3cosf.exit12
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr53
                                        ; implicit-def: $vgpr54
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_78
	s_cbranch_execz BB0_78
BB0_77:
	v_and_b32_e32 v54, 0x7fffff, v44
	v_or_b32_e32 v54, 0x800000, v54
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v56, v54, s1
	v_mul_lo_u32 v57, v54, s4
	v_mul_hi_u32 v59, v54, s4
	v_mul_lo_u32 v58, v54, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v56, vcc, v57, v56
	v_mul_lo_u32 v60, v54, s1
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_hi_u32 v59, v54, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v57, vcc, v57, v60
	v_mul_lo_u32 v61, v54, s1
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v54, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v59, vcc, v59, v61
	v_mul_lo_u32 v62, v54, s1
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_hi_u32 v61, v54, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v60, vcc, v60, v62
	v_mul_lo_u32 v63, v54, s1
	v_cndmask_b32_e64 v62, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v62, v61
	v_mul_hi_u32 v62, v54, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v64, v54, s1
	v_add_u32_e32 v61, vcc, v61, v63
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_mul_hi_u32 v54, v54, s1
	v_add_u32_e32 v62, vcc, v63, v62
	v_add_u32_e32 v62, vcc, v62, v64
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_lshrrev_b32_e32 v53, 23, v43
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v53, vcc, s1, v53
	v_add_u32_e32 v54, vcc, v63, v54
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v54, v54, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e64 v58, 0, 32, vcc
	v_sub_u32_e32 v53, vcc, v53, v58
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v58, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v57, vcc
	v_cndmask_b32_e32 v56, v57, v56, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v54, v54, v62, vcc
	v_sub_u32_e32 v53, vcc, v53, v57
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v54, v54, v58, vcc
	v_cndmask_b32_e32 v57, v58, v61, vcc
	v_cndmask_b32_e32 v58, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v56, v59, v56, vcc
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_sub_u32_e32 v53, vcc, v53, v59
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_cndmask_b32_e32 v54, v54, v57, vcc
	v_cndmask_b32_e32 v57, v57, v58, vcc
	v_cndmask_b32_e32 v58, v58, v60, vcc
	v_cndmask_b32_e32 v56, v60, v56, vcc
	v_sub_u32_e32 v53, vcc, v53, v59
	v_sub_u32_e32 v59, vcc, 32, v53
	v_alignbit_b32 v60, v54, v57, v59
	v_alignbit_b32 v61, v57, v58, v59
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v54, v54, v60, vcc
	v_alignbit_b32 v59, v58, v56, v59
	v_cndmask_b32_e32 v53, v57, v61, vcc
	v_cndmask_b32_e32 v57, v58, v59, vcc
	v_alignbit_b32 v59, v54, v53, 30
	v_bfe_i32 v60, v54, 29, 1
	v_alignbit_b32 v53, v53, v57, 30
	v_alignbit_b32 v56, v57, v56, 30
	v_xor_b32_e32 v59, v60, v59
	v_xor_b32_e32 v53, v60, v53
	v_xor_b32_e32 v56, v60, v56
	v_ffbh_u32_e32 v60, v59
	v_cmp_ne_u32_e32 vcc, 0, v59
	v_cndmask_b32_e32 v60, 32, v60, vcc
	v_lshrrev_b32_e32 v58, 29, v54
	v_sub_u32_e32 v61, vcc, 31, v60
	v_alignbit_b32 v59, v59, v53, v61
	v_alignbit_b32 v53, v53, v56, v61
	v_lshlrev_b32_e32 v58, 31, v58
	v_lshlrev_b32_e32 v56, 23, v60
	v_lshrrev_b32_e32 v61, 9, v59
	v_sub_u32_e32 v56, vcc, v58, v56
	v_or_b32_e32 v56, v56, v61
	v_alignbit_b32 v59, v59, v53, 9
	v_add_u32_e32 v56, vcc, 0.5, v56
	v_ffbh_u32_e32 v61, v59
	v_cmp_ne_u32_e32 vcc, 0, v59
	v_cndmask_b32_e32 v61, 32, v61, vcc
	v_sub_u32_e32 v62, vcc, 31, v61
	v_alignbit_b32 v53, v59, v53, v62
	v_add_u32_e32 v59, vcc, v61, v60
	v_lshlrev_b32_e32 v59, 23, v59
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v59, vcc, s1, v59
	v_or_b32_e32 v58, v59, v58
	v_lshrrev_b32_e32 v53, 9, v53
	v_or_b32_e32 v53, v58, v53
	v_and_b32_e32 v58, 0xbffff000, v56
	v_mul_f32_e32 v60, 0xbfc90fda, v56
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v60, s1, v58
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v59, v56, v58
	v_mac_f32_e32 v60, s4, v58
	v_mac_f32_e32 v60, s1, v59
	v_mul_f32_e32 v58, 0x33a22168, v56
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v60, s4, v59
	v_mac_f32_e32 v58, s1, v53
	v_add_f32_e32 v53, v60, v58
	v_bfe_u32 v57, v54, 29, 1
	v_lshrrev_b32_e32 v54, 30, v54
	v_mac_f32_e32 v53, s1, v56
	v_add_u32_e32 v54, vcc, v57, v54
BB0_78:                                 ; %Flow512
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_80
	s_cbranch_execz BB0_80
BB0_79:
	v_mul_f32_e32 v53, 0x3f22f983, v55
	v_rndne_f32_e32 v56, v53
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v53, 0xfffff000, v56
	v_mul_f32_e32 v57, s1, v56
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v57, v53, s4, -v57
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v58, -v56, s1, v55
	v_sub_f32_e32 v54, v56, v53
	v_mac_f32_e32 v57, s5, v53
	v_mac_f32_e32 v57, s4, v54
	v_sub_f32_e32 v55, v55, v58
	v_mad_f32 v55, -v56, s1, v55
	v_mac_f32_e32 v57, s5, v54
	v_sub_f32_e32 v55, v55, v57
	v_add_f32_e32 v55, v58, v55
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v57, -v56, s1, v55
	v_sub_f32_e32 v55, v55, v57
	v_mad_f32 v55, -v56, s1, v55
	v_mul_f32_e32 v58, 0xb3a22168, v56
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v58, s1, v53
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v58, s4, v53
	v_mac_f32_e32 v58, s1, v54
	v_mac_f32_e32 v58, s4, v54
	v_cvt_i32_f32_e32 v54, v56
	v_sub_f32_e32 v53, v55, v58
	v_add_f32_e32 v53, v57, v53
	v_mac_f32_e32 v53, 0xa7c234c4, v56
BB0_80:                                 ; %_Z3sinf.exit11
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfb921fb
	s_mov_b32 s2, 0x54442d18
	v_mul_f64 v[55:56], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr57
                                        ; implicit-def: $vgpr58
	v_cvt_f32_f64_e32 v55, v[55:56]
	v_and_b32_e32 v56, s1, v55
	v_and_b32_e32 v59, s1, v55
	v_cmp_nlt_f32_e64 s[2:3], |v55|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_82
	s_cbranch_execz BB0_82
BB0_81:
	v_and_b32_e32 v58, 0x7fffff, v55
	v_or_b32_e32 v58, 0x800000, v58
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v60, v58, s1
	v_mul_lo_u32 v61, v58, s6
	v_mul_hi_u32 v63, v58, s6
	v_mul_lo_u32 v62, v58, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_lo_u32 v64, v58, s1
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_hi_u32 v63, v58, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v61, vcc, v61, v64
	v_mul_lo_u32 v65, v58, s1
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v58, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_lo_u32 v66, v58, s1
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_hi_u32 v65, v58, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v64, vcc, v64, v66
	v_mul_lo_u32 v67, v58, s1
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v58, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v68, v58, s1
	v_add_u32_e32 v65, vcc, v65, v67
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_mul_hi_u32 v58, v58, s1
	v_add_u32_e32 v66, vcc, v67, v66
	v_add_u32_e32 v66, vcc, v66, v68
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_lshrrev_b32_e32 v57, 23, v56
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v57, vcc, s1, v57
	v_add_u32_e32 v58, vcc, v67, v58
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v58, v58, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e64 v62, 0, 32, vcc
	v_sub_u32_e32 v57, vcc, v57, v62
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v62, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v60, v61, v60, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v58, v58, v66, vcc
	v_sub_u32_e32 v57, vcc, v57, v61
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v58, v58, v62, vcc
	v_cndmask_b32_e32 v61, v62, v65, vcc
	v_cndmask_b32_e32 v62, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v60, v63, v60, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_sub_u32_e32 v57, vcc, v57, v63
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v58, v58, v61, vcc
	v_cndmask_b32_e32 v61, v61, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e32 v60, v64, v60, vcc
	v_sub_u32_e32 v57, vcc, v57, v63
	v_sub_u32_e32 v63, vcc, 32, v57
	v_alignbit_b32 v64, v58, v61, v63
	v_alignbit_b32 v65, v61, v62, v63
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, v58, v64, vcc
	v_alignbit_b32 v63, v62, v60, v63
	v_cndmask_b32_e32 v57, v61, v65, vcc
	v_cndmask_b32_e32 v61, v62, v63, vcc
	v_alignbit_b32 v63, v58, v57, 30
	v_bfe_i32 v64, v58, 29, 1
	v_alignbit_b32 v57, v57, v61, 30
	v_alignbit_b32 v60, v61, v60, 30
	v_xor_b32_e32 v63, v64, v63
	v_xor_b32_e32 v57, v64, v57
	v_xor_b32_e32 v60, v64, v60
	v_ffbh_u32_e32 v64, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, 32, v64, vcc
	v_lshrrev_b32_e32 v62, 29, v58
	v_sub_u32_e32 v65, vcc, 31, v64
	v_alignbit_b32 v63, v63, v57, v65
	v_alignbit_b32 v57, v57, v60, v65
	v_lshlrev_b32_e32 v62, 31, v62
	v_lshlrev_b32_e32 v60, 23, v64
	v_lshrrev_b32_e32 v65, 9, v63
	v_sub_u32_e32 v60, vcc, v62, v60
	v_or_b32_e32 v60, v60, v65
	v_alignbit_b32 v63, v63, v57, 9
	v_add_u32_e32 v60, vcc, 0.5, v60
	v_ffbh_u32_e32 v65, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v65, 32, v65, vcc
	v_sub_u32_e32 v66, vcc, 31, v65
	v_alignbit_b32 v57, v63, v57, v66
	v_add_u32_e32 v63, vcc, v65, v64
	v_lshlrev_b32_e32 v63, 23, v63
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v63, vcc, s1, v63
	v_or_b32_e32 v62, v63, v62
	v_lshrrev_b32_e32 v57, 9, v57
	v_or_b32_e32 v57, v62, v57
	v_and_b32_e32 v62, 0xbffff000, v60
	v_mul_f32_e32 v64, 0xbfc90fda, v60
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v64, s1, v62
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v63, v60, v62
	v_mac_f32_e32 v64, s6, v62
	v_mac_f32_e32 v64, s1, v63
	v_mul_f32_e32 v62, 0x33a22168, v60
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v64, s6, v63
	v_mac_f32_e32 v62, s1, v57
	v_add_f32_e32 v57, v64, v62
	v_bfe_u32 v61, v58, 29, 1
	v_lshrrev_b32_e32 v58, 30, v58
	v_mac_f32_e32 v57, s1, v60
	v_add_u32_e32 v58, vcc, v61, v58
BB0_82:                                 ; %Flow511
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_84
	s_cbranch_execz BB0_84
BB0_83:
	v_mul_f32_e32 v57, 0x3f22f983, v59
	v_rndne_f32_e32 v60, v57
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v57, 0xfffff000, v60
	v_mul_f32_e32 v61, s1, v60
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v61, v57, s6, -v61
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v62, -v60, s1, v59
	v_sub_f32_e32 v58, v60, v57
	v_mac_f32_e32 v61, s7, v57
	v_mac_f32_e32 v61, s6, v58
	v_sub_f32_e32 v63, v59, v62
	v_mad_f32 v63, -v60, s1, v63
	v_mac_f32_e32 v61, s7, v58
	v_sub_f32_e32 v61, v63, v61
	v_add_f32_e32 v61, v62, v61
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v62, -v60, s1, v61
	v_sub_f32_e32 v61, v61, v62
	v_mad_f32 v61, -v60, s1, v61
	v_mul_f32_e32 v63, 0xb3a22168, v60
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v63, s1, v57
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v63, s6, v57
	v_mac_f32_e32 v63, s1, v58
	v_mac_f32_e32 v63, s6, v58
	v_cvt_i32_f32_e32 v58, v60
	v_sub_f32_e32 v57, v61, v63
	v_add_f32_e32 v57, v62, v57
	v_mac_f32_e32 v57, 0xa7c234c4, v60
BB0_84:                                 ; %_Z3cosf.exit10
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr61
                                        ; implicit-def: $vgpr62
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_86
	s_cbranch_execz BB0_86
BB0_85:
	v_and_b32_e32 v61, 0x7fffff, v55
	v_or_b32_e32 v61, 0x800000, v61
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v62, v61, s1
	v_mul_lo_u32 v63, v61, s4
	v_mul_hi_u32 v65, v61, s4
	v_mul_lo_u32 v64, v61, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v62, vcc, v63, v62
	v_mul_lo_u32 v66, v61, s1
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_hi_u32 v65, v61, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v63, vcc, v63, v66
	v_mul_lo_u32 v67, v61, s1
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v61, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v65, vcc, v65, v67
	v_mul_lo_u32 v68, v61, s1
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_add_u32_e32 v66, vcc, v67, v66
	v_mul_hi_u32 v67, v61, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v66, vcc, v66, v68
	v_mul_lo_u32 v69, v61, s1
	v_cndmask_b32_e64 v68, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v68, v67
	v_mul_hi_u32 v68, v61, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v70, v61, s1
	v_add_u32_e32 v67, vcc, v67, v69
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_mul_hi_u32 v61, v61, s1
	v_add_u32_e32 v68, vcc, v69, v68
	v_add_u32_e32 v68, vcc, v68, v70
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_lshrrev_b32_e32 v60, 23, v56
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v60, vcc, s1, v60
	v_add_u32_e32 v61, vcc, v69, v61
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v61, v61, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e64 v64, 0, 32, vcc
	v_sub_u32_e32 v60, vcc, v60, v64
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v64, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v63, vcc
	v_cndmask_b32_e32 v62, v63, v62, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v61, v61, v68, vcc
	v_sub_u32_e32 v60, vcc, v60, v63
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v61, v61, v64, vcc
	v_cndmask_b32_e32 v63, v64, v67, vcc
	v_cndmask_b32_e32 v64, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v62, v65, v62, vcc
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_sub_u32_e32 v60, vcc, v60, v65
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_cndmask_b32_e32 v61, v61, v63, vcc
	v_cndmask_b32_e32 v63, v63, v64, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e32 v62, v66, v62, vcc
	v_sub_u32_e32 v60, vcc, v60, v65
	v_sub_u32_e32 v65, vcc, 32, v60
	v_alignbit_b32 v66, v61, v63, v65
	v_cmp_ne_u32_e32 vcc, 0, v60
	v_alignbit_b32 v67, v63, v64, v65
	v_cndmask_b32_e32 v60, v61, v66, vcc
	v_alignbit_b32 v65, v64, v62, v65
	v_cndmask_b32_e32 v61, v63, v67, vcc
	v_cndmask_b32_e32 v63, v64, v65, vcc
	v_alignbit_b32 v65, v60, v61, 30
	v_bfe_i32 v66, v60, 29, 1
	v_alignbit_b32 v61, v61, v63, 30
	v_alignbit_b32 v62, v63, v62, 30
	v_xor_b32_e32 v65, v66, v65
	v_xor_b32_e32 v61, v66, v61
	v_xor_b32_e32 v62, v66, v62
	v_ffbh_u32_e32 v66, v65
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v66, 32, v66, vcc
	v_lshrrev_b32_e32 v64, 29, v60
	v_sub_u32_e32 v67, vcc, 31, v66
	v_alignbit_b32 v65, v65, v61, v67
	v_alignbit_b32 v61, v61, v62, v67
	v_lshlrev_b32_e32 v64, 31, v64
	v_lshlrev_b32_e32 v62, 23, v66
	v_lshrrev_b32_e32 v67, 9, v65
	v_sub_u32_e32 v62, vcc, v64, v62
	v_or_b32_e32 v62, v62, v67
	v_alignbit_b32 v65, v65, v61, 9
	v_add_u32_e32 v62, vcc, 0.5, v62
	v_ffbh_u32_e32 v67, v65
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v67, 32, v67, vcc
	v_sub_u32_e32 v68, vcc, 31, v67
	v_alignbit_b32 v61, v65, v61, v68
	v_add_u32_e32 v65, vcc, v67, v66
	v_lshlrev_b32_e32 v65, 23, v65
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v65, vcc, s1, v65
	v_or_b32_e32 v64, v65, v64
	v_lshrrev_b32_e32 v61, 9, v61
	v_or_b32_e32 v61, v64, v61
	v_and_b32_e32 v64, 0xbffff000, v62
	v_mul_f32_e32 v66, 0xbfc90fda, v62
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v66, s1, v64
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v65, v62, v64
	v_mac_f32_e32 v66, s4, v64
	v_mac_f32_e32 v66, s1, v65
	v_mul_f32_e32 v64, 0x33a22168, v62
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v66, s4, v65
	v_mac_f32_e32 v64, s1, v61
	v_add_f32_e32 v61, v66, v64
	v_bfe_u32 v63, v60, 29, 1
	v_lshrrev_b32_e32 v60, 30, v60
	v_mac_f32_e32 v61, s1, v62
	v_add_u32_e32 v62, vcc, v63, v60
BB0_86:                                 ; %Flow510
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_88
	s_cbranch_execz BB0_88
BB0_87:
	v_mul_f32_e32 v60, 0x3f22f983, v59
	v_rndne_f32_e32 v60, v60
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v61, 0xfffff000, v60
	v_mul_f32_e32 v63, s1, v60
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v63, v61, s4, -v63
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v64, -v60, s1, v59
	v_sub_f32_e32 v62, v60, v61
	v_mac_f32_e32 v63, s5, v61
	v_mac_f32_e32 v63, s4, v62
	v_sub_f32_e32 v59, v59, v64
	v_mad_f32 v59, -v60, s1, v59
	v_mac_f32_e32 v63, s5, v62
	v_sub_f32_e32 v59, v59, v63
	v_add_f32_e32 v59, v64, v59
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v63, -v60, s1, v59
	v_sub_f32_e32 v59, v59, v63
	v_mad_f32 v59, -v60, s1, v59
	v_mul_f32_e32 v64, 0xb3a22168, v60
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v64, s1, v61
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v64, s4, v61
	v_mac_f32_e32 v64, s1, v62
	v_mac_f32_e32 v64, s4, v62
	v_cvt_i32_f32_e32 v62, v60
	v_sub_f32_e32 v59, v59, v64
	v_add_f32_e32 v61, v63, v59
	v_mac_f32_e32 v61, 0xa7c234c4, v60
BB0_88:                                 ; %_Z3sinf.exit9
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfdf6a7a
	s_mov_b32 s2, 0x2955385e
	v_mul_f64 v[59:60], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr63
                                        ; implicit-def: $vgpr64
	v_cvt_f32_f64_e32 v59, v[59:60]
	v_and_b32_e32 v60, s1, v59
	v_and_b32_e32 v67, s1, v59
	v_cmp_nlt_f32_e64 s[2:3], |v59|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_90
	s_cbranch_execz BB0_90
BB0_89:
	v_and_b32_e32 v64, 0x7fffff, v59
	v_or_b32_e32 v64, 0x800000, v64
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v65, v64, s1
	v_mul_lo_u32 v66, v64, s6
	v_mul_hi_u32 v69, v64, s6
	v_mul_lo_u32 v68, v64, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_lo_u32 v70, v64, s1
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v66, vcc, v66, v69
	v_mul_hi_u32 v69, v64, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v66, vcc, v66, v70
	v_mul_lo_u32 v71, v64, s1
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v64, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_lo_u32 v72, v64, s1
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_hi_u32 v71, v64, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v70, vcc, v70, v72
	v_mul_lo_u32 v73, v64, s1
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v64, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v74, v64, s1
	v_add_u32_e32 v71, vcc, v71, v73
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_mul_hi_u32 v64, v64, s1
	v_add_u32_e32 v72, vcc, v73, v72
	v_add_u32_e32 v72, vcc, v72, v74
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_lshrrev_b32_e32 v63, 23, v60
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v63, vcc, s1, v63
	v_add_u32_e32 v64, vcc, v73, v64
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v64, v64, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v68, vcc
	v_cndmask_b32_e64 v68, 0, 32, vcc
	v_sub_u32_e32 v63, vcc, v63, v68
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v68, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v66, vcc
	v_cndmask_b32_e32 v65, v66, v65, vcc
	v_cndmask_b32_e64 v66, 0, 32, vcc
	v_cndmask_b32_e32 v64, v64, v72, vcc
	v_sub_u32_e32 v63, vcc, v63, v66
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v64, v64, v68, vcc
	v_cndmask_b32_e32 v66, v68, v71, vcc
	v_cndmask_b32_e32 v68, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v65, v69, v65, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_sub_u32_e32 v63, vcc, v63, v69
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e32 v65, v70, v65, vcc
	v_sub_u32_e32 v63, vcc, v63, v69
	v_sub_u32_e32 v69, vcc, 32, v63
	v_alignbit_b32 v70, v64, v66, v69
	v_alignbit_b32 v71, v66, v68, v69
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, v64, v70, vcc
	v_alignbit_b32 v69, v68, v65, v69
	v_cndmask_b32_e32 v63, v66, v71, vcc
	v_cndmask_b32_e32 v66, v68, v69, vcc
	v_alignbit_b32 v69, v64, v63, 30
	v_bfe_i32 v70, v64, 29, 1
	v_alignbit_b32 v63, v63, v66, 30
	v_alignbit_b32 v65, v66, v65, 30
	v_xor_b32_e32 v69, v70, v69
	v_xor_b32_e32 v63, v70, v63
	v_xor_b32_e32 v65, v70, v65
	v_ffbh_u32_e32 v70, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, 32, v70, vcc
	v_lshrrev_b32_e32 v68, 29, v64
	v_sub_u32_e32 v71, vcc, 31, v70
	v_alignbit_b32 v69, v69, v63, v71
	v_alignbit_b32 v63, v63, v65, v71
	v_lshlrev_b32_e32 v68, 31, v68
	v_lshlrev_b32_e32 v65, 23, v70
	v_lshrrev_b32_e32 v71, 9, v69
	v_sub_u32_e32 v65, vcc, v68, v65
	v_or_b32_e32 v65, v65, v71
	v_alignbit_b32 v69, v69, v63, 9
	v_add_u32_e32 v65, vcc, 0.5, v65
	v_ffbh_u32_e32 v71, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v71, 32, v71, vcc
	v_sub_u32_e32 v72, vcc, 31, v71
	v_alignbit_b32 v63, v69, v63, v72
	v_add_u32_e32 v69, vcc, v71, v70
	v_lshlrev_b32_e32 v69, 23, v69
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v69, vcc, s1, v69
	v_or_b32_e32 v68, v69, v68
	v_lshrrev_b32_e32 v63, 9, v63
	v_or_b32_e32 v63, v68, v63
	v_and_b32_e32 v68, 0xbffff000, v65
	v_mul_f32_e32 v70, 0xbfc90fda, v65
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v70, s1, v68
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v69, v65, v68
	v_mac_f32_e32 v70, s6, v68
	v_mac_f32_e32 v70, s1, v69
	v_mul_f32_e32 v68, 0x33a22168, v65
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v70, s6, v69
	v_mac_f32_e32 v68, s1, v63
	v_add_f32_e32 v63, v70, v68
	v_bfe_u32 v66, v64, 29, 1
	v_lshrrev_b32_e32 v64, 30, v64
	v_mac_f32_e32 v63, s1, v65
	v_add_u32_e32 v64, vcc, v66, v64
BB0_90:                                 ; %Flow509
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_92
	s_cbranch_execz BB0_92
BB0_91:
	v_mul_f32_e32 v63, 0x3f22f983, v67
	v_rndne_f32_e32 v65, v63
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v63, 0xfffff000, v65
	v_mul_f32_e32 v66, s1, v65
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v66, v63, s6, -v66
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v68, -v65, s1, v67
	v_sub_f32_e32 v64, v65, v63
	v_mac_f32_e32 v66, s7, v63
	v_mac_f32_e32 v66, s6, v64
	v_sub_f32_e32 v69, v67, v68
	v_mad_f32 v69, -v65, s1, v69
	v_mac_f32_e32 v66, s7, v64
	v_sub_f32_e32 v66, v69, v66
	v_add_f32_e32 v66, v68, v66
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v68, -v65, s1, v66
	v_sub_f32_e32 v66, v66, v68
	v_mad_f32 v66, -v65, s1, v66
	v_mul_f32_e32 v69, 0xb3a22168, v65
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v69, s1, v63
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v69, s6, v63
	v_mac_f32_e32 v69, s1, v64
	v_mac_f32_e32 v69, s6, v64
	v_cvt_i32_f32_e32 v64, v65
	v_sub_f32_e32 v63, v66, v69
	v_add_f32_e32 v63, v68, v63
	v_mac_f32_e32 v63, 0xa7c234c4, v65
BB0_92:                                 ; %_Z3cosf.exit8
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr65
                                        ; implicit-def: $vgpr66
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_94
	s_cbranch_execz BB0_94
BB0_93:
	v_and_b32_e32 v66, 0x7fffff, v59
	v_or_b32_e32 v66, 0x800000, v66
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v68, v66, s1
	v_mul_lo_u32 v69, v66, s4
	v_mul_hi_u32 v71, v66, s4
	v_mul_lo_u32 v70, v66, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v68, vcc, v69, v68
	v_mul_lo_u32 v72, v66, s1
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_hi_u32 v71, v66, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v69, vcc, v69, v72
	v_mul_lo_u32 v73, v66, s1
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v66, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v71, vcc, v71, v73
	v_mul_lo_u32 v74, v66, s1
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_add_u32_e32 v72, vcc, v73, v72
	v_mul_hi_u32 v73, v66, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v72, vcc, v72, v74
	v_mul_lo_u32 v75, v66, s1
	v_cndmask_b32_e64 v74, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v74, v73
	v_mul_hi_u32 v74, v66, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v76, v66, s1
	v_add_u32_e32 v73, vcc, v73, v75
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_mul_hi_u32 v66, v66, s1
	v_add_u32_e32 v74, vcc, v75, v74
	v_add_u32_e32 v74, vcc, v74, v76
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_lshrrev_b32_e32 v65, 23, v60
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v65, vcc, s1, v65
	v_add_u32_e32 v66, vcc, v75, v66
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v66, v66, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e64 v70, 0, 32, vcc
	v_sub_u32_e32 v65, vcc, v65, v70
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v70, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v69, vcc
	v_cndmask_b32_e32 v68, v69, v68, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v66, v66, v74, vcc
	v_sub_u32_e32 v65, vcc, v65, v69
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v66, v66, v70, vcc
	v_cndmask_b32_e32 v69, v70, v73, vcc
	v_cndmask_b32_e32 v70, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v68, v71, v68, vcc
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_sub_u32_e32 v65, vcc, v65, v71
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_cndmask_b32_e32 v66, v66, v69, vcc
	v_cndmask_b32_e32 v69, v69, v70, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e32 v68, v72, v68, vcc
	v_sub_u32_e32 v65, vcc, v65, v71
	v_sub_u32_e32 v71, vcc, 32, v65
	v_alignbit_b32 v72, v66, v69, v71
	v_alignbit_b32 v73, v69, v70, v71
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v66, v66, v72, vcc
	v_alignbit_b32 v71, v70, v68, v71
	v_cndmask_b32_e32 v65, v69, v73, vcc
	v_cndmask_b32_e32 v69, v70, v71, vcc
	v_alignbit_b32 v71, v66, v65, 30
	v_bfe_i32 v72, v66, 29, 1
	v_alignbit_b32 v65, v65, v69, 30
	v_alignbit_b32 v68, v69, v68, 30
	v_xor_b32_e32 v71, v72, v71
	v_xor_b32_e32 v65, v72, v65
	v_xor_b32_e32 v68, v72, v68
	v_ffbh_u32_e32 v72, v71
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v72, 32, v72, vcc
	v_lshrrev_b32_e32 v70, 29, v66
	v_sub_u32_e32 v73, vcc, 31, v72
	v_alignbit_b32 v71, v71, v65, v73
	v_alignbit_b32 v65, v65, v68, v73
	v_lshlrev_b32_e32 v70, 31, v70
	v_lshlrev_b32_e32 v68, 23, v72
	v_lshrrev_b32_e32 v73, 9, v71
	v_sub_u32_e32 v68, vcc, v70, v68
	v_or_b32_e32 v68, v68, v73
	v_alignbit_b32 v71, v71, v65, 9
	v_add_u32_e32 v68, vcc, 0.5, v68
	v_ffbh_u32_e32 v73, v71
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v73, 32, v73, vcc
	v_sub_u32_e32 v74, vcc, 31, v73
	v_alignbit_b32 v65, v71, v65, v74
	v_add_u32_e32 v71, vcc, v73, v72
	v_lshlrev_b32_e32 v71, 23, v71
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v71, vcc, s1, v71
	v_or_b32_e32 v70, v71, v70
	v_lshrrev_b32_e32 v65, 9, v65
	v_or_b32_e32 v65, v70, v65
	v_and_b32_e32 v70, 0xbffff000, v68
	v_mul_f32_e32 v72, 0xbfc90fda, v68
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v72, s1, v70
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v71, v68, v70
	v_mac_f32_e32 v72, s4, v70
	v_mac_f32_e32 v72, s1, v71
	v_mul_f32_e32 v70, 0x33a22168, v68
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v72, s4, v71
	v_mac_f32_e32 v70, s1, v65
	v_add_f32_e32 v65, v72, v70
	v_bfe_u32 v69, v66, 29, 1
	v_lshrrev_b32_e32 v66, 30, v66
	v_mac_f32_e32 v65, s1, v68
	v_add_u32_e32 v66, vcc, v69, v66
BB0_94:                                 ; %Flow508
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_96
	s_cbranch_execz BB0_96
BB0_95:
	v_mul_f32_e32 v65, 0x3f22f983, v67
	v_rndne_f32_e32 v68, v65
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v65, 0xfffff000, v68
	v_mul_f32_e32 v69, s1, v68
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v69, v65, s4, -v69
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v70, -v68, s1, v67
	v_sub_f32_e32 v66, v68, v65
	v_mac_f32_e32 v69, s5, v65
	v_mac_f32_e32 v69, s4, v66
	v_sub_f32_e32 v67, v67, v70
	v_mad_f32 v67, -v68, s1, v67
	v_mac_f32_e32 v69, s5, v66
	v_sub_f32_e32 v67, v67, v69
	v_add_f32_e32 v67, v70, v67
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v69, -v68, s1, v67
	v_sub_f32_e32 v67, v67, v69
	v_mad_f32 v67, -v68, s1, v67
	v_mul_f32_e32 v70, 0xb3a22168, v68
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v70, s1, v65
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v70, s4, v65
	v_mac_f32_e32 v70, s1, v66
	v_mac_f32_e32 v70, s4, v66
	v_cvt_i32_f32_e32 v66, v68
	v_sub_f32_e32 v65, v67, v70
	v_add_f32_e32 v65, v69, v65
	v_mac_f32_e32 v65, 0xa7c234c4, v68
BB0_96:                                 ; %_Z3sinf.exit7
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfd2d97c
	s_mov_b32 s2, 0x7f3321d2
	v_mul_f64 v[67:68], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr69
                                        ; implicit-def: $vgpr70
	v_cvt_f32_f64_e32 v67, v[67:68]
	v_and_b32_e32 v68, s1, v67
	v_and_b32_e32 v73, s1, v67
	v_cmp_nlt_f32_e64 s[2:3], |v67|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_98
	s_cbranch_execz BB0_98
BB0_97:
	v_and_b32_e32 v70, 0x7fffff, v67
	v_or_b32_e32 v70, 0x800000, v70
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v71, v70, s1
	v_mul_lo_u32 v72, v70, s6
	v_mul_hi_u32 v75, v70, s6
	v_mul_lo_u32 v74, v70, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_lo_u32 v76, v70, s1
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v72, vcc, v72, v75
	v_mul_hi_u32 v75, v70, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v72, vcc, v72, v76
	v_mul_lo_u32 v77, v70, s1
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v70, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_lo_u32 v78, v70, s1
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_hi_u32 v77, v70, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v76, vcc, v76, v78
	v_mul_lo_u32 v79, v70, s1
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v70, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v80, v70, s1
	v_add_u32_e32 v77, vcc, v77, v79
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_mul_hi_u32 v70, v70, s1
	v_add_u32_e32 v78, vcc, v79, v78
	v_add_u32_e32 v78, vcc, v78, v80
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_lshrrev_b32_e32 v69, 23, v68
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v69, vcc, s1, v69
	v_add_u32_e32 v70, vcc, v79, v70
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v70, v70, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v74, vcc
	v_cndmask_b32_e64 v74, 0, 32, vcc
	v_sub_u32_e32 v69, vcc, v69, v74
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v74, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v72, vcc
	v_cndmask_b32_e32 v71, v72, v71, vcc
	v_cndmask_b32_e64 v72, 0, 32, vcc
	v_cndmask_b32_e32 v70, v70, v78, vcc
	v_sub_u32_e32 v69, vcc, v69, v72
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v70, v70, v74, vcc
	v_cndmask_b32_e32 v72, v74, v77, vcc
	v_cndmask_b32_e32 v74, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v71, v75, v71, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_sub_u32_e32 v69, vcc, v69, v75
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v71, v76, v71, vcc
	v_sub_u32_e32 v69, vcc, v69, v75
	v_sub_u32_e32 v75, vcc, 32, v69
	v_alignbit_b32 v76, v70, v72, v75
	v_alignbit_b32 v77, v72, v74, v75
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, v70, v76, vcc
	v_alignbit_b32 v75, v74, v71, v75
	v_cndmask_b32_e32 v69, v72, v77, vcc
	v_cndmask_b32_e32 v72, v74, v75, vcc
	v_alignbit_b32 v75, v70, v69, 30
	v_bfe_i32 v76, v70, 29, 1
	v_alignbit_b32 v69, v69, v72, 30
	v_alignbit_b32 v71, v72, v71, 30
	v_xor_b32_e32 v75, v76, v75
	v_xor_b32_e32 v69, v76, v69
	v_xor_b32_e32 v71, v76, v71
	v_ffbh_u32_e32 v76, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, 32, v76, vcc
	v_lshrrev_b32_e32 v74, 29, v70
	v_sub_u32_e32 v77, vcc, 31, v76
	v_alignbit_b32 v75, v75, v69, v77
	v_alignbit_b32 v69, v69, v71, v77
	v_lshlrev_b32_e32 v74, 31, v74
	v_lshlrev_b32_e32 v71, 23, v76
	v_lshrrev_b32_e32 v77, 9, v75
	v_sub_u32_e32 v71, vcc, v74, v71
	v_or_b32_e32 v71, v71, v77
	v_alignbit_b32 v75, v75, v69, 9
	v_add_u32_e32 v71, vcc, 0.5, v71
	v_ffbh_u32_e32 v77, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v77, 32, v77, vcc
	v_sub_u32_e32 v78, vcc, 31, v77
	v_alignbit_b32 v69, v75, v69, v78
	v_add_u32_e32 v75, vcc, v77, v76
	v_lshlrev_b32_e32 v75, 23, v75
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v75, vcc, s1, v75
	v_or_b32_e32 v74, v75, v74
	v_lshrrev_b32_e32 v69, 9, v69
	v_or_b32_e32 v69, v74, v69
	v_and_b32_e32 v74, 0xbffff000, v71
	v_mul_f32_e32 v76, 0xbfc90fda, v71
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v76, s1, v74
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v75, v71, v74
	v_mac_f32_e32 v76, s6, v74
	v_mac_f32_e32 v76, s1, v75
	v_mul_f32_e32 v74, 0x33a22168, v71
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v76, s6, v75
	v_mac_f32_e32 v74, s1, v69
	v_add_f32_e32 v69, v76, v74
	v_bfe_u32 v72, v70, 29, 1
	v_lshrrev_b32_e32 v70, 30, v70
	v_mac_f32_e32 v69, s1, v71
	v_add_u32_e32 v70, vcc, v72, v70
BB0_98:                                 ; %Flow507
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_100
	s_cbranch_execz BB0_100
BB0_99:
	v_mul_f32_e32 v69, 0x3f22f983, v73
	v_rndne_f32_e32 v71, v69
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v69, 0xfffff000, v71
	v_mul_f32_e32 v72, s1, v71
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v72, v69, s6, -v72
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v74, -v71, s1, v73
	v_sub_f32_e32 v70, v71, v69
	v_mac_f32_e32 v72, s7, v69
	v_mac_f32_e32 v72, s6, v70
	v_sub_f32_e32 v75, v73, v74
	v_mad_f32 v75, -v71, s1, v75
	v_mac_f32_e32 v72, s7, v70
	v_sub_f32_e32 v72, v75, v72
	v_add_f32_e32 v72, v74, v72
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v74, -v71, s1, v72
	v_sub_f32_e32 v72, v72, v74
	v_mad_f32 v72, -v71, s1, v72
	v_mul_f32_e32 v75, 0xb3a22168, v71
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v75, s1, v69
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v75, s6, v69
	v_mac_f32_e32 v75, s1, v70
	v_mac_f32_e32 v75, s6, v70
	v_cvt_i32_f32_e32 v70, v71
	v_sub_f32_e32 v69, v72, v75
	v_add_f32_e32 v69, v74, v69
	v_mac_f32_e32 v69, 0xa7c234c4, v71
BB0_100:                                ; %_Z3cosf.exit6
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr71
                                        ; implicit-def: $vgpr72
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_102
	s_cbranch_execz BB0_102
BB0_101:
	v_and_b32_e32 v72, 0x7fffff, v67
	v_or_b32_e32 v72, 0x800000, v72
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v74, v72, s1
	v_mul_lo_u32 v75, v72, s4
	v_mul_hi_u32 v77, v72, s4
	v_mul_lo_u32 v76, v72, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_lo_u32 v78, v72, s1
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_hi_u32 v77, v72, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v75, vcc, v75, v78
	v_mul_lo_u32 v79, v72, s1
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v72, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_lo_u32 v80, v72, s1
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_hi_u32 v79, v72, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v78, vcc, v78, v80
	v_mul_lo_u32 v81, v72, s1
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v72, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v82, v72, s1
	v_add_u32_e32 v79, vcc, v79, v81
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_mul_hi_u32 v72, v72, s1
	v_add_u32_e32 v80, vcc, v81, v80
	v_add_u32_e32 v80, vcc, v80, v82
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_lshrrev_b32_e32 v71, 23, v68
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v71, vcc, s1, v71
	v_add_u32_e32 v72, vcc, v81, v72
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v72, v72, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_sub_u32_e32 v71, vcc, v71, v76
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v76, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v74, v75, v74, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v72, v72, v80, vcc
	v_sub_u32_e32 v71, vcc, v71, v75
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v72, v72, v76, vcc
	v_cndmask_b32_e32 v75, v76, v79, vcc
	v_cndmask_b32_e32 v76, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v74, v77, v74, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_sub_u32_e32 v71, vcc, v71, v77
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v72, v72, v75, vcc
	v_cndmask_b32_e32 v75, v75, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v74, v78, v74, vcc
	v_sub_u32_e32 v71, vcc, v71, v77
	v_sub_u32_e32 v77, vcc, 32, v71
	v_alignbit_b32 v78, v72, v75, v77
	v_alignbit_b32 v79, v75, v76, v77
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v72, v72, v78, vcc
	v_alignbit_b32 v77, v76, v74, v77
	v_cndmask_b32_e32 v71, v75, v79, vcc
	v_cndmask_b32_e32 v75, v76, v77, vcc
	v_alignbit_b32 v77, v72, v71, 30
	v_bfe_i32 v78, v72, 29, 1
	v_alignbit_b32 v71, v71, v75, 30
	v_alignbit_b32 v74, v75, v74, 30
	v_xor_b32_e32 v77, v78, v77
	v_xor_b32_e32 v71, v78, v71
	v_xor_b32_e32 v74, v78, v74
	v_ffbh_u32_e32 v78, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v78, 32, v78, vcc
	v_lshrrev_b32_e32 v76, 29, v72
	v_sub_u32_e32 v79, vcc, 31, v78
	v_alignbit_b32 v77, v77, v71, v79
	v_alignbit_b32 v71, v71, v74, v79
	v_lshlrev_b32_e32 v76, 31, v76
	v_lshlrev_b32_e32 v74, 23, v78
	v_lshrrev_b32_e32 v79, 9, v77
	v_sub_u32_e32 v74, vcc, v76, v74
	v_or_b32_e32 v74, v74, v79
	v_alignbit_b32 v77, v77, v71, 9
	v_add_u32_e32 v74, vcc, 0.5, v74
	v_ffbh_u32_e32 v79, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v79, 32, v79, vcc
	v_sub_u32_e32 v80, vcc, 31, v79
	v_alignbit_b32 v71, v77, v71, v80
	v_add_u32_e32 v77, vcc, v79, v78
	v_lshlrev_b32_e32 v77, 23, v77
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v77, vcc, s1, v77
	v_or_b32_e32 v76, v77, v76
	v_lshrrev_b32_e32 v71, 9, v71
	v_or_b32_e32 v71, v76, v71
	v_and_b32_e32 v76, 0xbffff000, v74
	v_mul_f32_e32 v78, 0xbfc90fda, v74
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v78, s1, v76
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v77, v74, v76
	v_mac_f32_e32 v78, s4, v76
	v_mac_f32_e32 v78, s1, v77
	v_mul_f32_e32 v76, 0x33a22168, v74
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v78, s4, v77
	v_mac_f32_e32 v76, s1, v71
	v_add_f32_e32 v71, v78, v76
	v_bfe_u32 v75, v72, 29, 1
	v_lshrrev_b32_e32 v72, 30, v72
	v_mac_f32_e32 v71, s1, v74
	v_add_u32_e32 v72, vcc, v75, v72
BB0_102:                                ; %Flow506
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_104
	s_cbranch_execz BB0_104
BB0_103:
	v_mul_f32_e32 v71, 0x3f22f983, v73
	v_rndne_f32_e32 v74, v71
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v71, 0xfffff000, v74
	v_mul_f32_e32 v75, s1, v74
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v75, v71, s4, -v75
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v76, -v74, s1, v73
	v_sub_f32_e32 v72, v74, v71
	v_mac_f32_e32 v75, s5, v71
	v_mac_f32_e32 v75, s4, v72
	v_sub_f32_e32 v73, v73, v76
	v_mad_f32 v73, -v74, s1, v73
	v_mac_f32_e32 v75, s5, v72
	v_sub_f32_e32 v73, v73, v75
	v_add_f32_e32 v73, v76, v73
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v75, -v74, s1, v73
	v_sub_f32_e32 v73, v73, v75
	v_mad_f32 v73, -v74, s1, v73
	v_mul_f32_e32 v76, 0xb3a22168, v74
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v76, s1, v71
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v76, s4, v71
	v_mac_f32_e32 v76, s1, v72
	v_mac_f32_e32 v76, s4, v72
	v_cvt_i32_f32_e32 v72, v74
	v_sub_f32_e32 v71, v73, v76
	v_add_f32_e32 v71, v75, v71
	v_mac_f32_e32 v71, 0xa7c234c4, v74
BB0_104:                                ; %_Z3sinf.exit5
	s_or_b64 exec, exec, s[2:3]
	s_mov_b32 s3, 0xbfe5fdbb
	s_mov_b32 s2, 0xe9bba775
	v_mul_f64 v[45:46], v[45:46], s[2:3]
	s_brev_b32 s1, -2
	s_brev_b32 s2, 18
                                        ; implicit-def: $vgpr73
                                        ; implicit-def: $vgpr74
	v_cvt_f32_f64_e32 v45, v[45:46]
	v_and_b32_e32 v46, s1, v45
	v_and_b32_e32 v77, s1, v45
	v_cmp_nlt_f32_e64 s[2:3], |v45|, s2
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[4:5], exec, s[4:5]
	; mask branch BB0_106
	s_cbranch_execz BB0_106
BB0_105:
	v_and_b32_e32 v74, 0x7fffff, v45
	v_or_b32_e32 v74, 0x800000, v74
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s6, 0x3c439041
	v_mul_hi_u32 v75, v74, s1
	v_mul_lo_u32 v76, v74, s6
	v_mul_hi_u32 v79, v74, s6
	v_mul_lo_u32 v78, v74, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_lo_u32 v80, v74, s1
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v76, v79
	v_mul_hi_u32 v79, v74, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v76, vcc, v76, v80
	v_mul_lo_u32 v81, v74, s1
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v74, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_lo_u32 v82, v74, s1
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_add_u32_e32 v80, vcc, v81, v80
	v_mul_hi_u32 v81, v74, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v80, vcc, v80, v82
	v_mul_lo_u32 v83, v74, s1
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v74, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v84, v74, s1
	v_add_u32_e32 v81, vcc, v81, v83
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_mul_hi_u32 v74, v74, s1
	v_add_u32_e32 v82, vcc, v83, v82
	v_add_u32_e32 v82, vcc, v82, v84
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_lshrrev_b32_e32 v73, 23, v46
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v73, vcc, s1, v73
	v_add_u32_e32 v74, vcc, v83, v74
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v74, v74, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v78, vcc
	v_cndmask_b32_e64 v78, 0, 32, vcc
	v_sub_u32_e32 v73, vcc, v73, v78
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v78, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v76, vcc
	v_cndmask_b32_e32 v75, v76, v75, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_cndmask_b32_e32 v74, v74, v82, vcc
	v_sub_u32_e32 v73, vcc, v73, v76
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v74, v74, v78, vcc
	v_cndmask_b32_e32 v76, v78, v81, vcc
	v_cndmask_b32_e32 v78, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v75, v79, v75, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_sub_u32_e32 v73, vcc, v73, v79
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e32 v75, v80, v75, vcc
	v_sub_u32_e32 v73, vcc, v73, v79
	v_sub_u32_e32 v79, vcc, 32, v73
	v_alignbit_b32 v80, v74, v76, v79
	v_alignbit_b32 v81, v76, v78, v79
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v74, v74, v80, vcc
	v_alignbit_b32 v79, v78, v75, v79
	v_cndmask_b32_e32 v73, v76, v81, vcc
	v_cndmask_b32_e32 v76, v78, v79, vcc
	v_alignbit_b32 v79, v74, v73, 30
	v_bfe_i32 v80, v74, 29, 1
	v_alignbit_b32 v73, v73, v76, 30
	v_alignbit_b32 v75, v76, v75, 30
	v_xor_b32_e32 v79, v80, v79
	v_xor_b32_e32 v73, v80, v73
	v_xor_b32_e32 v75, v80, v75
	v_ffbh_u32_e32 v80, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v80, 32, v80, vcc
	v_lshrrev_b32_e32 v78, 29, v74
	v_sub_u32_e32 v81, vcc, 31, v80
	v_alignbit_b32 v79, v79, v73, v81
	v_alignbit_b32 v73, v73, v75, v81
	v_lshlrev_b32_e32 v78, 31, v78
	v_lshlrev_b32_e32 v75, 23, v80
	v_lshrrev_b32_e32 v81, 9, v79
	v_sub_u32_e32 v75, vcc, v78, v75
	v_or_b32_e32 v75, v75, v81
	v_alignbit_b32 v79, v79, v73, 9
	v_add_u32_e32 v75, vcc, 0.5, v75
	v_ffbh_u32_e32 v81, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v81, 32, v81, vcc
	v_sub_u32_e32 v82, vcc, 31, v81
	v_alignbit_b32 v73, v79, v73, v82
	v_add_u32_e32 v79, vcc, v81, v80
	v_lshlrev_b32_e32 v79, 23, v79
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v79, vcc, s1, v79
	v_or_b32_e32 v78, v79, v78
	v_lshrrev_b32_e32 v73, 9, v73
	v_or_b32_e32 v73, v78, v73
	v_and_b32_e32 v78, 0xbffff000, v75
	v_mul_f32_e32 v80, 0xbfc90fda, v75
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v80, s1, v78
	s_mov_b32 s6, 0x39fda000
	v_sub_f32_e32 v79, v75, v78
	v_mac_f32_e32 v80, s6, v78
	v_mac_f32_e32 v80, s1, v79
	v_mul_f32_e32 v78, 0x33a22168, v75
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v80, s6, v79
	v_mac_f32_e32 v78, s1, v73
	v_add_f32_e32 v73, v80, v78
	v_bfe_u32 v76, v74, 29, 1
	v_lshrrev_b32_e32 v74, 30, v74
	v_mac_f32_e32 v73, s1, v75
	v_add_u32_e32 v74, vcc, v76, v74
BB0_106:                                ; %Flow505
	s_or_saveexec_b64 s[4:5], s[4:5]
	s_xor_b64 exec, exec, s[4:5]
	; mask branch BB0_108
	s_cbranch_execz BB0_108
BB0_107:
	v_mul_f32_e32 v73, 0x3f22f983, v77
	v_rndne_f32_e32 v75, v73
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v73, 0xfffff000, v75
	v_mul_f32_e32 v76, s1, v75
	s_mov_b32 s6, 0x3fc90000
	v_mad_f32 v76, v73, s6, -v76
	s_mov_b32 s7, 0x39fda000
	v_mad_f32 v78, -v75, s1, v77
	v_sub_f32_e32 v74, v75, v73
	v_mac_f32_e32 v76, s7, v73
	v_mac_f32_e32 v76, s6, v74
	v_sub_f32_e32 v79, v77, v78
	v_mad_f32 v79, -v75, s1, v79
	v_mac_f32_e32 v76, s7, v74
	v_sub_f32_e32 v76, v79, v76
	v_add_f32_e32 v76, v78, v76
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v78, -v75, s1, v76
	v_sub_f32_e32 v76, v76, v78
	v_mad_f32 v76, -v75, s1, v76
	v_mul_f32_e32 v79, 0xb3a22168, v75
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v79, s1, v73
	s_mov_b32 s6, 0x2c340000
	v_mac_f32_e32 v79, s6, v73
	v_mac_f32_e32 v79, s1, v74
	v_mac_f32_e32 v79, s6, v74
	v_cvt_i32_f32_e32 v74, v75
	v_sub_f32_e32 v73, v76, v79
	v_add_f32_e32 v73, v78, v73
	v_mac_f32_e32 v73, 0xa7c234c4, v75
BB0_108:                                ; %_Z3cosf.exit
	s_or_b64 exec, exec, s[4:5]
                                        ; implicit-def: $vgpr75
                                        ; implicit-def: $vgpr76
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_xor_b64 s[2:3], exec, s[4:5]
	; mask branch BB0_110
	s_cbranch_execz BB0_110
BB0_109:
	v_and_b32_e32 v76, 0x7fffff, v45
	v_or_b32_e32 v76, 0x800000, v76
	s_mov_b32 s1, 0xfe5163ab
	s_mov_b32 s4, 0x3c439041
	v_mul_hi_u32 v78, v76, s1
	v_mul_lo_u32 v79, v76, s4
	v_mul_hi_u32 v81, v76, s4
	v_mul_lo_u32 v80, v76, s1
	s_mov_b32 s1, 0xdb629599
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_lo_u32 v82, v76, s1
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_hi_u32 v81, v76, s1
	s_mov_b32 s1, 0xf534ddc0
	v_add_u32_e32 v79, vcc, v79, v82
	v_mul_lo_u32 v83, v76, s1
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v76, s1
	s_mov_b32 s1, 0xfc2757d1
	v_add_u32_e32 v81, vcc, v81, v83
	v_mul_lo_u32 v84, v76, s1
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_add_u32_e32 v82, vcc, v83, v82
	v_mul_hi_u32 v83, v76, s1
	s_mov_b32 s1, 0x4e441529
	v_add_u32_e32 v82, vcc, v82, v84
	v_mul_lo_u32 v85, v76, s1
	v_cndmask_b32_e64 v84, 0, 1, vcc
	v_add_u32_e32 v83, vcc, v84, v83
	v_mul_hi_u32 v84, v76, s1
	s_mov_b32 s1, 0xa2f9836e
	v_mul_lo_u32 v86, v76, s1
	v_add_u32_e32 v83, vcc, v83, v85
	v_cndmask_b32_e64 v85, 0, 1, vcc
	v_mul_hi_u32 v76, v76, s1
	v_add_u32_e32 v84, vcc, v85, v84
	v_add_u32_e32 v84, vcc, v84, v86
	v_cndmask_b32_e64 v85, 0, 1, vcc
	v_lshrrev_b32_e32 v75, 23, v46
	s_movk_i32 s1, 0xff88
	v_add_u32_e32 v75, vcc, s1, v75
	v_add_u32_e32 v76, vcc, v85, v76
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v76, v76, v84, vcc
	v_cndmask_b32_e32 v84, v84, v83, vcc
	v_cndmask_b32_e32 v83, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e64 v80, 0, 32, vcc
	v_sub_u32_e32 v75, vcc, v75, v80
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v80, v84, v83, vcc
	v_cndmask_b32_e32 v83, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v79, vcc
	v_cndmask_b32_e32 v78, v79, v78, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v76, v76, v84, vcc
	v_sub_u32_e32 v75, vcc, v75, v79
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v76, v76, v80, vcc
	v_cndmask_b32_e32 v79, v80, v83, vcc
	v_cndmask_b32_e32 v80, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v78, v81, v78, vcc
	v_cndmask_b32_e64 v81, 0, 32, vcc
	v_sub_u32_e32 v75, vcc, v75, v81
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e64 v81, 0, 32, vcc
	v_cndmask_b32_e32 v76, v76, v79, vcc
	v_cndmask_b32_e32 v79, v79, v80, vcc
	v_cndmask_b32_e32 v80, v80, v82, vcc
	v_cndmask_b32_e32 v78, v82, v78, vcc
	v_sub_u32_e32 v75, vcc, v75, v81
	v_sub_u32_e32 v81, vcc, 32, v75
	v_alignbit_b32 v82, v76, v79, v81
	v_alignbit_b32 v83, v79, v80, v81
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, v76, v82, vcc
	v_alignbit_b32 v81, v80, v78, v81
	v_cndmask_b32_e32 v75, v79, v83, vcc
	v_cndmask_b32_e32 v79, v80, v81, vcc
	v_alignbit_b32 v81, v76, v75, 30
	v_bfe_i32 v82, v76, 29, 1
	v_alignbit_b32 v75, v75, v79, 30
	v_alignbit_b32 v78, v79, v78, 30
	v_xor_b32_e32 v81, v82, v81
	v_xor_b32_e32 v75, v82, v75
	v_xor_b32_e32 v78, v82, v78
	v_ffbh_u32_e32 v82, v81
	v_cmp_ne_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v82, 32, v82, vcc
	v_lshrrev_b32_e32 v80, 29, v76
	v_sub_u32_e32 v83, vcc, 31, v82
	v_alignbit_b32 v81, v81, v75, v83
	v_alignbit_b32 v75, v75, v78, v83
	v_lshlrev_b32_e32 v80, 31, v80
	v_lshlrev_b32_e32 v78, 23, v82
	v_lshrrev_b32_e32 v83, 9, v81
	v_sub_u32_e32 v78, vcc, v80, v78
	v_or_b32_e32 v78, v78, v83
	v_alignbit_b32 v81, v81, v75, 9
	v_add_u32_e32 v78, vcc, 0.5, v78
	v_ffbh_u32_e32 v83, v81
	v_cmp_ne_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v83, 32, v83, vcc
	v_sub_u32_e32 v84, vcc, 31, v83
	v_alignbit_b32 v75, v81, v75, v84
	v_add_u32_e32 v81, vcc, v83, v82
	v_lshlrev_b32_e32 v81, 23, v81
	s_mov_b32 s1, 0x33000000
	v_sub_u32_e32 v81, vcc, s1, v81
	v_or_b32_e32 v80, v81, v80
	v_lshrrev_b32_e32 v75, 9, v75
	v_or_b32_e32 v75, v80, v75
	v_and_b32_e32 v80, 0xbffff000, v78
	v_mul_f32_e32 v82, 0xbfc90fda, v78
	s_mov_b32 s1, 0x3fc90000
	v_mac_f32_e32 v82, s1, v80
	s_mov_b32 s4, 0x39fda000
	v_sub_f32_e32 v81, v78, v80
	v_mac_f32_e32 v82, s4, v80
	v_mac_f32_e32 v82, s1, v81
	v_mul_f32_e32 v80, 0x33a22168, v78
	s_mov_b32 s1, 0x3fc90fda
	v_mac_f32_e32 v82, s4, v81
	v_mac_f32_e32 v80, s1, v75
	v_add_f32_e32 v75, v82, v80
	v_bfe_u32 v79, v76, 29, 1
	v_lshrrev_b32_e32 v76, 30, v76
	v_mac_f32_e32 v75, s1, v78
	v_add_u32_e32 v76, vcc, v79, v76
BB0_110:                                ; %Flow
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB0_112
	s_cbranch_execz BB0_112
BB0_111:
	v_mul_f32_e32 v75, 0x3f22f983, v77
	v_rndne_f32_e32 v78, v75
	s_mov_b32 s1, 0x3fc90fda
	v_and_b32_e32 v75, 0xfffff000, v78
	v_mul_f32_e32 v79, s1, v78
	s_mov_b32 s4, 0x3fc90000
	v_mad_f32 v79, v75, s4, -v79
	s_mov_b32 s5, 0x39fda000
	v_mad_f32 v80, -v78, s1, v77
	v_sub_f32_e32 v76, v78, v75
	v_mac_f32_e32 v79, s5, v75
	v_mac_f32_e32 v79, s4, v76
	v_sub_f32_e32 v77, v77, v80
	v_mad_f32 v77, -v78, s1, v77
	v_mac_f32_e32 v79, s5, v76
	v_sub_f32_e32 v77, v77, v79
	v_add_f32_e32 v77, v80, v77
	s_mov_b32 s1, 0x33a22168
	v_mad_f32 v79, -v78, s1, v77
	v_sub_f32_e32 v77, v77, v79
	v_mad_f32 v77, -v78, s1, v77
	v_mul_f32_e32 v80, 0xb3a22168, v78
	s_mov_b32 s1, 0x33a22000
	v_mac_f32_e32 v80, s1, v75
	s_mov_b32 s4, 0x2c340000
	v_mac_f32_e32 v80, s4, v75
	v_mac_f32_e32 v80, s1, v76
	v_mac_f32_e32 v80, s4, v76
	v_cvt_i32_f32_e32 v76, v78
	v_sub_f32_e32 v75, v77, v80
	v_add_f32_e32 v75, v79, v75
	v_mac_f32_e32 v75, 0xa7c234c4, v78
BB0_112:                                ; %_Z3sinf.exit
	s_or_b64 exec, exec, s[2:3]
	v_and_b32_e32 v0, 0xf8, v0
	v_mul_u32_u24_e32 v0, 9, v0
	v_or_b32_e32 v0, v0, v18
	v_add_f32_e32 v18, v27, v29
	v_sub_f32_e32 v27, v27, v29
	v_add_f32_e32 v29, v28, v30
	v_sub_f32_e32 v28, v28, v30
	v_add_f32_e32 v30, v35, v37
	v_sub_f32_e32 v35, v35, v37
	v_add_f32_e32 v37, v36, v38
	v_sub_f32_e32 v36, v36, v38
	v_add_f32_e32 v38, v23, v25
	v_sub_f32_e32 v23, v23, v25
	v_add_f32_e32 v25, v24, v26
	v_sub_f32_e32 v24, v24, v26
	v_add_f32_e32 v26, v31, v33
	v_sub_f32_e32 v31, v31, v33
	v_add_f32_e32 v33, v32, v34
	v_sub_f32_e32 v32, v32, v34
	v_sub_f32_e32 v34, v29, v25
	v_sub_f32_e32 v77, v37, v33
	v_mad_f32 v78, 0, v34, v77
	v_mad_f32 v34, v77, 0, -v34
	s_mov_b32 s5, 0xb94c1982
	v_mov_b32_e32 v77, 0x3c0881c4
	v_mul_f32_e32 v79, v47, v47
	v_mad_f32 v80, s5, v79, v77
	v_madak_f32 v80, v79, v80, 0xbe2aaa9d
	v_mul_f32_e32 v80, v79, v80
	v_mac_f32_e32 v47, v47, v80
	s_mov_b32 s4, 0x37d75334
	v_mov_b32_e32 v80, 0xbab64f3b
	v_mad_f32 v81, s4, v79, v80
	v_madak_f32 v81, v79, v81, 0x3d2aabf7
	v_lshlrev_b32_e32 v0, 2, v0
	v_madak_f32 v81, v79, v81, 0xbf000004
	v_mad_f32 v79, v79, v81, 1.0
	v_and_b32_e32 v81, 1, v48
	v_add_u32_e32 v0, vcc, s0, v0
	v_cmp_eq_u32_e32 vcc, 0, v81
	v_cndmask_b32_e64 v47, -v47, v79, vcc
	v_lshlrev_b32_e32 v48, 30, v48
	v_bfrev_b32_e32 v79, 1
	v_and_b32_e32 v48, v79, v48
	v_xor_b32_e32 v47, v48, v47
	v_mul_f32_e32 v48, v51, v51
	v_mad_f32 v81, s5, v48, v77
	v_madak_f32 v81, v48, v81, 0xbe2aaa9d
	v_mul_f32_e32 v81, v48, v81
	v_mac_f32_e32 v51, v51, v81
	v_mad_f32 v81, s4, v48, v80
	v_madak_f32 v81, v48, v81, 0x3d2aabf7
	v_madak_f32 v81, v48, v81, 0xbf000004
	v_mad_f32 v48, v48, v81, 1.0
	v_and_b32_e32 v81, 1, v52
	v_cmp_eq_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v48, v48, v51, vcc
	v_lshlrev_b32_e32 v51, 30, v52
	v_xor_b32_e32 v41, v51, v41
	v_and_b32_e32 v41, v79, v41
	s_mov_b32 s3, 0x7f7fffff
	v_sub_f32_e32 v51, v30, v26
	v_xor_b32_e32 v41, v41, v48
	v_mov_b32_e32 v48, 0x7fc00000
	v_cmp_lt_u32_e32 vcc, s3, v42
	v_cndmask_b32_e32 v42, v47, v48, vcc
	v_sub_f32_e32 v47, v18, v38
	v_add_f32_e32 v81, v51, v34
	v_cndmask_b32_e32 v41, v41, v48, vcc
	v_add_f32_e32 v52, v47, v78
	v_mul_f32_e32 v82, v41, v81
	v_mad_f32 v82, v52, v42, -v82
	v_mul_f32_e32 v42, v81, v42
	v_mac_f32_e32 v42, v52, v41
	v_add_f32_e32 v41, v28, v36
	v_sub_f32_e32 v28, v36, v28
	v_mad_f32 v36, 0, v23, v31
	v_mad_f32 v23, v31, 0, -v23
	v_sub_f32_e32 v31, v32, v24
	v_sub_f32_e64 v24, -v24, v32
	v_mul_f32_e32 v32, v57, v57
	v_mad_f32 v52, s5, v32, v77
	v_madak_f32 v52, v32, v52, 0xbe2aaa9d
	v_mul_f32_e32 v52, v32, v52
	v_mac_f32_e32 v57, v57, v52
	v_mad_f32 v52, s4, v32, v80
	v_madak_f32 v52, v32, v52, 0x3d2aabf7
	v_madak_f32 v52, v32, v52, 0xbf000004
	v_mad_f32 v32, v32, v52, 1.0
	v_and_b32_e32 v52, 1, v58
	v_cmp_eq_u32_e32 vcc, 0, v52
	v_lshlrev_b32_e32 v52, 30, v58
	v_cndmask_b32_e64 v32, -v57, v32, vcc
	v_and_b32_e32 v52, v79, v52
	v_xor_b32_e32 v32, v52, v32
	v_mul_f32_e32 v52, v61, v61
	v_mad_f32 v57, s5, v52, v77
	v_madak_f32 v57, v52, v57, 0xbe2aaa9d
	v_mul_f32_e32 v57, v52, v57
	v_mac_f32_e32 v61, v61, v57
	v_mad_f32 v57, s4, v52, v80
	v_madak_f32 v57, v52, v57, 0x3d2aabf7
	v_madak_f32 v57, v52, v57, 0xbf000004
	s_mov_b32 s1, 0x3f3504f3
	v_mad_f32 v52, v52, v57, 1.0
	v_and_b32_e32 v57, 1, v62
	v_cmp_eq_u32_e32 vcc, 0, v57
	v_lshlrev_b32_e32 v57, 30, v62
	v_mul_f32_e32 v24, s1, v24
	v_mul_f32_e32 v31, s1, v31
	v_xor_b32_e32 v55, v57, v55
	v_mad_f32 v57, s1, v41, v31
	v_mad_f32 v58, s1, v28, v24
	v_mad_f32 v31, v41, s1, -v31
	v_mad_f32 v24, v28, s1, -v24
	v_mad_f32 v28, 0, v31, v24
	v_mad_f32 v24, v24, 0, -v31
	v_mul_f32_e32 v31, v69, v69
	v_cndmask_b32_e32 v52, v52, v61, vcc
	v_cmp_lt_u32_e32 vcc, s3, v56
	v_add_f32_e32 v56, v35, v23
	v_sub_f32_e32 v23, v35, v23
	v_mad_f32 v35, s5, v31, v77
	v_madak_f32 v35, v31, v35, 0xbe2aaa9d
	v_mul_f32_e32 v35, v31, v35
	v_mac_f32_e32 v69, v69, v35
	v_mad_f32 v35, s4, v31, v80
	v_madak_f32 v35, v31, v35, 0x3d2aabf7
	v_madak_f32 v35, v31, v35, 0xbf000004
	v_and_b32_e32 v55, v79, v55
	v_xor_b32_e32 v52, v55, v52
	v_mad_f32 v31, v31, v35, 1.0
	v_and_b32_e32 v35, 1, v70
	v_cndmask_b32_e32 v32, v32, v48, vcc
	v_cndmask_b32_e32 v52, v52, v48, vcc
	v_cmp_eq_u32_e32 vcc, 0, v35
	v_lshlrev_b32_e32 v35, 30, v70
	v_cndmask_b32_e64 v31, -v69, v31, vcc
	v_and_b32_e32 v35, v79, v35
	v_xor_b32_e32 v31, v35, v31
	v_mul_f32_e32 v35, v71, v71
	v_add_f32_e32 v55, v27, v36
	v_sub_f32_e32 v27, v27, v36
	v_mad_f32 v36, s5, v35, v77
	v_madak_f32 v36, v35, v36, 0xbe2aaa9d
	v_mul_f32_e32 v36, v35, v36
	v_add_f32_e32 v18, v18, v38
	v_add_f32_e32 v25, v29, v25
	v_mac_f32_e32 v71, v71, v36
	v_mad_f32 v36, s4, v35, v80
	v_add_f32_e32 v26, v30, v26
	v_add_f32_e32 v29, v18, v25
	v_sub_f32_e32 v30, v18, v25
	v_mul_f32_e32 v18, v21, v21
	v_madak_f32 v36, v35, v36, 0x3d2aabf7
	v_mad_f32 v25, s5, v18, v77
	v_madak_f32 v36, v35, v36, 0xbf000004
	v_madak_f32 v25, v18, v25, 0xbe2aaa9d
	v_mad_f32 v35, v35, v36, 1.0
	v_and_b32_e32 v36, 1, v72
	v_mul_f32_e32 v25, v18, v25
	v_cmp_eq_u32_e32 vcc, 0, v36
	v_lshlrev_b32_e32 v36, 30, v72
	v_mac_f32_e32 v21, v21, v25
	v_mad_f32 v25, s4, v18, v80
	v_xor_b32_e32 v36, v36, v67
	v_madak_f32 v25, v18, v25, 0x3d2aabf7
	v_madak_f32 v25, v18, v25, 0xbf000004
	v_cndmask_b32_e32 v35, v35, v71, vcc
	v_and_b32_e32 v36, v79, v36
	v_xor_b32_e32 v35, v36, v35
	v_cmp_lt_u32_e32 vcc, s3, v68
	v_mad_f32 v18, v18, v25, 1.0
	v_and_b32_e32 v25, 1, v22
	v_cndmask_b32_e32 v31, v31, v48, vcc
	v_cndmask_b32_e32 v35, v35, v48, vcc
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_cndmask_b32_e64 v18, -v21, v18, vcc
	v_lshlrev_b32_e32 v21, 30, v22
	v_and_b32_e32 v21, 0x80000000, v21
	v_xor_b32_e32 v18, v21, v18
	v_mul_f32_e32 v21, v39, v39
	v_mad_f32 v22, s5, v21, v77
	v_madak_f32 v22, v21, v22, 0xbe2aaa9d
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v39, v39, v22
	v_mad_f32 v22, s4, v21, v80
	v_madak_f32 v22, v21, v22, 0x3d2aabf7
	v_madak_f32 v22, v21, v22, 0xbf000004
	v_mad_f32 v21, v21, v22, 1.0
	v_and_b32_e32 v22, 1, v40
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v40
	v_xor_b32_e32 v20, v22, v20
	v_cndmask_b32_e32 v21, v21, v39, vcc
	v_and_b32_e32 v20, v79, v20
	v_xor_b32_e32 v20, v20, v21
	v_mul_f32_e32 v21, v63, v63
	v_mad_f32 v22, s5, v21, v77
	v_madak_f32 v22, v21, v22, 0xbe2aaa9d
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v63, v63, v22
	v_mad_f32 v22, s4, v21, v80
	v_madak_f32 v22, v21, v22, 0x3d2aabf7
	v_madak_f32 v22, v21, v22, 0xbf000004
	v_mad_f32 v21, v21, v22, 1.0
	v_and_b32_e32 v22, 1, v64
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v64
	v_cndmask_b32_e64 v21, -v63, v21, vcc
	v_and_b32_e32 v22, v79, v22
	v_xor_b32_e32 v21, v22, v21
	v_mul_f32_e32 v22, v65, v65
	v_mad_f32 v25, s5, v22, v77
	v_madak_f32 v25, v22, v25, 0xbe2aaa9d
	v_mul_f32_e32 v25, v22, v25
	v_mac_f32_e32 v65, v65, v25
	v_mad_f32 v25, s4, v22, v80
	v_madak_f32 v25, v22, v25, 0x3d2aabf7
	v_madak_f32 v25, v22, v25, 0xbf000004
	v_add_f32_e32 v62, v56, v58
	v_mad_f32 v22, v22, v25, 1.0
	v_and_b32_e32 v25, 1, v66
	v_add_f32_e32 v61, v55, v57
	v_mul_f32_e32 v81, v52, v62
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v66
	v_mad_f32 v81, v61, v32, -v81
	v_mul_f32_e32 v32, v62, v32
	v_add_f32_e32 v41, v23, v24
	v_xor_b32_e32 v25, v25, v59
	v_mac_f32_e32 v32, v61, v52
	v_add_f32_e32 v36, v27, v28
	v_mul_f32_e32 v52, v35, v41
	v_mad_f32 v52, v36, v31, -v52
	v_mul_f32_e32 v31, v41, v31
	v_cndmask_b32_e32 v22, v22, v65, vcc
	v_and_b32_e32 v25, v79, v25
	v_cmp_lt_u32_e32 vcc, s3, v19
	v_mac_f32_e32 v31, v36, v35
	ds_write2_b32 v17, v29, v81 offset1:72
	ds_write2_b32 v17, v82, v52 offset0:144 offset1:216
	v_add_f32_e32 v29, v37, v33
	v_xor_b32_e32 v22, v25, v22
	v_cndmask_b32_e32 v36, v18, v48, vcc
	v_cndmask_b32_e32 v37, v20, v48, vcc
	v_cmp_lt_u32_e32 vcc, s3, v60
	v_sub_f32_e32 v38, v26, v29
	v_cndmask_b32_e32 v40, v22, v48, vcc
	v_sub_f32_e32 v35, v56, v58
	v_mul_f32_e32 v18, v37, v38
	s_movk_i32 s6, 0x480
	v_cndmask_b32_e32 v39, v21, v48, vcc
	v_sub_f32_e32 v33, v55, v57
	v_mul_f32_e32 v19, v40, v35
	v_mad_f32 v18, v30, v36, -v18
	v_mad_f32 v19, v33, v39, -v19
	v_add_u32_e32 v41, vcc, s6, v17
	ds_write2_b32 v41, v18, v19 offset1:72
	v_mul_f32_e32 v18, v49, v49
	v_mad_f32 v19, s5, v18, v77
	v_madak_f32 v19, v18, v19, 0xbe2aaa9d
	v_mul_f32_e32 v19, v18, v19
	v_mac_f32_e32 v49, v49, v19
	v_mad_f32 v19, s4, v18, v80
	v_madak_f32 v19, v18, v19, 0x3d2aabf7
	v_madak_f32 v19, v18, v19, 0xbf000004
	v_mad_f32 v18, v18, v19, 1.0
	v_and_b32_e32 v19, 1, v50
	v_cmp_eq_u32_e32 vcc, 0, v19
	v_lshlrev_b32_e32 v19, 30, v50
	v_cndmask_b32_e64 v18, -v49, v18, vcc
	v_and_b32_e32 v19, v79, v19
	v_xor_b32_e32 v18, v19, v18
	v_mul_f32_e32 v19, v53, v53
	v_mad_f32 v20, s5, v19, v77
	v_madak_f32 v20, v19, v20, 0xbe2aaa9d
	v_mul_f32_e32 v20, v19, v20
	v_mac_f32_e32 v53, v53, v20
	v_mad_f32 v20, s4, v19, v80
	v_madak_f32 v20, v19, v20, 0x3d2aabf7
	v_madak_f32 v20, v19, v20, 0xbf000004
	v_mad_f32 v19, v19, v20, 1.0
	v_and_b32_e32 v20, 1, v54
	v_cmp_eq_u32_e32 vcc, 0, v20
	v_lshlrev_b32_e32 v20, 30, v54
	v_xor_b32_e32 v20, v20, v44
	v_cndmask_b32_e32 v19, v19, v53, vcc
	v_and_b32_e32 v20, v79, v20
	v_xor_b32_e32 v19, v20, v19
	v_mul_f32_e32 v20, v73, v73
	v_mad_f32 v21, s5, v20, v77
	v_madak_f32 v21, v20, v21, 0xbe2aaa9d
	v_mul_f32_e32 v21, v20, v21
	v_mac_f32_e32 v73, v73, v21
	v_mad_f32 v21, s4, v20, v80
	v_madak_f32 v21, v20, v21, 0x3d2aabf7
	v_madak_f32 v21, v20, v21, 0xbf000004
	v_mad_f32 v20, v20, v21, 1.0
	v_and_b32_e32 v21, 1, v74
	v_cmp_eq_u32_e32 vcc, 0, v21
	v_lshlrev_b32_e32 v21, 30, v74
	v_cndmask_b32_e64 v20, -v73, v20, vcc
	v_and_b32_e32 v21, v79, v21
	v_xor_b32_e32 v20, v21, v20
	v_mul_f32_e32 v21, v75, v75
	v_mac_f32_e32 v77, s5, v21
	v_mov_b32_e32 v22, 0xbe2aaa9d
	v_mac_f32_e32 v22, v21, v77
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v75, v75, v22
	v_mac_f32_e32 v80, s4, v21
	v_mov_b32_e32 v22, 0x3d2aabf7
	v_sub_f32_e32 v27, v27, v28
	v_sub_f32_e32 v28, v23, v24
	v_mac_f32_e32 v22, v21, v80
	v_mov_b32_e32 v23, 0xbf000004
	v_mac_f32_e32 v23, v21, v22
	v_and_b32_e32 v22, 1, v76
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v76
	v_mad_f32 v21, v21, v23, 1.0
	v_xor_b32_e32 v22, v22, v45
	v_cndmask_b32_e32 v21, v21, v75, vcc
	v_cmp_lt_u32_e32 vcc, s3, v43
	v_and_b32_e32 v22, v79, v22
	v_xor_b32_e32 v21, v22, v21
	v_cndmask_b32_e32 v43, v18, v48, vcc
	v_cndmask_b32_e32 v44, v19, v48, vcc
	v_cmp_lt_u32_e32 vcc, s3, v46
	v_sub_f32_e32 v34, v51, v34
	v_cndmask_b32_e32 v46, v21, v48, vcc
	s_movk_i32 s2, 0x6c0
	v_cndmask_b32_e32 v45, v20, v48, vcc
	v_mul_f32_e32 v19, v46, v28
	v_sub_f32_e32 v47, v47, v78
	v_mul_f32_e32 v18, v44, v34
	v_mad_f32 v18, v47, v43, -v18
	v_mad_f32 v19, v27, v45, -v19
	v_add_u32_e32 v48, vcc, s2, v17
	v_add_f32_e32 v26, v26, v29
	ds_write2_b32 v48, v18, v19 offset1:72
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[18:19], v0 offset1:8
	ds_read2_b32 v[20:21], v0 offset0:16 offset1:24
	ds_read2_b32 v[22:23], v0 offset0:32 offset1:40
	ds_read2_b32 v[24:25], v0 offset0:48 offset1:56
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_write2_b32 v17, v26, v32 offset1:72
	ds_write2_b32 v17, v42, v31 offset0:144 offset1:216
	v_mul_f32_e32 v17, v38, v36
	v_mul_f32_e32 v26, v35, v39
	v_mac_f32_e32 v26, v33, v40
	v_mac_f32_e32 v17, v30, v37
	ds_write2_b32 v41, v17, v26 offset1:72
	v_mul_f32_e32 v17, v34, v43
	v_mul_f32_e32 v26, v28, v45
	v_mac_f32_e32 v17, v47, v44
	v_mac_f32_e32 v26, v27, v46
	ds_write2_b32 v48, v17, v26 offset1:72
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[26:27], v0 offset1:8
	ds_read2_b32 v[28:29], v0 offset0:16 offset1:24
	ds_read2_b32 v[30:31], v0 offset0:32 offset1:40
	ds_read2_b32 v[32:33], v0 offset0:48 offset1:56
	v_add_f32_e32 v0, v18, v22
	v_add_f32_e32 v38, v20, v24
	v_add_f32_e32 v40, v21, v25
	v_add_f32_e32 v36, v19, v23
	s_waitcnt lgkmcnt(1)
	v_add_f32_e32 v17, v26, v30
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v39, v28, v32
	v_add_f32_e32 v37, v27, v31
	v_add_f32_e32 v41, v29, v33
	v_add_f32_e32 v42, v0, v38
	v_add_f32_e32 v44, v36, v40
	v_add_f32_e32 v43, v17, v39
	v_add_f32_e32 v45, v37, v41
	v_add_f32_e32 v34, v42, v44
	v_add_f32_e32 v35, v43, v45
	flat_store_dwordx2 v[11:12], v[34:35]
	v_sub_f32_e32 v11, v19, v23
	v_sub_f32_e32 v12, v27, v31
	v_sub_f32_e32 v21, v21, v25
	v_sub_f32_e32 v23, v29, v33
	v_sub_f32_e32 v18, v18, v22
	v_sub_f32_e32 v20, v20, v24
	v_sub_f32_e32 v22, v28, v32
	v_add_f32_e32 v24, v11, v12
	v_sub_f32_e32 v25, v12, v11
	v_sub_f32_e32 v11, v23, v21
	v_sub_f32_e64 v12, -v21, v23
	v_sub_f32_e32 v19, v26, v30
	v_mad_f32 v26, 0, v20, v22
	v_mad_f32 v20, v22, 0, -v20
	v_mul_f32_e32 v21, s1, v11
	v_mul_f32_e32 v22, s1, v12
	v_add_f32_e32 v27, v19, v20
	v_mad_f32 v29, s1, v25, v22
	v_add_f32_e32 v23, v18, v26
	v_mad_f32 v28, s1, v24, v21
	v_add_f32_e32 v11, v23, v28
	v_add_f32_e32 v12, v27, v29
	flat_store_dwordx2 v[3:4], v[11:12]
	v_sub_f32_e32 v3, v36, v40
	v_sub_f32_e32 v4, v37, v41
	v_sub_f32_e32 v11, v17, v39
	v_sub_f32_e32 v0, v0, v38
	v_mad_f32 v12, 0, v3, v4
	v_mad_f32 v17, v4, 0, -v3
	v_add_f32_e32 v3, v0, v12
	v_add_f32_e32 v4, v11, v17
	flat_store_dwordx2 v[5:6], v[3:4]
	v_sub_f32_e32 v5, v0, v12
	v_sub_f32_e32 v6, v11, v17
	v_sub_f32_e32 v0, v18, v26
	v_mad_f32 v17, v24, s1, -v21
	v_mad_f32 v18, v25, s1, -v22
	v_sub_f32_e32 v20, v19, v20
	v_mad_f32 v19, 0, v17, v18
	v_mad_f32 v21, v18, 0, -v17
	v_add_f32_e32 v17, v0, v19
	v_add_f32_e32 v18, v20, v21
	v_sub_f32_e32 v3, v42, v44
	v_sub_f32_e32 v4, v43, v45
	v_sub_f32_e32 v11, v23, v28
	v_sub_f32_e32 v12, v27, v29
	v_sub_f32_e32 v19, v0, v19
	v_sub_f32_e32 v20, v20, v21
	flat_store_dwordx2 v[1:2], v[17:18]
	flat_store_dwordx2 v[7:8], v[3:4]
	flat_store_dwordx2 v[9:10], v[11:12]
	flat_store_dwordx2 v[13:14], v[5:6]
	flat_store_dwordx2 v[15:16], v[19:20]
	s_endpgm
.Lfunc_end0:
	.size	fft1D_512, .Lfunc_end0-fft1D_512
                                        ; -- End function
	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 32468
; NumSgprs: 35
; NumVgprs: 87
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 192
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 21
; NumSGPRsForWavesPerEU: 35
; NumVGPRsForWavesPerEU: 87
; Occupancy: 2
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.text
	.protected	ifft1D_512      ; -- Begin function ifft1D_512
	.globl	ifft1D_512
	.p2align	8
	.type	ifft1D_512,@function
	.amdgpu_hsa_kernel ifft1D_512
ifft1D_512:                             ; @ifft1D_512
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 2
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		granulated_workitem_vgpr_count = 21
		granulated_wavefront_sgpr_count = 4
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_wgp_mode = 0
		enable_mem_ordered = 0
		enable_fwd_progress = 0
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_trap_handler = 0
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_wavefront_size32 = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 2304
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 64
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 35
		workitem_vgpr_count = 87
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = -1
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; %bb.0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_lshl_b32 s2, s6, 9
	v_or_b32_e32 v2, s2, v0
	v_mov_b32_e32 v1, 0
	v_ashrrev_i64 v[1:2], 29, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v3, s1
	v_add_u32_e32 v11, vcc, s0, v1
	v_addc_u32_e32 v12, vcc, v3, v2, vcc
	s_movk_i32 s0, 0x200
	v_add_u32_e32 v9, vcc, s0, v11
	v_addc_u32_e32 v10, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x400
	v_add_u32_e32 v5, vcc, s0, v11
	v_addc_u32_e32 v6, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x600
	v_add_u32_e32 v1, vcc, s0, v11
	v_addc_u32_e32 v2, vcc, 0, v12, vcc
	s_movk_i32 s0, 0x800
	v_cvt_f64_i32_e32 v[42:43], v0
	v_add_u32_e32 v3, vcc, s0, v11
	v_addc_u32_e32 v4, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xa00
	v_add_u32_e32 v7, vcc, s0, v11
	s_mov_b32 s1, 0x3fa921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[15:16], v[42:43], s[0:1]
	v_addc_u32_e32 v8, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xc00
	v_add_u32_e32 v13, vcc, s0, v11
	v_addc_u32_e32 v14, vcc, 0, v12, vcc
	s_movk_i32 s0, 0xe00
	flat_load_dwordx2 v[24:25], v[5:6]
	flat_load_dwordx2 v[28:29], v[9:10]
	v_cvt_f32_f64_e32 v17, v[15:16]
	v_add_u32_e32 v15, vcc, s0, v11
	v_addc_u32_e32 v16, vcc, 0, v12, vcc
	flat_load_dwordx2 v[30:31], v[7:8]
	flat_load_dwordx2 v[32:33], v[3:4]
	flat_load_dwordx2 v[20:21], v[1:2]
	flat_load_dwordx2 v[34:35], v[11:12]
	flat_load_dwordx2 v[22:23], v[15:16]
	flat_load_dwordx2 v[26:27], v[13:14]
	s_brev_b32 s2, -2
	s_brev_b32 s0, 18
	s_mov_b32 s8, s7
	v_cmp_nlt_f32_e64 s[0:1], |v17|, s0
	v_and_b32_e32 v19, s2, v17
	v_and_b32_e32 v18, s2, v17
	s_mov_b32 s32, s8
                                        ; implicit-def: $vgpr36
                                        ; implicit-def: $vgpr37
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_2
	s_cbranch_execz BB1_2
BB1_1:
	v_and_b32_e32 v37, 0x7fffff, v17
	v_or_b32_e32 v37, 0x800000, v37
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v38, v37, s4
	v_mul_lo_u32 v39, v37, s5
	v_mul_hi_u32 v41, v37, s5
	v_mul_lo_u32 v40, v37, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v38, vcc, v39, v38
	v_mul_lo_u32 v44, v37, s4
	v_cndmask_b32_e64 v39, 0, 1, vcc
	v_add_u32_e32 v39, vcc, v39, v41
	v_mul_hi_u32 v41, v37, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v39, vcc, v39, v44
	v_mul_lo_u32 v45, v37, s4
	v_cndmask_b32_e64 v44, 0, 1, vcc
	v_add_u32_e32 v41, vcc, v44, v41
	v_mul_hi_u32 v44, v37, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v41, vcc, v41, v45
	v_mul_lo_u32 v46, v37, s4
	v_cndmask_b32_e64 v45, 0, 1, vcc
	v_add_u32_e32 v44, vcc, v45, v44
	v_mul_hi_u32 v45, v37, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v44, vcc, v44, v46
	v_mul_lo_u32 v47, v37, s4
	v_cndmask_b32_e64 v46, 0, 1, vcc
	v_add_u32_e32 v45, vcc, v46, v45
	v_mul_hi_u32 v46, v37, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v48, v37, s4
	v_add_u32_e32 v45, vcc, v45, v47
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_mul_hi_u32 v37, v37, s4
	v_add_u32_e32 v46, vcc, v47, v46
	v_add_u32_e32 v46, vcc, v46, v48
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_lshrrev_b32_e32 v36, 23, v19
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v36, vcc, s4, v36
	v_add_u32_e32 v37, vcc, v47, v37
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v37, v37, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v41, v41, v39, vcc
	v_cndmask_b32_e32 v39, v39, v38, vcc
	v_cndmask_b32_e32 v38, v38, v40, vcc
	v_cndmask_b32_e64 v40, 0, 32, vcc
	v_sub_u32_e32 v36, vcc, v36, v40
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v40, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v41, v41, v39, vcc
	v_cndmask_b32_e32 v38, v39, v38, vcc
	v_cndmask_b32_e64 v39, 0, 32, vcc
	v_cndmask_b32_e32 v37, v37, v46, vcc
	v_sub_u32_e32 v36, vcc, v36, v39
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e32 v37, v37, v40, vcc
	v_cndmask_b32_e32 v39, v40, v45, vcc
	v_cndmask_b32_e32 v40, v45, v44, vcc
	v_cndmask_b32_e32 v44, v44, v41, vcc
	v_cndmask_b32_e32 v38, v41, v38, vcc
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_sub_u32_e32 v36, vcc, v36, v41
	v_cmp_lt_u32_e32 vcc, 31, v36
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_cndmask_b32_e32 v37, v37, v39, vcc
	v_cndmask_b32_e32 v39, v39, v40, vcc
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e32 v38, v44, v38, vcc
	v_sub_u32_e32 v36, vcc, v36, v41
	v_sub_u32_e32 v41, vcc, 32, v36
	v_alignbit_b32 v44, v37, v39, v41
	v_alignbit_b32 v45, v39, v40, v41
	v_cmp_ne_u32_e32 vcc, 0, v36
	v_cndmask_b32_e32 v37, v37, v44, vcc
	v_alignbit_b32 v41, v40, v38, v41
	v_cndmask_b32_e32 v36, v39, v45, vcc
	v_cndmask_b32_e32 v39, v40, v41, vcc
	v_alignbit_b32 v41, v37, v36, 30
	v_bfe_i32 v44, v37, 29, 1
	v_alignbit_b32 v36, v36, v39, 30
	v_alignbit_b32 v38, v39, v38, 30
	v_xor_b32_e32 v41, v44, v41
	v_xor_b32_e32 v36, v44, v36
	v_xor_b32_e32 v38, v44, v38
	v_ffbh_u32_e32 v44, v41
	v_cmp_ne_u32_e32 vcc, 0, v41
	v_cndmask_b32_e32 v44, 32, v44, vcc
	v_lshrrev_b32_e32 v40, 29, v37
	v_sub_u32_e32 v45, vcc, 31, v44
	v_alignbit_b32 v41, v41, v36, v45
	v_alignbit_b32 v36, v36, v38, v45
	v_lshlrev_b32_e32 v40, 31, v40
	v_lshlrev_b32_e32 v38, 23, v44
	v_lshrrev_b32_e32 v45, 9, v41
	v_sub_u32_e32 v38, vcc, v40, v38
	v_or_b32_e32 v38, v38, v45
	v_alignbit_b32 v41, v41, v36, 9
	v_add_u32_e32 v38, vcc, 0.5, v38
	v_ffbh_u32_e32 v45, v41
	v_cmp_ne_u32_e32 vcc, 0, v41
	v_cndmask_b32_e32 v45, 32, v45, vcc
	v_sub_u32_e32 v46, vcc, 31, v45
	v_alignbit_b32 v36, v41, v36, v46
	v_add_u32_e32 v41, vcc, v45, v44
	v_lshlrev_b32_e32 v41, 23, v41
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v41, vcc, s4, v41
	v_or_b32_e32 v40, v41, v40
	v_lshrrev_b32_e32 v36, 9, v36
	v_or_b32_e32 v36, v40, v36
	v_and_b32_e32 v40, 0xbffff000, v38
	v_mul_f32_e32 v44, 0xbfc90fda, v38
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v44, s4, v40
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v41, v38, v40
	v_mac_f32_e32 v44, s5, v40
	v_mac_f32_e32 v44, s4, v41
	v_mul_f32_e32 v40, 0x33a22168, v38
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v44, s5, v41
	v_mac_f32_e32 v40, s4, v36
	v_add_f32_e32 v36, v44, v40
	v_bfe_u32 v39, v37, 29, 1
	v_lshrrev_b32_e32 v37, 30, v37
	v_mac_f32_e32 v36, s4, v38
	v_add_u32_e32 v37, vcc, v39, v37
BB1_2:                                  ; %Flow529
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_4
	s_cbranch_execz BB1_4
BB1_3:
	v_mul_f32_e32 v36, 0x3f22f983, v18
	v_rndne_f32_e32 v38, v36
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v36, 0xfffff000, v38
	v_mul_f32_e32 v39, s4, v38
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v39, v36, s5, -v39
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v40, -v38, s4, v18
	v_sub_f32_e32 v37, v38, v36
	v_mac_f32_e32 v39, s6, v36
	v_mac_f32_e32 v39, s5, v37
	v_sub_f32_e32 v41, v18, v40
	v_mad_f32 v41, -v38, s4, v41
	v_mac_f32_e32 v39, s6, v37
	v_sub_f32_e32 v39, v41, v39
	v_add_f32_e32 v39, v40, v39
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v40, -v38, s4, v39
	v_sub_f32_e32 v39, v39, v40
	v_mad_f32 v39, -v38, s4, v39
	v_mul_f32_e32 v41, 0xb3a22168, v38
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v41, s4, v36
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v41, s5, v36
	v_mac_f32_e32 v41, s4, v37
	v_mac_f32_e32 v41, s5, v37
	v_cvt_i32_f32_e32 v37, v38
	v_sub_f32_e32 v36, v39, v41
	v_add_f32_e32 v36, v40, v36
	v_mac_f32_e32 v36, 0xa7c234c4, v38
BB1_4:                                  ; %_Z3cosf.exit30
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr40
                                        ; implicit-def: $vgpr41
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_6
	s_cbranch_execz BB1_6
BB1_5:
	v_and_b32_e32 v39, 0x7fffff, v17
	v_or_b32_e32 v39, 0x800000, v39
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v40, v39, s2
	v_mul_lo_u32 v41, v39, s3
	v_mul_hi_u32 v45, v39, s3
	v_mul_lo_u32 v44, v39, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v40, vcc, v41, v40
	v_mul_lo_u32 v46, v39, s2
	v_cndmask_b32_e64 v41, 0, 1, vcc
	v_add_u32_e32 v41, vcc, v41, v45
	v_mul_hi_u32 v45, v39, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v41, vcc, v41, v46
	v_mul_lo_u32 v47, v39, s2
	v_cndmask_b32_e64 v46, 0, 1, vcc
	v_add_u32_e32 v45, vcc, v46, v45
	v_mul_hi_u32 v46, v39, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v45, vcc, v45, v47
	v_mul_lo_u32 v48, v39, s2
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v46, vcc, v47, v46
	v_mul_hi_u32 v47, v39, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v46, vcc, v46, v48
	v_mul_lo_u32 v49, v39, s2
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v39, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v50, v39, s2
	v_add_u32_e32 v47, vcc, v47, v49
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_mul_hi_u32 v39, v39, s2
	v_add_u32_e32 v48, vcc, v49, v48
	v_add_u32_e32 v48, vcc, v48, v50
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_lshrrev_b32_e32 v38, 23, v19
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v38, vcc, s2, v38
	v_add_u32_e32 v39, vcc, v49, v39
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v39, v39, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v41, vcc
	v_cndmask_b32_e32 v41, v41, v40, vcc
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e64 v44, 0, 32, vcc
	v_sub_u32_e32 v38, vcc, v38, v44
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v44, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v45, v45, v41, vcc
	v_cndmask_b32_e32 v40, v41, v40, vcc
	v_cndmask_b32_e64 v41, 0, 32, vcc
	v_cndmask_b32_e32 v39, v39, v48, vcc
	v_sub_u32_e32 v38, vcc, v38, v41
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e32 v39, v39, v44, vcc
	v_cndmask_b32_e32 v41, v44, v47, vcc
	v_cndmask_b32_e32 v44, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v45, vcc
	v_cndmask_b32_e32 v40, v45, v40, vcc
	v_cndmask_b32_e64 v45, 0, 32, vcc
	v_sub_u32_e32 v38, vcc, v38, v45
	v_cmp_lt_u32_e32 vcc, 31, v38
	v_cndmask_b32_e64 v45, 0, 32, vcc
	v_cndmask_b32_e32 v39, v39, v41, vcc
	v_cndmask_b32_e32 v41, v41, v44, vcc
	v_cndmask_b32_e32 v44, v44, v46, vcc
	v_cndmask_b32_e32 v40, v46, v40, vcc
	v_sub_u32_e32 v38, vcc, v38, v45
	v_sub_u32_e32 v45, vcc, 32, v38
	v_alignbit_b32 v46, v39, v41, v45
	v_cmp_ne_u32_e32 vcc, 0, v38
	v_alignbit_b32 v47, v41, v44, v45
	v_cndmask_b32_e32 v38, v39, v46, vcc
	v_alignbit_b32 v45, v44, v40, v45
	v_cndmask_b32_e32 v39, v41, v47, vcc
	v_cndmask_b32_e32 v41, v44, v45, vcc
	v_alignbit_b32 v45, v38, v39, 30
	v_bfe_i32 v46, v38, 29, 1
	v_alignbit_b32 v39, v39, v41, 30
	v_alignbit_b32 v40, v41, v40, 30
	v_xor_b32_e32 v45, v46, v45
	v_xor_b32_e32 v39, v46, v39
	v_xor_b32_e32 v40, v46, v40
	v_ffbh_u32_e32 v46, v45
	v_cmp_ne_u32_e32 vcc, 0, v45
	v_cndmask_b32_e32 v46, 32, v46, vcc
	v_lshrrev_b32_e32 v44, 29, v38
	v_sub_u32_e32 v47, vcc, 31, v46
	v_alignbit_b32 v45, v45, v39, v47
	v_alignbit_b32 v39, v39, v40, v47
	v_lshlrev_b32_e32 v44, 31, v44
	v_lshlrev_b32_e32 v40, 23, v46
	v_sub_u32_e32 v40, vcc, v44, v40
	v_lshrrev_b32_e32 v47, 9, v45
	v_or_b32_e32 v40, v40, v47
	v_add_u32_e32 v47, vcc, 0.5, v40
	v_alignbit_b32 v40, v45, v39, 9
	v_ffbh_u32_e32 v45, v40
	v_cmp_ne_u32_e32 vcc, 0, v40
	v_cndmask_b32_e32 v45, 32, v45, vcc
	v_sub_u32_e32 v48, vcc, 31, v45
	v_alignbit_b32 v39, v40, v39, v48
	v_add_u32_e32 v40, vcc, v45, v46
	v_lshlrev_b32_e32 v40, 23, v40
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v40, vcc, s2, v40
	v_or_b32_e32 v40, v40, v44
	v_lshrrev_b32_e32 v39, 9, v39
	v_or_b32_e32 v39, v40, v39
	v_and_b32_e32 v40, 0xbffff000, v47
	v_mul_f32_e32 v45, 0xbfc90fda, v47
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v45, s2, v40
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v44, v47, v40
	v_mac_f32_e32 v45, s3, v40
	v_mac_f32_e32 v45, s2, v44
	v_mul_f32_e32 v40, 0x33a22168, v47
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v45, s3, v44
	v_mac_f32_e32 v40, s2, v39
	v_add_f32_e32 v40, v45, v40
	v_bfe_u32 v41, v38, 29, 1
	v_lshrrev_b32_e32 v38, 30, v38
	v_mac_f32_e32 v40, s2, v47
	v_add_u32_e32 v41, vcc, v41, v38
BB1_6:                                  ; %Flow528
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_8
	s_cbranch_execz BB1_8
BB1_7:
	v_mul_f32_e32 v38, 0x3f22f983, v18
	v_rndne_f32_e32 v38, v38
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v39, 0xfffff000, v38
	v_mul_f32_e32 v41, s2, v38
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v41, v39, s3, -v41
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v44, -v38, s2, v18
	v_sub_f32_e32 v40, v38, v39
	v_mac_f32_e32 v41, s4, v39
	v_mac_f32_e32 v41, s3, v40
	v_sub_f32_e32 v18, v18, v44
	v_mad_f32 v18, -v38, s2, v18
	v_mac_f32_e32 v41, s4, v40
	v_sub_f32_e32 v18, v18, v41
	v_add_f32_e32 v18, v44, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v44, -v38, s2, v18
	v_sub_f32_e32 v18, v18, v44
	v_mad_f32 v18, -v38, s2, v18
	v_mul_f32_e32 v45, 0xb3a22168, v38
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v45, s2, v39
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v45, s3, v39
	v_mac_f32_e32 v45, s2, v40
	v_mac_f32_e32 v45, s3, v40
	v_cvt_i32_f32_e32 v41, v38
	v_sub_f32_e32 v18, v18, v45
	v_add_f32_e32 v40, v44, v18
	v_mac_f32_e32 v40, 0xa7c234c4, v38
BB1_8:                                  ; %_Z3sinf.exit29
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3f9921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[38:39], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr44
                                        ; implicit-def: $vgpr45
	v_cvt_f32_f64_e32 v38, v[38:39]
	v_and_b32_e32 v39, s0, v38
	v_and_b32_e32 v18, s0, v38
	v_cmp_nlt_f32_e64 s[0:1], |v38|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_10
	s_cbranch_execz BB1_10
BB1_9:
	v_and_b32_e32 v45, 0x7fffff, v38
	v_or_b32_e32 v45, 0x800000, v45
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v46, v45, s4
	v_mul_lo_u32 v47, v45, s5
	v_mul_hi_u32 v49, v45, s5
	v_mul_lo_u32 v48, v45, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v46, vcc, v47, v46
	v_mul_lo_u32 v50, v45, s4
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v47, v49
	v_mul_hi_u32 v49, v45, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v47, vcc, v47, v50
	v_mul_lo_u32 v51, v45, s4
	v_cndmask_b32_e64 v50, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v50, v49
	v_mul_hi_u32 v50, v45, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_lo_u32 v52, v45, s4
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_add_u32_e32 v50, vcc, v51, v50
	v_mul_hi_u32 v51, v45, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v50, vcc, v50, v52
	v_mul_lo_u32 v53, v45, s4
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v45, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v54, v45, s4
	v_add_u32_e32 v51, vcc, v51, v53
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_mul_hi_u32 v45, v45, s4
	v_add_u32_e32 v52, vcc, v53, v52
	v_add_u32_e32 v52, vcc, v52, v54
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v39
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v44, vcc, s4, v44
	v_add_u32_e32 v45, vcc, v53, v45
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v45, v45, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v47, vcc
	v_cndmask_b32_e32 v47, v47, v46, vcc
	v_cndmask_b32_e32 v46, v46, v48, vcc
	v_cndmask_b32_e64 v48, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v48
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v48, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v47, vcc
	v_cndmask_b32_e32 v46, v47, v46, vcc
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_cndmask_b32_e32 v45, v45, v52, vcc
	v_sub_u32_e32 v44, vcc, v44, v47
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v45, v45, v48, vcc
	v_cndmask_b32_e32 v47, v48, v51, vcc
	v_cndmask_b32_e32 v48, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v46, v49, v46, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v45, v45, v47, vcc
	v_cndmask_b32_e32 v47, v47, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e32 v46, v50, v46, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_sub_u32_e32 v49, vcc, 32, v44
	v_alignbit_b32 v50, v45, v47, v49
	v_alignbit_b32 v51, v47, v48, v49
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_cndmask_b32_e32 v45, v45, v50, vcc
	v_alignbit_b32 v49, v48, v46, v49
	v_cndmask_b32_e32 v44, v47, v51, vcc
	v_cndmask_b32_e32 v47, v48, v49, vcc
	v_alignbit_b32 v49, v45, v44, 30
	v_bfe_i32 v50, v45, 29, 1
	v_alignbit_b32 v44, v44, v47, 30
	v_alignbit_b32 v46, v47, v46, 30
	v_xor_b32_e32 v49, v50, v49
	v_xor_b32_e32 v44, v50, v44
	v_xor_b32_e32 v46, v50, v46
	v_ffbh_u32_e32 v50, v49
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v50, 32, v50, vcc
	v_lshrrev_b32_e32 v48, 29, v45
	v_sub_u32_e32 v51, vcc, 31, v50
	v_alignbit_b32 v49, v49, v44, v51
	v_alignbit_b32 v44, v44, v46, v51
	v_lshlrev_b32_e32 v48, 31, v48
	v_lshlrev_b32_e32 v46, 23, v50
	v_lshrrev_b32_e32 v51, 9, v49
	v_sub_u32_e32 v46, vcc, v48, v46
	v_or_b32_e32 v46, v46, v51
	v_alignbit_b32 v49, v49, v44, 9
	v_add_u32_e32 v46, vcc, 0.5, v46
	v_ffbh_u32_e32 v51, v49
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v51, 32, v51, vcc
	v_sub_u32_e32 v52, vcc, 31, v51
	v_alignbit_b32 v44, v49, v44, v52
	v_add_u32_e32 v49, vcc, v51, v50
	v_lshlrev_b32_e32 v49, 23, v49
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v49, vcc, s4, v49
	v_or_b32_e32 v48, v49, v48
	v_lshrrev_b32_e32 v44, 9, v44
	v_or_b32_e32 v44, v48, v44
	v_and_b32_e32 v48, 0xbffff000, v46
	v_mul_f32_e32 v50, 0xbfc90fda, v46
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v50, s4, v48
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v49, v46, v48
	v_mac_f32_e32 v50, s5, v48
	v_mac_f32_e32 v50, s4, v49
	v_mul_f32_e32 v48, 0x33a22168, v46
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v50, s5, v49
	v_mac_f32_e32 v48, s4, v44
	v_add_f32_e32 v44, v50, v48
	v_bfe_u32 v47, v45, 29, 1
	v_lshrrev_b32_e32 v45, 30, v45
	v_mac_f32_e32 v44, s4, v46
	v_add_u32_e32 v45, vcc, v47, v45
BB1_10:                                 ; %Flow527
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_12
	s_cbranch_execz BB1_12
BB1_11:
	v_mul_f32_e32 v44, 0x3f22f983, v18
	v_rndne_f32_e32 v46, v44
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v44, 0xfffff000, v46
	v_mul_f32_e32 v47, s4, v46
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v47, v44, s5, -v47
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v48, -v46, s4, v18
	v_sub_f32_e32 v45, v46, v44
	v_mac_f32_e32 v47, s6, v44
	v_mac_f32_e32 v47, s5, v45
	v_sub_f32_e32 v49, v18, v48
	v_mad_f32 v49, -v46, s4, v49
	v_mac_f32_e32 v47, s6, v45
	v_sub_f32_e32 v47, v49, v47
	v_add_f32_e32 v47, v48, v47
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v48, -v46, s4, v47
	v_sub_f32_e32 v47, v47, v48
	v_mad_f32 v47, -v46, s4, v47
	v_mul_f32_e32 v49, 0xb3a22168, v46
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v49, s4, v44
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v49, s5, v44
	v_mac_f32_e32 v49, s4, v45
	v_mac_f32_e32 v49, s5, v45
	v_cvt_i32_f32_e32 v45, v46
	v_sub_f32_e32 v44, v47, v49
	v_add_f32_e32 v44, v48, v44
	v_mac_f32_e32 v44, 0xa7c234c4, v46
BB1_12:                                 ; %_Z3cosf.exit28
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr48
                                        ; implicit-def: $vgpr49
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_14
	s_cbranch_execz BB1_14
BB1_13:
	v_and_b32_e32 v47, 0x7fffff, v38
	v_or_b32_e32 v47, 0x800000, v47
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v48, v47, s2
	v_mul_lo_u32 v49, v47, s3
	v_mul_hi_u32 v51, v47, s3
	v_mul_lo_u32 v50, v47, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_lo_u32 v52, v47, s2
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_hi_u32 v51, v47, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v49, vcc, v49, v52
	v_mul_lo_u32 v53, v47, s2
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v47, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_lo_u32 v54, v47, s2
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_hi_u32 v53, v47, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v52, vcc, v52, v54
	v_mul_lo_u32 v55, v47, s2
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v47, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v56, v47, s2
	v_add_u32_e32 v53, vcc, v53, v55
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_mul_hi_u32 v47, v47, s2
	v_add_u32_e32 v54, vcc, v55, v54
	v_add_u32_e32 v54, vcc, v54, v56
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_lshrrev_b32_e32 v46, 23, v39
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v46, vcc, s2, v46
	v_add_u32_e32 v47, vcc, v55, v47
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e64 v50, 0, 32, vcc
	v_sub_u32_e32 v46, vcc, v46, v50
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v50, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v48, v49, v48, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_sub_u32_e32 v46, vcc, v46, v49
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e32 v47, v47, v50, vcc
	v_cndmask_b32_e32 v49, v50, v53, vcc
	v_cndmask_b32_e32 v50, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v48, v51, v48, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_sub_u32_e32 v46, vcc, v46, v51
	v_cmp_lt_u32_e32 vcc, 31, v46
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v49, vcc
	v_cndmask_b32_e32 v49, v49, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e32 v48, v52, v48, vcc
	v_sub_u32_e32 v46, vcc, v46, v51
	v_sub_u32_e32 v51, vcc, 32, v46
	v_alignbit_b32 v52, v47, v49, v51
	v_cmp_ne_u32_e32 vcc, 0, v46
	v_alignbit_b32 v53, v49, v50, v51
	v_cndmask_b32_e32 v46, v47, v52, vcc
	v_alignbit_b32 v51, v50, v48, v51
	v_cndmask_b32_e32 v47, v49, v53, vcc
	v_cndmask_b32_e32 v49, v50, v51, vcc
	v_alignbit_b32 v51, v46, v47, 30
	v_bfe_i32 v52, v46, 29, 1
	v_alignbit_b32 v47, v47, v49, 30
	v_alignbit_b32 v48, v49, v48, 30
	v_xor_b32_e32 v51, v52, v51
	v_xor_b32_e32 v47, v52, v47
	v_xor_b32_e32 v48, v52, v48
	v_ffbh_u32_e32 v52, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_lshrrev_b32_e32 v50, 29, v46
	v_sub_u32_e32 v53, vcc, 31, v52
	v_alignbit_b32 v51, v51, v47, v53
	v_alignbit_b32 v47, v47, v48, v53
	v_lshlrev_b32_e32 v50, 31, v50
	v_lshlrev_b32_e32 v48, 23, v52
	v_sub_u32_e32 v48, vcc, v50, v48
	v_lshrrev_b32_e32 v53, 9, v51
	v_or_b32_e32 v48, v48, v53
	v_add_u32_e32 v53, vcc, 0.5, v48
	v_alignbit_b32 v48, v51, v47, 9
	v_ffbh_u32_e32 v51, v48
	v_cmp_ne_u32_e32 vcc, 0, v48
	v_cndmask_b32_e32 v51, 32, v51, vcc
	v_sub_u32_e32 v54, vcc, 31, v51
	v_alignbit_b32 v47, v48, v47, v54
	v_add_u32_e32 v48, vcc, v51, v52
	v_lshlrev_b32_e32 v48, 23, v48
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v48, vcc, s2, v48
	v_or_b32_e32 v48, v48, v50
	v_lshrrev_b32_e32 v47, 9, v47
	v_or_b32_e32 v47, v48, v47
	v_and_b32_e32 v48, 0xbffff000, v53
	v_mul_f32_e32 v51, 0xbfc90fda, v53
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v51, s2, v48
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v50, v53, v48
	v_mac_f32_e32 v51, s3, v48
	v_mac_f32_e32 v51, s2, v50
	v_mul_f32_e32 v48, 0x33a22168, v53
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v51, s3, v50
	v_mac_f32_e32 v48, s2, v47
	v_add_f32_e32 v48, v51, v48
	v_bfe_u32 v49, v46, 29, 1
	v_lshrrev_b32_e32 v46, 30, v46
	v_mac_f32_e32 v48, s2, v53
	v_add_u32_e32 v49, vcc, v49, v46
BB1_14:                                 ; %Flow526
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_16
	s_cbranch_execz BB1_16
BB1_15:
	v_mul_f32_e32 v46, 0x3f22f983, v18
	v_rndne_f32_e32 v46, v46
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v47, 0xfffff000, v46
	v_mul_f32_e32 v49, s2, v46
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v49, v47, s3, -v49
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v50, -v46, s2, v18
	v_sub_f32_e32 v48, v46, v47
	v_mac_f32_e32 v49, s4, v47
	v_mac_f32_e32 v49, s3, v48
	v_sub_f32_e32 v18, v18, v50
	v_mad_f32 v18, -v46, s2, v18
	v_mac_f32_e32 v49, s4, v48
	v_sub_f32_e32 v18, v18, v49
	v_add_f32_e32 v18, v50, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v50, -v46, s2, v18
	v_sub_f32_e32 v18, v18, v50
	v_mad_f32 v18, -v46, s2, v18
	v_mul_f32_e32 v51, 0xb3a22168, v46
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v51, s2, v47
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v51, s3, v47
	v_mac_f32_e32 v51, s2, v48
	v_mac_f32_e32 v51, s3, v48
	v_cvt_i32_f32_e32 v49, v46
	v_sub_f32_e32 v18, v18, v51
	v_add_f32_e32 v48, v50, v18
	v_mac_f32_e32 v48, 0xa7c234c4, v46
BB1_16:                                 ; %_Z3sinf.exit27
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fb2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[46:47], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr50
                                        ; implicit-def: $vgpr51
	v_cvt_f32_f64_e32 v46, v[46:47]
	v_and_b32_e32 v47, s0, v46
	v_and_b32_e32 v18, s0, v46
	v_cmp_nlt_f32_e64 s[0:1], |v46|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_18
	s_cbranch_execz BB1_18
BB1_17:
	v_and_b32_e32 v51, 0x7fffff, v46
	v_or_b32_e32 v51, 0x800000, v51
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v52, v51, s4
	v_mul_lo_u32 v53, v51, s5
	v_mul_hi_u32 v55, v51, s5
	v_mul_lo_u32 v54, v51, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_lo_u32 v56, v51, s4
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v53, v55
	v_mul_hi_u32 v55, v51, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v53, vcc, v53, v56
	v_mul_lo_u32 v57, v51, s4
	v_cndmask_b32_e64 v56, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v56, v55
	v_mul_hi_u32 v56, v51, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v55, vcc, v55, v57
	v_mul_lo_u32 v58, v51, s4
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_add_u32_e32 v56, vcc, v57, v56
	v_mul_hi_u32 v57, v51, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v56, vcc, v56, v58
	v_mul_lo_u32 v59, v51, s4
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v51, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v60, v51, s4
	v_add_u32_e32 v57, vcc, v57, v59
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_mul_hi_u32 v51, v51, s4
	v_add_u32_e32 v58, vcc, v59, v58
	v_add_u32_e32 v58, vcc, v58, v60
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_lshrrev_b32_e32 v50, 23, v47
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v50, vcc, s4, v50
	v_add_u32_e32 v51, vcc, v59, v51
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v51, v51, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v54, vcc
	v_cndmask_b32_e64 v54, 0, 32, vcc
	v_sub_u32_e32 v50, vcc, v50, v54
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v54, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v53, vcc
	v_cndmask_b32_e32 v52, v53, v52, vcc
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_cndmask_b32_e32 v51, v51, v58, vcc
	v_sub_u32_e32 v50, vcc, v50, v53
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e32 v51, v51, v54, vcc
	v_cndmask_b32_e32 v53, v54, v57, vcc
	v_cndmask_b32_e32 v54, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v52, v55, v52, vcc
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_sub_u32_e32 v50, vcc, v50, v55
	v_cmp_lt_u32_e32 vcc, 31, v50
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_cndmask_b32_e32 v51, v51, v53, vcc
	v_cndmask_b32_e32 v53, v53, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e32 v52, v56, v52, vcc
	v_sub_u32_e32 v50, vcc, v50, v55
	v_sub_u32_e32 v55, vcc, 32, v50
	v_alignbit_b32 v56, v51, v53, v55
	v_alignbit_b32 v57, v53, v54, v55
	v_cmp_ne_u32_e32 vcc, 0, v50
	v_cndmask_b32_e32 v51, v51, v56, vcc
	v_alignbit_b32 v55, v54, v52, v55
	v_cndmask_b32_e32 v50, v53, v57, vcc
	v_cndmask_b32_e32 v53, v54, v55, vcc
	v_alignbit_b32 v55, v51, v50, 30
	v_bfe_i32 v56, v51, 29, 1
	v_alignbit_b32 v50, v50, v53, 30
	v_alignbit_b32 v52, v53, v52, 30
	v_xor_b32_e32 v55, v56, v55
	v_xor_b32_e32 v50, v56, v50
	v_xor_b32_e32 v52, v56, v52
	v_ffbh_u32_e32 v56, v55
	v_cmp_ne_u32_e32 vcc, 0, v55
	v_cndmask_b32_e32 v56, 32, v56, vcc
	v_lshrrev_b32_e32 v54, 29, v51
	v_sub_u32_e32 v57, vcc, 31, v56
	v_alignbit_b32 v55, v55, v50, v57
	v_alignbit_b32 v50, v50, v52, v57
	v_lshlrev_b32_e32 v54, 31, v54
	v_lshlrev_b32_e32 v52, 23, v56
	v_lshrrev_b32_e32 v57, 9, v55
	v_sub_u32_e32 v52, vcc, v54, v52
	v_or_b32_e32 v52, v52, v57
	v_alignbit_b32 v55, v55, v50, 9
	v_add_u32_e32 v52, vcc, 0.5, v52
	v_ffbh_u32_e32 v57, v55
	v_cmp_ne_u32_e32 vcc, 0, v55
	v_cndmask_b32_e32 v57, 32, v57, vcc
	v_sub_u32_e32 v58, vcc, 31, v57
	v_alignbit_b32 v50, v55, v50, v58
	v_add_u32_e32 v55, vcc, v57, v56
	v_lshlrev_b32_e32 v55, 23, v55
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v55, vcc, s4, v55
	v_or_b32_e32 v54, v55, v54
	v_lshrrev_b32_e32 v50, 9, v50
	v_or_b32_e32 v50, v54, v50
	v_and_b32_e32 v54, 0xbffff000, v52
	v_mul_f32_e32 v56, 0xbfc90fda, v52
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v56, s4, v54
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v55, v52, v54
	v_mac_f32_e32 v56, s5, v54
	v_mac_f32_e32 v56, s4, v55
	v_mul_f32_e32 v54, 0x33a22168, v52
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v56, s5, v55
	v_mac_f32_e32 v54, s4, v50
	v_add_f32_e32 v50, v56, v54
	v_bfe_u32 v53, v51, 29, 1
	v_lshrrev_b32_e32 v51, 30, v51
	v_mac_f32_e32 v50, s4, v52
	v_add_u32_e32 v51, vcc, v53, v51
BB1_18:                                 ; %Flow525
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_20
	s_cbranch_execz BB1_20
BB1_19:
	v_mul_f32_e32 v50, 0x3f22f983, v18
	v_rndne_f32_e32 v52, v50
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v50, 0xfffff000, v52
	v_mul_f32_e32 v53, s4, v52
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v53, v50, s5, -v53
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v54, -v52, s4, v18
	v_sub_f32_e32 v51, v52, v50
	v_mac_f32_e32 v53, s6, v50
	v_mac_f32_e32 v53, s5, v51
	v_sub_f32_e32 v55, v18, v54
	v_mad_f32 v55, -v52, s4, v55
	v_mac_f32_e32 v53, s6, v51
	v_sub_f32_e32 v53, v55, v53
	v_add_f32_e32 v53, v54, v53
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v54, -v52, s4, v53
	v_sub_f32_e32 v53, v53, v54
	v_mad_f32 v53, -v52, s4, v53
	v_mul_f32_e32 v55, 0xb3a22168, v52
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v55, s4, v50
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v55, s5, v50
	v_mac_f32_e32 v55, s4, v51
	v_mac_f32_e32 v55, s5, v51
	v_cvt_i32_f32_e32 v51, v52
	v_sub_f32_e32 v50, v53, v55
	v_add_f32_e32 v50, v54, v50
	v_mac_f32_e32 v50, 0xa7c234c4, v52
BB1_20:                                 ; %_Z3cosf.exit26
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr54
                                        ; implicit-def: $vgpr55
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_22
	s_cbranch_execz BB1_22
BB1_21:
	v_and_b32_e32 v53, 0x7fffff, v46
	v_or_b32_e32 v53, 0x800000, v53
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v54, v53, s2
	v_mul_lo_u32 v55, v53, s3
	v_mul_hi_u32 v57, v53, s3
	v_mul_lo_u32 v56, v53, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v54, vcc, v55, v54
	v_mul_lo_u32 v58, v53, s2
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v55, v57
	v_mul_hi_u32 v57, v53, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v55, vcc, v55, v58
	v_mul_lo_u32 v59, v53, s2
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v53, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_lo_u32 v60, v53, s2
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_hi_u32 v59, v53, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v58, vcc, v58, v60
	v_mul_lo_u32 v61, v53, s2
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v53, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v62, v53, s2
	v_add_u32_e32 v59, vcc, v59, v61
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_mul_hi_u32 v53, v53, s2
	v_add_u32_e32 v60, vcc, v61, v60
	v_add_u32_e32 v60, vcc, v60, v62
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_lshrrev_b32_e32 v52, 23, v47
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v52, vcc, s2, v52
	v_add_u32_e32 v53, vcc, v61, v53
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v53, v53, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e64 v56, 0, 32, vcc
	v_sub_u32_e32 v52, vcc, v52, v56
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v56, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v55, vcc
	v_cndmask_b32_e32 v54, v55, v54, vcc
	v_cndmask_b32_e64 v55, 0, 32, vcc
	v_cndmask_b32_e32 v53, v53, v60, vcc
	v_sub_u32_e32 v52, vcc, v52, v55
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e32 v53, v53, v56, vcc
	v_cndmask_b32_e32 v55, v56, v59, vcc
	v_cndmask_b32_e32 v56, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v54, v57, v54, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_sub_u32_e32 v52, vcc, v52, v57
	v_cmp_lt_u32_e32 vcc, 31, v52
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v53, v53, v55, vcc
	v_cndmask_b32_e32 v55, v55, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e32 v54, v58, v54, vcc
	v_sub_u32_e32 v52, vcc, v52, v57
	v_sub_u32_e32 v57, vcc, 32, v52
	v_alignbit_b32 v58, v53, v55, v57
	v_cmp_ne_u32_e32 vcc, 0, v52
	v_alignbit_b32 v59, v55, v56, v57
	v_cndmask_b32_e32 v52, v53, v58, vcc
	v_alignbit_b32 v57, v56, v54, v57
	v_cndmask_b32_e32 v53, v55, v59, vcc
	v_cndmask_b32_e32 v55, v56, v57, vcc
	v_alignbit_b32 v57, v52, v53, 30
	v_bfe_i32 v58, v52, 29, 1
	v_alignbit_b32 v53, v53, v55, 30
	v_alignbit_b32 v54, v55, v54, 30
	v_xor_b32_e32 v57, v58, v57
	v_xor_b32_e32 v53, v58, v53
	v_xor_b32_e32 v54, v58, v54
	v_ffbh_u32_e32 v58, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, 32, v58, vcc
	v_lshrrev_b32_e32 v56, 29, v52
	v_sub_u32_e32 v59, vcc, 31, v58
	v_alignbit_b32 v57, v57, v53, v59
	v_alignbit_b32 v53, v53, v54, v59
	v_lshlrev_b32_e32 v56, 31, v56
	v_lshlrev_b32_e32 v54, 23, v58
	v_sub_u32_e32 v54, vcc, v56, v54
	v_lshrrev_b32_e32 v59, 9, v57
	v_or_b32_e32 v54, v54, v59
	v_add_u32_e32 v59, vcc, 0.5, v54
	v_alignbit_b32 v54, v57, v53, 9
	v_ffbh_u32_e32 v57, v54
	v_cmp_ne_u32_e32 vcc, 0, v54
	v_cndmask_b32_e32 v57, 32, v57, vcc
	v_sub_u32_e32 v60, vcc, 31, v57
	v_alignbit_b32 v53, v54, v53, v60
	v_add_u32_e32 v54, vcc, v57, v58
	v_lshlrev_b32_e32 v54, 23, v54
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v54, vcc, s2, v54
	v_or_b32_e32 v54, v54, v56
	v_lshrrev_b32_e32 v53, 9, v53
	v_or_b32_e32 v53, v54, v53
	v_and_b32_e32 v54, 0xbffff000, v59
	v_mul_f32_e32 v57, 0xbfc90fda, v59
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v57, s2, v54
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v56, v59, v54
	v_mac_f32_e32 v57, s3, v54
	v_mac_f32_e32 v57, s2, v56
	v_mul_f32_e32 v54, 0x33a22168, v59
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v57, s3, v56
	v_mac_f32_e32 v54, s2, v53
	v_add_f32_e32 v54, v57, v54
	v_bfe_u32 v55, v52, 29, 1
	v_lshrrev_b32_e32 v52, 30, v52
	v_mac_f32_e32 v54, s2, v59
	v_add_u32_e32 v55, vcc, v55, v52
BB1_22:                                 ; %Flow524
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_24
	s_cbranch_execz BB1_24
BB1_23:
	v_mul_f32_e32 v52, 0x3f22f983, v18
	v_rndne_f32_e32 v52, v52
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v53, 0xfffff000, v52
	v_mul_f32_e32 v55, s2, v52
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v55, v53, s3, -v55
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v56, -v52, s2, v18
	v_sub_f32_e32 v54, v52, v53
	v_mac_f32_e32 v55, s4, v53
	v_mac_f32_e32 v55, s3, v54
	v_sub_f32_e32 v18, v18, v56
	v_mad_f32 v18, -v52, s2, v18
	v_mac_f32_e32 v55, s4, v54
	v_sub_f32_e32 v18, v18, v55
	v_add_f32_e32 v18, v56, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v56, -v52, s2, v18
	v_sub_f32_e32 v18, v18, v56
	v_mad_f32 v18, -v52, s2, v18
	v_mul_f32_e32 v57, 0xb3a22168, v52
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v57, s2, v53
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v57, s3, v53
	v_mac_f32_e32 v57, s2, v54
	v_mac_f32_e32 v57, s3, v54
	v_cvt_i32_f32_e32 v55, v52
	v_sub_f32_e32 v18, v18, v57
	v_add_f32_e32 v54, v56, v18
	v_mac_f32_e32 v54, 0xa7c234c4, v52
BB1_24:                                 ; %_Z3sinf.exit25
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3f8921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[52:53], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr56
                                        ; implicit-def: $vgpr57
	v_cvt_f32_f64_e32 v52, v[52:53]
	v_and_b32_e32 v53, s0, v52
	v_and_b32_e32 v18, s0, v52
	v_cmp_nlt_f32_e64 s[0:1], |v52|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_26
	s_cbranch_execz BB1_26
BB1_25:
	v_and_b32_e32 v57, 0x7fffff, v52
	v_or_b32_e32 v57, 0x800000, v57
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v58, v57, s4
	v_mul_lo_u32 v59, v57, s5
	v_mul_hi_u32 v61, v57, s5
	v_mul_lo_u32 v60, v57, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_lo_u32 v62, v57, s4
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v59, v61
	v_mul_hi_u32 v61, v57, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v59, vcc, v59, v62
	v_mul_lo_u32 v63, v57, s4
	v_cndmask_b32_e64 v62, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v62, v61
	v_mul_hi_u32 v62, v57, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_lo_u32 v64, v57, s4
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_add_u32_e32 v62, vcc, v63, v62
	v_mul_hi_u32 v63, v57, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v62, vcc, v62, v64
	v_mul_lo_u32 v65, v57, s4
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v57, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v66, v57, s4
	v_add_u32_e32 v63, vcc, v63, v65
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_mul_hi_u32 v57, v57, s4
	v_add_u32_e32 v64, vcc, v65, v64
	v_add_u32_e32 v64, vcc, v64, v66
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_lshrrev_b32_e32 v56, 23, v53
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v56, vcc, s4, v56
	v_add_u32_e32 v57, vcc, v65, v57
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v57, v57, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v60, vcc
	v_cndmask_b32_e64 v60, 0, 32, vcc
	v_sub_u32_e32 v56, vcc, v56, v60
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v60, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v59, vcc
	v_cndmask_b32_e32 v58, v59, v58, vcc
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_cndmask_b32_e32 v57, v57, v64, vcc
	v_sub_u32_e32 v56, vcc, v56, v59
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e32 v57, v57, v60, vcc
	v_cndmask_b32_e32 v59, v60, v63, vcc
	v_cndmask_b32_e32 v60, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v58, v61, v58, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_sub_u32_e32 v56, vcc, v56, v61
	v_cmp_lt_u32_e32 vcc, 31, v56
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v57, v57, v59, vcc
	v_cndmask_b32_e32 v59, v59, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e32 v58, v62, v58, vcc
	v_sub_u32_e32 v56, vcc, v56, v61
	v_sub_u32_e32 v61, vcc, 32, v56
	v_alignbit_b32 v62, v57, v59, v61
	v_alignbit_b32 v63, v59, v60, v61
	v_cmp_ne_u32_e32 vcc, 0, v56
	v_cndmask_b32_e32 v57, v57, v62, vcc
	v_alignbit_b32 v61, v60, v58, v61
	v_cndmask_b32_e32 v56, v59, v63, vcc
	v_cndmask_b32_e32 v59, v60, v61, vcc
	v_alignbit_b32 v61, v57, v56, 30
	v_bfe_i32 v62, v57, 29, 1
	v_alignbit_b32 v56, v56, v59, 30
	v_alignbit_b32 v58, v59, v58, 30
	v_xor_b32_e32 v61, v62, v61
	v_xor_b32_e32 v56, v62, v56
	v_xor_b32_e32 v58, v62, v58
	v_ffbh_u32_e32 v62, v61
	v_cmp_ne_u32_e32 vcc, 0, v61
	v_cndmask_b32_e32 v62, 32, v62, vcc
	v_lshrrev_b32_e32 v60, 29, v57
	v_sub_u32_e32 v63, vcc, 31, v62
	v_alignbit_b32 v61, v61, v56, v63
	v_alignbit_b32 v56, v56, v58, v63
	v_lshlrev_b32_e32 v60, 31, v60
	v_lshlrev_b32_e32 v58, 23, v62
	v_lshrrev_b32_e32 v63, 9, v61
	v_sub_u32_e32 v58, vcc, v60, v58
	v_or_b32_e32 v58, v58, v63
	v_alignbit_b32 v61, v61, v56, 9
	v_add_u32_e32 v58, vcc, 0.5, v58
	v_ffbh_u32_e32 v63, v61
	v_cmp_ne_u32_e32 vcc, 0, v61
	v_cndmask_b32_e32 v63, 32, v63, vcc
	v_sub_u32_e32 v64, vcc, 31, v63
	v_alignbit_b32 v56, v61, v56, v64
	v_add_u32_e32 v61, vcc, v63, v62
	v_lshlrev_b32_e32 v61, 23, v61
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v61, vcc, s4, v61
	v_or_b32_e32 v60, v61, v60
	v_lshrrev_b32_e32 v56, 9, v56
	v_or_b32_e32 v56, v60, v56
	v_and_b32_e32 v60, 0xbffff000, v58
	v_mul_f32_e32 v62, 0xbfc90fda, v58
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v62, s4, v60
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v61, v58, v60
	v_mac_f32_e32 v62, s5, v60
	v_mac_f32_e32 v62, s4, v61
	v_mul_f32_e32 v60, 0x33a22168, v58
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v62, s5, v61
	v_mac_f32_e32 v60, s4, v56
	v_add_f32_e32 v56, v62, v60
	v_bfe_u32 v59, v57, 29, 1
	v_lshrrev_b32_e32 v57, 30, v57
	v_mac_f32_e32 v56, s4, v58
	v_add_u32_e32 v57, vcc, v59, v57
BB1_26:                                 ; %Flow523
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_28
	s_cbranch_execz BB1_28
BB1_27:
	v_mul_f32_e32 v56, 0x3f22f983, v18
	v_rndne_f32_e32 v58, v56
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v56, 0xfffff000, v58
	v_mul_f32_e32 v59, s4, v58
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v59, v56, s5, -v59
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v60, -v58, s4, v18
	v_sub_f32_e32 v57, v58, v56
	v_mac_f32_e32 v59, s6, v56
	v_mac_f32_e32 v59, s5, v57
	v_sub_f32_e32 v61, v18, v60
	v_mad_f32 v61, -v58, s4, v61
	v_mac_f32_e32 v59, s6, v57
	v_sub_f32_e32 v59, v61, v59
	v_add_f32_e32 v59, v60, v59
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v60, -v58, s4, v59
	v_sub_f32_e32 v59, v59, v60
	v_mad_f32 v59, -v58, s4, v59
	v_mul_f32_e32 v61, 0xb3a22168, v58
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v61, s4, v56
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v61, s5, v56
	v_mac_f32_e32 v61, s4, v57
	v_mac_f32_e32 v61, s5, v57
	v_cvt_i32_f32_e32 v57, v58
	v_sub_f32_e32 v56, v59, v61
	v_add_f32_e32 v56, v60, v56
	v_mac_f32_e32 v56, 0xa7c234c4, v58
BB1_28:                                 ; %_Z3cosf.exit24
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr60
                                        ; implicit-def: $vgpr61
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_30
	s_cbranch_execz BB1_30
BB1_29:
	v_and_b32_e32 v59, 0x7fffff, v52
	v_or_b32_e32 v59, 0x800000, v59
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v60, v59, s2
	v_mul_lo_u32 v61, v59, s3
	v_mul_hi_u32 v63, v59, s3
	v_mul_lo_u32 v62, v59, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_lo_u32 v64, v59, s2
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_hi_u32 v63, v59, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v61, vcc, v61, v64
	v_mul_lo_u32 v65, v59, s2
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v59, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_lo_u32 v66, v59, s2
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_hi_u32 v65, v59, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v64, vcc, v64, v66
	v_mul_lo_u32 v67, v59, s2
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v59, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v68, v59, s2
	v_add_u32_e32 v65, vcc, v65, v67
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_mul_hi_u32 v59, v59, s2
	v_add_u32_e32 v66, vcc, v67, v66
	v_add_u32_e32 v66, vcc, v66, v68
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_lshrrev_b32_e32 v58, 23, v53
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v58, vcc, s2, v58
	v_add_u32_e32 v59, vcc, v67, v59
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v59, v59, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e64 v62, 0, 32, vcc
	v_sub_u32_e32 v58, vcc, v58, v62
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v62, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v60, v61, v60, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v59, v59, v66, vcc
	v_sub_u32_e32 v58, vcc, v58, v61
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e32 v59, v59, v62, vcc
	v_cndmask_b32_e32 v61, v62, v65, vcc
	v_cndmask_b32_e32 v62, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v60, v63, v60, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_sub_u32_e32 v58, vcc, v58, v63
	v_cmp_lt_u32_e32 vcc, 31, v58
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v59, v59, v61, vcc
	v_cndmask_b32_e32 v61, v61, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e32 v60, v64, v60, vcc
	v_sub_u32_e32 v58, vcc, v58, v63
	v_sub_u32_e32 v63, vcc, 32, v58
	v_alignbit_b32 v64, v59, v61, v63
	v_cmp_ne_u32_e32 vcc, 0, v58
	v_alignbit_b32 v65, v61, v62, v63
	v_cndmask_b32_e32 v58, v59, v64, vcc
	v_alignbit_b32 v63, v62, v60, v63
	v_cndmask_b32_e32 v59, v61, v65, vcc
	v_cndmask_b32_e32 v61, v62, v63, vcc
	v_alignbit_b32 v63, v58, v59, 30
	v_bfe_i32 v64, v58, 29, 1
	v_alignbit_b32 v59, v59, v61, 30
	v_alignbit_b32 v60, v61, v60, 30
	v_xor_b32_e32 v63, v64, v63
	v_xor_b32_e32 v59, v64, v59
	v_xor_b32_e32 v60, v64, v60
	v_ffbh_u32_e32 v64, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, 32, v64, vcc
	v_lshrrev_b32_e32 v62, 29, v58
	v_sub_u32_e32 v65, vcc, 31, v64
	v_alignbit_b32 v63, v63, v59, v65
	v_alignbit_b32 v59, v59, v60, v65
	v_lshlrev_b32_e32 v62, 31, v62
	v_lshlrev_b32_e32 v60, 23, v64
	v_sub_u32_e32 v60, vcc, v62, v60
	v_lshrrev_b32_e32 v65, 9, v63
	v_or_b32_e32 v60, v60, v65
	v_add_u32_e32 v65, vcc, 0.5, v60
	v_alignbit_b32 v60, v63, v59, 9
	v_ffbh_u32_e32 v63, v60
	v_cmp_ne_u32_e32 vcc, 0, v60
	v_cndmask_b32_e32 v63, 32, v63, vcc
	v_sub_u32_e32 v66, vcc, 31, v63
	v_alignbit_b32 v59, v60, v59, v66
	v_add_u32_e32 v60, vcc, v63, v64
	v_lshlrev_b32_e32 v60, 23, v60
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v60, vcc, s2, v60
	v_or_b32_e32 v60, v60, v62
	v_lshrrev_b32_e32 v59, 9, v59
	v_or_b32_e32 v59, v60, v59
	v_and_b32_e32 v60, 0xbffff000, v65
	v_mul_f32_e32 v63, 0xbfc90fda, v65
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v63, s2, v60
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v62, v65, v60
	v_mac_f32_e32 v63, s3, v60
	v_mac_f32_e32 v63, s2, v62
	v_mul_f32_e32 v60, 0x33a22168, v65
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v63, s3, v62
	v_mac_f32_e32 v60, s2, v59
	v_add_f32_e32 v60, v63, v60
	v_bfe_u32 v61, v58, 29, 1
	v_lshrrev_b32_e32 v58, 30, v58
	v_mac_f32_e32 v60, s2, v65
	v_add_u32_e32 v61, vcc, v61, v58
BB1_30:                                 ; %Flow522
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_32
	s_cbranch_execz BB1_32
BB1_31:
	v_mul_f32_e32 v58, 0x3f22f983, v18
	v_rndne_f32_e32 v58, v58
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v59, 0xfffff000, v58
	v_mul_f32_e32 v61, s2, v58
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v61, v59, s3, -v61
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v62, -v58, s2, v18
	v_sub_f32_e32 v60, v58, v59
	v_mac_f32_e32 v61, s4, v59
	v_mac_f32_e32 v61, s3, v60
	v_sub_f32_e32 v18, v18, v62
	v_mad_f32 v18, -v58, s2, v18
	v_mac_f32_e32 v61, s4, v60
	v_sub_f32_e32 v18, v18, v61
	v_add_f32_e32 v18, v62, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v62, -v58, s2, v18
	v_sub_f32_e32 v18, v18, v62
	v_mad_f32 v18, -v58, s2, v18
	v_mul_f32_e32 v63, 0xb3a22168, v58
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v63, s2, v59
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v63, s3, v59
	v_mac_f32_e32 v63, s2, v60
	v_mac_f32_e32 v63, s3, v60
	v_cvt_i32_f32_e32 v61, v58
	v_sub_f32_e32 v18, v18, v63
	v_add_f32_e32 v60, v62, v18
	v_mac_f32_e32 v60, 0xa7c234c4, v58
BB1_32:                                 ; %_Z3sinf.exit23
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3faf6a7a
	s_mov_b32 s0, 0x2955385e
	v_mul_f64 v[58:59], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr62
                                        ; implicit-def: $vgpr63
	v_cvt_f32_f64_e32 v58, v[58:59]
	v_and_b32_e32 v59, s0, v58
	v_and_b32_e32 v18, s0, v58
	v_cmp_nlt_f32_e64 s[0:1], |v58|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_34
	s_cbranch_execz BB1_34
BB1_33:
	v_and_b32_e32 v63, 0x7fffff, v58
	v_or_b32_e32 v63, 0x800000, v63
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v64, v63, s4
	v_mul_lo_u32 v65, v63, s5
	v_mul_hi_u32 v67, v63, s5
	v_mul_lo_u32 v66, v63, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_lo_u32 v68, v63, s4
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v65, v67
	v_mul_hi_u32 v67, v63, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v65, vcc, v65, v68
	v_mul_lo_u32 v69, v63, s4
	v_cndmask_b32_e64 v68, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v68, v67
	v_mul_hi_u32 v68, v63, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v67, vcc, v67, v69
	v_mul_lo_u32 v70, v63, s4
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_add_u32_e32 v68, vcc, v69, v68
	v_mul_hi_u32 v69, v63, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v68, vcc, v68, v70
	v_mul_lo_u32 v71, v63, s4
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v63, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v72, v63, s4
	v_add_u32_e32 v69, vcc, v69, v71
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_mul_hi_u32 v63, v63, s4
	v_add_u32_e32 v70, vcc, v71, v70
	v_add_u32_e32 v70, vcc, v70, v72
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_lshrrev_b32_e32 v62, 23, v59
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v62, vcc, s4, v62
	v_add_u32_e32 v63, vcc, v71, v63
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v63, v63, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e64 v66, 0, 32, vcc
	v_sub_u32_e32 v62, vcc, v62, v66
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v66, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v65, vcc
	v_cndmask_b32_e32 v64, v65, v64, vcc
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_cndmask_b32_e32 v63, v63, v70, vcc
	v_sub_u32_e32 v62, vcc, v62, v65
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e32 v63, v63, v66, vcc
	v_cndmask_b32_e32 v65, v66, v69, vcc
	v_cndmask_b32_e32 v66, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v64, v67, v64, vcc
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_sub_u32_e32 v62, vcc, v62, v67
	v_cmp_lt_u32_e32 vcc, 31, v62
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_cndmask_b32_e32 v63, v63, v65, vcc
	v_cndmask_b32_e32 v65, v65, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e32 v64, v68, v64, vcc
	v_sub_u32_e32 v62, vcc, v62, v67
	v_sub_u32_e32 v67, vcc, 32, v62
	v_alignbit_b32 v68, v63, v65, v67
	v_alignbit_b32 v69, v65, v66, v67
	v_cmp_ne_u32_e32 vcc, 0, v62
	v_cndmask_b32_e32 v63, v63, v68, vcc
	v_alignbit_b32 v67, v66, v64, v67
	v_cndmask_b32_e32 v62, v65, v69, vcc
	v_cndmask_b32_e32 v65, v66, v67, vcc
	v_alignbit_b32 v67, v63, v62, 30
	v_bfe_i32 v68, v63, 29, 1
	v_alignbit_b32 v62, v62, v65, 30
	v_alignbit_b32 v64, v65, v64, 30
	v_xor_b32_e32 v67, v68, v67
	v_xor_b32_e32 v62, v68, v62
	v_xor_b32_e32 v64, v68, v64
	v_ffbh_u32_e32 v68, v67
	v_cmp_ne_u32_e32 vcc, 0, v67
	v_cndmask_b32_e32 v68, 32, v68, vcc
	v_lshrrev_b32_e32 v66, 29, v63
	v_sub_u32_e32 v69, vcc, 31, v68
	v_alignbit_b32 v67, v67, v62, v69
	v_alignbit_b32 v62, v62, v64, v69
	v_lshlrev_b32_e32 v66, 31, v66
	v_lshlrev_b32_e32 v64, 23, v68
	v_lshrrev_b32_e32 v69, 9, v67
	v_sub_u32_e32 v64, vcc, v66, v64
	v_or_b32_e32 v64, v64, v69
	v_alignbit_b32 v67, v67, v62, 9
	v_add_u32_e32 v64, vcc, 0.5, v64
	v_ffbh_u32_e32 v69, v67
	v_cmp_ne_u32_e32 vcc, 0, v67
	v_cndmask_b32_e32 v69, 32, v69, vcc
	v_sub_u32_e32 v70, vcc, 31, v69
	v_alignbit_b32 v62, v67, v62, v70
	v_add_u32_e32 v67, vcc, v69, v68
	v_lshlrev_b32_e32 v67, 23, v67
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v67, vcc, s4, v67
	v_or_b32_e32 v66, v67, v66
	v_lshrrev_b32_e32 v62, 9, v62
	v_or_b32_e32 v62, v66, v62
	v_and_b32_e32 v66, 0xbffff000, v64
	v_mul_f32_e32 v68, 0xbfc90fda, v64
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v68, s4, v66
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v67, v64, v66
	v_mac_f32_e32 v68, s5, v66
	v_mac_f32_e32 v68, s4, v67
	v_mul_f32_e32 v66, 0x33a22168, v64
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v68, s5, v67
	v_mac_f32_e32 v66, s4, v62
	v_add_f32_e32 v62, v68, v66
	v_bfe_u32 v65, v63, 29, 1
	v_lshrrev_b32_e32 v63, 30, v63
	v_mac_f32_e32 v62, s4, v64
	v_add_u32_e32 v63, vcc, v65, v63
BB1_34:                                 ; %Flow521
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_36
	s_cbranch_execz BB1_36
BB1_35:
	v_mul_f32_e32 v62, 0x3f22f983, v18
	v_rndne_f32_e32 v64, v62
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v62, 0xfffff000, v64
	v_mul_f32_e32 v65, s4, v64
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v65, v62, s5, -v65
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v66, -v64, s4, v18
	v_sub_f32_e32 v63, v64, v62
	v_mac_f32_e32 v65, s6, v62
	v_mac_f32_e32 v65, s5, v63
	v_sub_f32_e32 v67, v18, v66
	v_mad_f32 v67, -v64, s4, v67
	v_mac_f32_e32 v65, s6, v63
	v_sub_f32_e32 v65, v67, v65
	v_add_f32_e32 v65, v66, v65
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v66, -v64, s4, v65
	v_sub_f32_e32 v65, v65, v66
	v_mad_f32 v65, -v64, s4, v65
	v_mul_f32_e32 v67, 0xb3a22168, v64
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v67, s4, v62
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v67, s5, v62
	v_mac_f32_e32 v67, s4, v63
	v_mac_f32_e32 v67, s5, v63
	v_cvt_i32_f32_e32 v63, v64
	v_sub_f32_e32 v62, v65, v67
	v_add_f32_e32 v62, v66, v62
	v_mac_f32_e32 v62, 0xa7c234c4, v64
BB1_36:                                 ; %_Z3cosf.exit22
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr66
                                        ; implicit-def: $vgpr67
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_38
	s_cbranch_execz BB1_38
BB1_37:
	v_and_b32_e32 v65, 0x7fffff, v58
	v_or_b32_e32 v65, 0x800000, v65
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v66, v65, s2
	v_mul_lo_u32 v67, v65, s3
	v_mul_hi_u32 v69, v65, s3
	v_mul_lo_u32 v68, v65, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v66, vcc, v67, v66
	v_mul_lo_u32 v70, v65, s2
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v67, v69
	v_mul_hi_u32 v69, v65, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v67, vcc, v67, v70
	v_mul_lo_u32 v71, v65, s2
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v65, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_lo_u32 v72, v65, s2
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_hi_u32 v71, v65, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v70, vcc, v70, v72
	v_mul_lo_u32 v73, v65, s2
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v65, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v74, v65, s2
	v_add_u32_e32 v71, vcc, v71, v73
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_mul_hi_u32 v65, v65, s2
	v_add_u32_e32 v72, vcc, v73, v72
	v_add_u32_e32 v72, vcc, v72, v74
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_lshrrev_b32_e32 v64, 23, v59
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v64, vcc, s2, v64
	v_add_u32_e32 v65, vcc, v73, v65
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v65, v65, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e64 v68, 0, 32, vcc
	v_sub_u32_e32 v64, vcc, v64, v68
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v68, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v67, vcc
	v_cndmask_b32_e32 v66, v67, v66, vcc
	v_cndmask_b32_e64 v67, 0, 32, vcc
	v_cndmask_b32_e32 v65, v65, v72, vcc
	v_sub_u32_e32 v64, vcc, v64, v67
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e32 v65, v65, v68, vcc
	v_cndmask_b32_e32 v67, v68, v71, vcc
	v_cndmask_b32_e32 v68, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v66, v69, v66, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_sub_u32_e32 v64, vcc, v64, v69
	v_cmp_lt_u32_e32 vcc, 31, v64
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v65, v65, v67, vcc
	v_cndmask_b32_e32 v67, v67, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e32 v66, v70, v66, vcc
	v_sub_u32_e32 v64, vcc, v64, v69
	v_sub_u32_e32 v69, vcc, 32, v64
	v_alignbit_b32 v70, v65, v67, v69
	v_cmp_ne_u32_e32 vcc, 0, v64
	v_alignbit_b32 v71, v67, v68, v69
	v_cndmask_b32_e32 v64, v65, v70, vcc
	v_alignbit_b32 v69, v68, v66, v69
	v_cndmask_b32_e32 v65, v67, v71, vcc
	v_cndmask_b32_e32 v67, v68, v69, vcc
	v_alignbit_b32 v69, v64, v65, 30
	v_bfe_i32 v70, v64, 29, 1
	v_alignbit_b32 v65, v65, v67, 30
	v_alignbit_b32 v66, v67, v66, 30
	v_xor_b32_e32 v69, v70, v69
	v_xor_b32_e32 v65, v70, v65
	v_xor_b32_e32 v66, v70, v66
	v_ffbh_u32_e32 v70, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, 32, v70, vcc
	v_lshrrev_b32_e32 v68, 29, v64
	v_sub_u32_e32 v71, vcc, 31, v70
	v_alignbit_b32 v69, v69, v65, v71
	v_alignbit_b32 v65, v65, v66, v71
	v_lshlrev_b32_e32 v68, 31, v68
	v_lshlrev_b32_e32 v66, 23, v70
	v_sub_u32_e32 v66, vcc, v68, v66
	v_lshrrev_b32_e32 v71, 9, v69
	v_or_b32_e32 v66, v66, v71
	v_add_u32_e32 v71, vcc, 0.5, v66
	v_alignbit_b32 v66, v69, v65, 9
	v_ffbh_u32_e32 v69, v66
	v_cmp_ne_u32_e32 vcc, 0, v66
	v_cndmask_b32_e32 v69, 32, v69, vcc
	v_sub_u32_e32 v72, vcc, 31, v69
	v_alignbit_b32 v65, v66, v65, v72
	v_add_u32_e32 v66, vcc, v69, v70
	v_lshlrev_b32_e32 v66, 23, v66
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v66, vcc, s2, v66
	v_or_b32_e32 v66, v66, v68
	v_lshrrev_b32_e32 v65, 9, v65
	v_or_b32_e32 v65, v66, v65
	v_and_b32_e32 v66, 0xbffff000, v71
	v_mul_f32_e32 v69, 0xbfc90fda, v71
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v69, s2, v66
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v68, v71, v66
	v_mac_f32_e32 v69, s3, v66
	v_mac_f32_e32 v69, s2, v68
	v_mul_f32_e32 v66, 0x33a22168, v71
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v69, s3, v68
	v_mac_f32_e32 v66, s2, v65
	v_add_f32_e32 v66, v69, v66
	v_bfe_u32 v67, v64, 29, 1
	v_lshrrev_b32_e32 v64, 30, v64
	v_mac_f32_e32 v66, s2, v71
	v_add_u32_e32 v67, vcc, v67, v64
BB1_38:                                 ; %Flow520
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_40
	s_cbranch_execz BB1_40
BB1_39:
	v_mul_f32_e32 v64, 0x3f22f983, v18
	v_rndne_f32_e32 v64, v64
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v65, 0xfffff000, v64
	v_mul_f32_e32 v67, s2, v64
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v67, v65, s3, -v67
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v68, -v64, s2, v18
	v_sub_f32_e32 v66, v64, v65
	v_mac_f32_e32 v67, s4, v65
	v_mac_f32_e32 v67, s3, v66
	v_sub_f32_e32 v18, v18, v68
	v_mad_f32 v18, -v64, s2, v18
	v_mac_f32_e32 v67, s4, v66
	v_sub_f32_e32 v18, v18, v67
	v_add_f32_e32 v18, v68, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v68, -v64, s2, v18
	v_sub_f32_e32 v18, v18, v68
	v_mad_f32 v18, -v64, s2, v18
	v_mul_f32_e32 v69, 0xb3a22168, v64
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v69, s2, v65
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v69, s3, v65
	v_mac_f32_e32 v69, s2, v66
	v_mac_f32_e32 v69, s3, v66
	v_cvt_i32_f32_e32 v67, v64
	v_sub_f32_e32 v18, v18, v69
	v_add_f32_e32 v66, v68, v18
	v_mac_f32_e32 v66, 0xa7c234c4, v64
BB1_40:                                 ; %_Z3sinf.exit21
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fa2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[64:65], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr68
                                        ; implicit-def: $vgpr69
	v_cvt_f32_f64_e32 v64, v[64:65]
	v_and_b32_e32 v65, s0, v64
	v_and_b32_e32 v18, s0, v64
	v_cmp_nlt_f32_e64 s[0:1], |v64|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_42
	s_cbranch_execz BB1_42
BB1_41:
	v_and_b32_e32 v69, 0x7fffff, v64
	v_or_b32_e32 v69, 0x800000, v69
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v70, v69, s4
	v_mul_lo_u32 v71, v69, s5
	v_mul_hi_u32 v73, v69, s5
	v_mul_lo_u32 v72, v69, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_lo_u32 v74, v69, s4
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v71, v73
	v_mul_hi_u32 v73, v69, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v71, vcc, v71, v74
	v_mul_lo_u32 v75, v69, s4
	v_cndmask_b32_e64 v74, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v74, v73
	v_mul_hi_u32 v74, v69, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v73, vcc, v73, v75
	v_mul_lo_u32 v76, v69, s4
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_hi_u32 v75, v69, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v74, vcc, v74, v76
	v_mul_lo_u32 v77, v69, s4
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v69, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v78, v69, s4
	v_add_u32_e32 v75, vcc, v75, v77
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_mul_hi_u32 v69, v69, s4
	v_add_u32_e32 v76, vcc, v77, v76
	v_add_u32_e32 v76, vcc, v76, v78
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_lshrrev_b32_e32 v68, 23, v65
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v68, vcc, s4, v68
	v_add_u32_e32 v69, vcc, v77, v69
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v69, v69, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e64 v72, 0, 32, vcc
	v_sub_u32_e32 v68, vcc, v68, v72
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v72, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v71, vcc
	v_cndmask_b32_e32 v70, v71, v70, vcc
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_cndmask_b32_e32 v69, v69, v76, vcc
	v_sub_u32_e32 v68, vcc, v68, v71
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e32 v69, v69, v72, vcc
	v_cndmask_b32_e32 v71, v72, v75, vcc
	v_cndmask_b32_e32 v72, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v70, v73, v70, vcc
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_sub_u32_e32 v68, vcc, v68, v73
	v_cmp_lt_u32_e32 vcc, 31, v68
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_cndmask_b32_e32 v69, v69, v71, vcc
	v_cndmask_b32_e32 v71, v71, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e32 v70, v74, v70, vcc
	v_sub_u32_e32 v68, vcc, v68, v73
	v_sub_u32_e32 v73, vcc, 32, v68
	v_alignbit_b32 v74, v69, v71, v73
	v_alignbit_b32 v75, v71, v72, v73
	v_cmp_ne_u32_e32 vcc, 0, v68
	v_cndmask_b32_e32 v69, v69, v74, vcc
	v_alignbit_b32 v73, v72, v70, v73
	v_cndmask_b32_e32 v68, v71, v75, vcc
	v_cndmask_b32_e32 v71, v72, v73, vcc
	v_alignbit_b32 v73, v69, v68, 30
	v_bfe_i32 v74, v69, 29, 1
	v_alignbit_b32 v68, v68, v71, 30
	v_alignbit_b32 v70, v71, v70, 30
	v_xor_b32_e32 v73, v74, v73
	v_xor_b32_e32 v68, v74, v68
	v_xor_b32_e32 v70, v74, v70
	v_ffbh_u32_e32 v74, v73
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v74, 32, v74, vcc
	v_lshrrev_b32_e32 v72, 29, v69
	v_sub_u32_e32 v75, vcc, 31, v74
	v_alignbit_b32 v73, v73, v68, v75
	v_alignbit_b32 v68, v68, v70, v75
	v_lshlrev_b32_e32 v72, 31, v72
	v_lshlrev_b32_e32 v70, 23, v74
	v_lshrrev_b32_e32 v75, 9, v73
	v_sub_u32_e32 v70, vcc, v72, v70
	v_or_b32_e32 v70, v70, v75
	v_alignbit_b32 v73, v73, v68, 9
	v_add_u32_e32 v70, vcc, 0.5, v70
	v_ffbh_u32_e32 v75, v73
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v75, 32, v75, vcc
	v_sub_u32_e32 v76, vcc, 31, v75
	v_alignbit_b32 v68, v73, v68, v76
	v_add_u32_e32 v73, vcc, v75, v74
	v_lshlrev_b32_e32 v73, 23, v73
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v73, vcc, s4, v73
	v_or_b32_e32 v72, v73, v72
	v_lshrrev_b32_e32 v68, 9, v68
	v_or_b32_e32 v68, v72, v68
	v_and_b32_e32 v72, 0xbffff000, v70
	v_mul_f32_e32 v74, 0xbfc90fda, v70
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v74, s4, v72
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v73, v70, v72
	v_mac_f32_e32 v74, s5, v72
	v_mac_f32_e32 v74, s4, v73
	v_mul_f32_e32 v72, 0x33a22168, v70
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v74, s5, v73
	v_mac_f32_e32 v72, s4, v68
	v_add_f32_e32 v68, v74, v72
	v_bfe_u32 v71, v69, 29, 1
	v_lshrrev_b32_e32 v69, 30, v69
	v_mac_f32_e32 v68, s4, v70
	v_add_u32_e32 v69, vcc, v71, v69
BB1_42:                                 ; %Flow519
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_44
	s_cbranch_execz BB1_44
BB1_43:
	v_mul_f32_e32 v68, 0x3f22f983, v18
	v_rndne_f32_e32 v70, v68
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v68, 0xfffff000, v70
	v_mul_f32_e32 v71, s4, v70
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v71, v68, s5, -v71
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v72, -v70, s4, v18
	v_sub_f32_e32 v69, v70, v68
	v_mac_f32_e32 v71, s6, v68
	v_mac_f32_e32 v71, s5, v69
	v_sub_f32_e32 v73, v18, v72
	v_mad_f32 v73, -v70, s4, v73
	v_mac_f32_e32 v71, s6, v69
	v_sub_f32_e32 v71, v73, v71
	v_add_f32_e32 v71, v72, v71
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v72, -v70, s4, v71
	v_sub_f32_e32 v71, v71, v72
	v_mad_f32 v71, -v70, s4, v71
	v_mul_f32_e32 v73, 0xb3a22168, v70
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v73, s4, v68
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v73, s5, v68
	v_mac_f32_e32 v73, s4, v69
	v_mac_f32_e32 v73, s5, v69
	v_cvt_i32_f32_e32 v69, v70
	v_sub_f32_e32 v68, v71, v73
	v_add_f32_e32 v68, v72, v68
	v_mac_f32_e32 v68, 0xa7c234c4, v70
BB1_44:                                 ; %_Z3cosf.exit20
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr70
                                        ; implicit-def: $vgpr71
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_46
	s_cbranch_execz BB1_46
BB1_45:
	v_and_b32_e32 v71, 0x7fffff, v64
	v_or_b32_e32 v71, 0x800000, v71
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v72, v71, s2
	v_mul_lo_u32 v73, v71, s3
	v_mul_hi_u32 v75, v71, s3
	v_mul_lo_u32 v74, v71, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v72, vcc, v73, v72
	v_mul_lo_u32 v76, v71, s2
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v73, v75
	v_mul_hi_u32 v75, v71, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v73, vcc, v73, v76
	v_mul_lo_u32 v77, v71, s2
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v71, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_lo_u32 v78, v71, s2
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_hi_u32 v77, v71, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v76, vcc, v76, v78
	v_mul_lo_u32 v79, v71, s2
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v71, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v80, v71, s2
	v_add_u32_e32 v77, vcc, v77, v79
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_mul_hi_u32 v71, v71, s2
	v_add_u32_e32 v78, vcc, v79, v78
	v_add_u32_e32 v78, vcc, v78, v80
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_lshrrev_b32_e32 v70, 23, v65
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v70, vcc, s2, v70
	v_add_u32_e32 v71, vcc, v79, v71
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v71, v71, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e64 v74, 0, 32, vcc
	v_sub_u32_e32 v70, vcc, v70, v74
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v74, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v73, vcc
	v_cndmask_b32_e32 v72, v73, v72, vcc
	v_cndmask_b32_e64 v73, 0, 32, vcc
	v_cndmask_b32_e32 v71, v71, v78, vcc
	v_sub_u32_e32 v70, vcc, v70, v73
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e32 v71, v71, v74, vcc
	v_cndmask_b32_e32 v73, v74, v77, vcc
	v_cndmask_b32_e32 v74, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v72, v75, v72, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_sub_u32_e32 v70, vcc, v70, v75
	v_cmp_lt_u32_e32 vcc, 31, v70
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v71, v71, v73, vcc
	v_cndmask_b32_e32 v73, v73, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v72, v76, v72, vcc
	v_sub_u32_e32 v70, vcc, v70, v75
	v_sub_u32_e32 v75, vcc, 32, v70
	v_alignbit_b32 v76, v71, v73, v75
	v_alignbit_b32 v77, v73, v74, v75
	v_cmp_ne_u32_e32 vcc, 0, v70
	v_cndmask_b32_e32 v71, v71, v76, vcc
	v_alignbit_b32 v75, v74, v72, v75
	v_cndmask_b32_e32 v70, v73, v77, vcc
	v_cndmask_b32_e32 v73, v74, v75, vcc
	v_alignbit_b32 v75, v71, v70, 30
	v_bfe_i32 v76, v71, 29, 1
	v_alignbit_b32 v70, v70, v73, 30
	v_alignbit_b32 v72, v73, v72, 30
	v_xor_b32_e32 v75, v76, v75
	v_xor_b32_e32 v70, v76, v70
	v_xor_b32_e32 v72, v76, v72
	v_ffbh_u32_e32 v76, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, 32, v76, vcc
	v_lshrrev_b32_e32 v74, 29, v71
	v_sub_u32_e32 v77, vcc, 31, v76
	v_alignbit_b32 v75, v75, v70, v77
	v_alignbit_b32 v70, v70, v72, v77
	v_lshlrev_b32_e32 v74, 31, v74
	v_lshlrev_b32_e32 v72, 23, v76
	v_lshrrev_b32_e32 v77, 9, v75
	v_sub_u32_e32 v72, vcc, v74, v72
	v_or_b32_e32 v72, v72, v77
	v_alignbit_b32 v75, v75, v70, 9
	v_add_u32_e32 v72, vcc, 0.5, v72
	v_ffbh_u32_e32 v77, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v77, 32, v77, vcc
	v_sub_u32_e32 v78, vcc, 31, v77
	v_alignbit_b32 v70, v75, v70, v78
	v_add_u32_e32 v75, vcc, v77, v76
	v_lshlrev_b32_e32 v75, 23, v75
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v75, vcc, s2, v75
	v_or_b32_e32 v74, v75, v74
	v_lshrrev_b32_e32 v70, 9, v70
	v_or_b32_e32 v70, v74, v70
	v_and_b32_e32 v74, 0xbffff000, v72
	v_mul_f32_e32 v76, 0xbfc90fda, v72
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v76, s2, v74
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v75, v72, v74
	v_mac_f32_e32 v76, s3, v74
	v_mac_f32_e32 v76, s2, v75
	v_mul_f32_e32 v74, 0x33a22168, v72
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v76, s3, v75
	v_mac_f32_e32 v74, s2, v70
	v_add_f32_e32 v70, v76, v74
	v_bfe_u32 v73, v71, 29, 1
	v_lshrrev_b32_e32 v71, 30, v71
	v_mac_f32_e32 v70, s2, v72
	v_add_u32_e32 v71, vcc, v73, v71
BB1_46:                                 ; %Flow518
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_48
	s_cbranch_execz BB1_48
BB1_47:
	v_mul_f32_e32 v70, 0x3f22f983, v18
	v_rndne_f32_e32 v72, v70
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v70, 0xfffff000, v72
	v_mul_f32_e32 v73, s2, v72
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v73, v70, s3, -v73
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v74, -v72, s2, v18
	v_sub_f32_e32 v71, v72, v70
	v_mac_f32_e32 v73, s4, v70
	v_mac_f32_e32 v73, s3, v71
	v_sub_f32_e32 v18, v18, v74
	v_mad_f32 v18, -v72, s2, v18
	v_mac_f32_e32 v73, s4, v71
	v_sub_f32_e32 v18, v18, v73
	v_add_f32_e32 v18, v74, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v73, -v72, s2, v18
	v_sub_f32_e32 v18, v18, v73
	v_mad_f32 v18, -v72, s2, v18
	v_mul_f32_e32 v74, 0xb3a22168, v72
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v74, s2, v70
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v74, s3, v70
	v_mac_f32_e32 v74, s2, v71
	v_mac_f32_e32 v74, s3, v71
	v_cvt_i32_f32_e32 v71, v72
	v_sub_f32_e32 v18, v18, v74
	v_add_f32_e32 v70, v73, v18
	v_mac_f32_e32 v70, 0xa7c234c4, v72
BB1_48:                                 ; %_Z3sinf.exit19
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fb5fdbb
	s_mov_b32 s0, 0xe9bba775
	v_mul_f64 v[42:43], v[42:43], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr72
                                        ; implicit-def: $vgpr73
	v_cvt_f32_f64_e32 v42, v[42:43]
	v_and_b32_e32 v43, s0, v42
	v_and_b32_e32 v18, s0, v42
	v_cmp_nlt_f32_e64 s[0:1], |v42|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_50
	s_cbranch_execz BB1_50
BB1_49:
	v_and_b32_e32 v73, 0x7fffff, v42
	v_or_b32_e32 v73, 0x800000, v73
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v74, v73, s4
	v_mul_lo_u32 v75, v73, s5
	v_mul_hi_u32 v77, v73, s5
	v_mul_lo_u32 v76, v73, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_lo_u32 v78, v73, s4
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_hi_u32 v77, v73, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v75, vcc, v75, v78
	v_mul_lo_u32 v79, v73, s4
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v73, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_lo_u32 v80, v73, s4
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_hi_u32 v79, v73, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v78, vcc, v78, v80
	v_mul_lo_u32 v81, v73, s4
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v73, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v82, v73, s4
	v_add_u32_e32 v79, vcc, v79, v81
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_mul_hi_u32 v73, v73, s4
	v_add_u32_e32 v80, vcc, v81, v80
	v_add_u32_e32 v80, vcc, v80, v82
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_lshrrev_b32_e32 v72, 23, v43
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v72, vcc, s4, v72
	v_add_u32_e32 v73, vcc, v81, v73
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v73, v73, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_sub_u32_e32 v72, vcc, v72, v76
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v76, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v74, v75, v74, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v73, v73, v80, vcc
	v_sub_u32_e32 v72, vcc, v72, v75
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e32 v73, v73, v76, vcc
	v_cndmask_b32_e32 v75, v76, v79, vcc
	v_cndmask_b32_e32 v76, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v74, v77, v74, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_sub_u32_e32 v72, vcc, v72, v77
	v_cmp_lt_u32_e32 vcc, 31, v72
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v73, v73, v75, vcc
	v_cndmask_b32_e32 v75, v75, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v74, v78, v74, vcc
	v_sub_u32_e32 v72, vcc, v72, v77
	v_sub_u32_e32 v77, vcc, 32, v72
	v_alignbit_b32 v78, v73, v75, v77
	v_alignbit_b32 v79, v75, v76, v77
	v_cmp_ne_u32_e32 vcc, 0, v72
	v_cndmask_b32_e32 v73, v73, v78, vcc
	v_alignbit_b32 v77, v76, v74, v77
	v_cndmask_b32_e32 v72, v75, v79, vcc
	v_cndmask_b32_e32 v75, v76, v77, vcc
	v_alignbit_b32 v77, v73, v72, 30
	v_bfe_i32 v78, v73, 29, 1
	v_alignbit_b32 v72, v72, v75, 30
	v_alignbit_b32 v74, v75, v74, 30
	v_xor_b32_e32 v77, v78, v77
	v_xor_b32_e32 v72, v78, v72
	v_xor_b32_e32 v74, v78, v74
	v_ffbh_u32_e32 v78, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v78, 32, v78, vcc
	v_lshrrev_b32_e32 v76, 29, v73
	v_sub_u32_e32 v79, vcc, 31, v78
	v_alignbit_b32 v77, v77, v72, v79
	v_alignbit_b32 v72, v72, v74, v79
	v_lshlrev_b32_e32 v76, 31, v76
	v_lshlrev_b32_e32 v74, 23, v78
	v_lshrrev_b32_e32 v79, 9, v77
	v_sub_u32_e32 v74, vcc, v76, v74
	v_or_b32_e32 v74, v74, v79
	v_alignbit_b32 v77, v77, v72, 9
	v_add_u32_e32 v74, vcc, 0.5, v74
	v_ffbh_u32_e32 v79, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v79, 32, v79, vcc
	v_sub_u32_e32 v80, vcc, 31, v79
	v_alignbit_b32 v72, v77, v72, v80
	v_add_u32_e32 v77, vcc, v79, v78
	v_lshlrev_b32_e32 v77, 23, v77
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v77, vcc, s4, v77
	v_or_b32_e32 v76, v77, v76
	v_lshrrev_b32_e32 v72, 9, v72
	v_or_b32_e32 v72, v76, v72
	v_and_b32_e32 v76, 0xbffff000, v74
	v_mul_f32_e32 v78, 0xbfc90fda, v74
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v78, s4, v76
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v77, v74, v76
	v_mac_f32_e32 v78, s5, v76
	v_mac_f32_e32 v78, s4, v77
	v_mul_f32_e32 v76, 0x33a22168, v74
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v78, s5, v77
	v_mac_f32_e32 v76, s4, v72
	v_add_f32_e32 v72, v78, v76
	v_bfe_u32 v75, v73, 29, 1
	v_lshrrev_b32_e32 v73, 30, v73
	v_mac_f32_e32 v72, s4, v74
	v_add_u32_e32 v73, vcc, v75, v73
BB1_50:                                 ; %Flow517
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_52
	s_cbranch_execz BB1_52
BB1_51:
	v_mul_f32_e32 v72, 0x3f22f983, v18
	v_rndne_f32_e32 v74, v72
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v72, 0xfffff000, v74
	v_mul_f32_e32 v75, s4, v74
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v75, v72, s5, -v75
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v76, -v74, s4, v18
	v_sub_f32_e32 v73, v74, v72
	v_mac_f32_e32 v75, s6, v72
	v_mac_f32_e32 v75, s5, v73
	v_sub_f32_e32 v77, v18, v76
	v_mad_f32 v77, -v74, s4, v77
	v_mac_f32_e32 v75, s6, v73
	v_sub_f32_e32 v75, v77, v75
	v_add_f32_e32 v75, v76, v75
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v76, -v74, s4, v75
	v_sub_f32_e32 v75, v75, v76
	v_mad_f32 v75, -v74, s4, v75
	v_mul_f32_e32 v77, 0xb3a22168, v74
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v77, s4, v72
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v77, s5, v72
	v_mac_f32_e32 v77, s4, v73
	v_mac_f32_e32 v77, s5, v73
	v_cvt_i32_f32_e32 v73, v74
	v_sub_f32_e32 v72, v75, v77
	v_add_f32_e32 v72, v76, v72
	v_mac_f32_e32 v72, 0xa7c234c4, v74
BB1_52:                                 ; %_Z3cosf.exit18
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr74
                                        ; implicit-def: $vgpr75
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_54
	s_cbranch_execz BB1_54
BB1_53:
	v_and_b32_e32 v75, 0x7fffff, v42
	v_or_b32_e32 v75, 0x800000, v75
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v76, v75, s2
	v_mul_lo_u32 v77, v75, s3
	v_mul_hi_u32 v79, v75, s3
	v_mul_lo_u32 v78, v75, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_lo_u32 v80, v75, s2
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_hi_u32 v79, v75, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v77, vcc, v77, v80
	v_mul_lo_u32 v81, v75, s2
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v75, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_lo_u32 v82, v75, s2
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_add_u32_e32 v80, vcc, v81, v80
	v_mul_hi_u32 v81, v75, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v80, vcc, v80, v82
	v_mul_lo_u32 v83, v75, s2
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v75, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v84, v75, s2
	v_add_u32_e32 v81, vcc, v81, v83
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_mul_hi_u32 v75, v75, s2
	v_add_u32_e32 v82, vcc, v83, v82
	v_add_u32_e32 v82, vcc, v82, v84
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_lshrrev_b32_e32 v74, 23, v43
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v74, vcc, s2, v74
	v_add_u32_e32 v75, vcc, v83, v75
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v75, v75, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e64 v78, 0, 32, vcc
	v_sub_u32_e32 v74, vcc, v74, v78
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v78, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v77, vcc
	v_cndmask_b32_e32 v76, v77, v76, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v75, v75, v82, vcc
	v_sub_u32_e32 v74, vcc, v74, v77
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e32 v75, v75, v78, vcc
	v_cndmask_b32_e32 v77, v78, v81, vcc
	v_cndmask_b32_e32 v78, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v76, v79, v76, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_sub_u32_e32 v74, vcc, v74, v79
	v_cmp_lt_u32_e32 vcc, 31, v74
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v75, v75, v77, vcc
	v_cndmask_b32_e32 v77, v77, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e32 v76, v80, v76, vcc
	v_sub_u32_e32 v74, vcc, v74, v79
	v_sub_u32_e32 v79, vcc, 32, v74
	v_alignbit_b32 v80, v75, v77, v79
	v_alignbit_b32 v81, v77, v78, v79
	v_cmp_ne_u32_e32 vcc, 0, v74
	v_cndmask_b32_e32 v75, v75, v80, vcc
	v_alignbit_b32 v79, v78, v76, v79
	v_cndmask_b32_e32 v74, v77, v81, vcc
	v_cndmask_b32_e32 v77, v78, v79, vcc
	v_alignbit_b32 v79, v75, v74, 30
	v_bfe_i32 v80, v75, 29, 1
	v_alignbit_b32 v74, v74, v77, 30
	v_alignbit_b32 v76, v77, v76, 30
	v_xor_b32_e32 v79, v80, v79
	v_xor_b32_e32 v74, v80, v74
	v_xor_b32_e32 v76, v80, v76
	v_ffbh_u32_e32 v80, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v80, 32, v80, vcc
	v_lshrrev_b32_e32 v78, 29, v75
	v_sub_u32_e32 v81, vcc, 31, v80
	v_alignbit_b32 v79, v79, v74, v81
	v_alignbit_b32 v74, v74, v76, v81
	v_lshlrev_b32_e32 v78, 31, v78
	v_lshlrev_b32_e32 v76, 23, v80
	v_lshrrev_b32_e32 v81, 9, v79
	v_sub_u32_e32 v76, vcc, v78, v76
	v_or_b32_e32 v76, v76, v81
	v_alignbit_b32 v79, v79, v74, 9
	v_add_u32_e32 v76, vcc, 0.5, v76
	v_ffbh_u32_e32 v81, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v81, 32, v81, vcc
	v_sub_u32_e32 v82, vcc, 31, v81
	v_alignbit_b32 v74, v79, v74, v82
	v_add_u32_e32 v79, vcc, v81, v80
	v_lshlrev_b32_e32 v79, 23, v79
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v79, vcc, s2, v79
	v_or_b32_e32 v78, v79, v78
	v_lshrrev_b32_e32 v74, 9, v74
	v_or_b32_e32 v74, v78, v74
	v_and_b32_e32 v78, 0xbffff000, v76
	v_mul_f32_e32 v80, 0xbfc90fda, v76
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v80, s2, v78
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v79, v76, v78
	v_mac_f32_e32 v80, s3, v78
	v_mac_f32_e32 v80, s2, v79
	v_mul_f32_e32 v78, 0x33a22168, v76
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v80, s3, v79
	v_mac_f32_e32 v78, s2, v74
	v_add_f32_e32 v74, v80, v78
	v_bfe_u32 v77, v75, 29, 1
	v_lshrrev_b32_e32 v75, 30, v75
	v_mac_f32_e32 v74, s2, v76
	v_add_u32_e32 v75, vcc, v77, v75
BB1_54:                                 ; %Flow516
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_56
	s_cbranch_execz BB1_56
BB1_55:
	v_mul_f32_e32 v74, 0x3f22f983, v18
	v_rndne_f32_e32 v76, v74
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v74, 0xfffff000, v76
	v_mul_f32_e32 v77, s2, v76
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v77, v74, s3, -v77
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v78, -v76, s2, v18
	v_sub_f32_e32 v75, v76, v74
	v_mac_f32_e32 v77, s4, v74
	v_mac_f32_e32 v77, s3, v75
	v_sub_f32_e32 v18, v18, v78
	v_mad_f32 v18, -v76, s2, v18
	v_mac_f32_e32 v77, s4, v75
	v_sub_f32_e32 v18, v18, v77
	v_add_f32_e32 v18, v78, v18
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v77, -v76, s2, v18
	v_sub_f32_e32 v18, v18, v77
	v_mad_f32 v18, -v76, s2, v18
	v_mul_f32_e32 v78, 0xb3a22168, v76
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v78, s2, v74
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v78, s3, v74
	v_mac_f32_e32 v78, s2, v75
	v_mac_f32_e32 v78, s3, v75
	v_cvt_i32_f32_e32 v75, v76
	v_sub_f32_e32 v18, v18, v78
	v_add_f32_e32 v74, v77, v18
	v_mac_f32_e32 v74, 0xa7c234c4, v76
BB1_56:                                 ; %_Z3sinf.exit17
	s_or_b64 exec, exec, s[0:1]
	s_waitcnt vmcnt(2) lgkmcnt(2)
	v_add_f32_e32 v77, v34, v32
	v_add_f32_e32 v78, v35, v33
	v_sub_f32_e32 v32, v34, v32
	v_sub_f32_e32 v33, v35, v33
	v_add_f32_e32 v34, v28, v30
	v_add_f32_e32 v35, v29, v31
	v_sub_f32_e32 v28, v28, v30
	v_sub_f32_e32 v29, v29, v31
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_f32_e32 v30, v24, v26
	v_add_f32_e32 v31, v25, v27
	v_sub_f32_e32 v24, v24, v26
	v_sub_f32_e32 v25, v25, v27
	v_add_f32_e32 v26, v20, v22
	v_add_f32_e32 v27, v21, v23
	v_sub_f32_e32 v20, v20, v22
	v_sub_f32_e32 v21, v21, v23
	s_mov_b32 s2, 0xb94c1982
	v_mul_f32_e32 v22, v36, v36
	v_mov_b32_e32 v23, 0x3c0881c4
	v_mad_f32 v79, s2, v22, v23
	v_madak_f32 v79, v22, v79, 0xbe2aaa9d
	v_mul_f32_e32 v79, v22, v79
	v_mac_f32_e32 v36, v36, v79
	s_mov_b32 s1, 0x37d75334
	v_mov_b32_e32 v79, 0xbab64f3b
	v_mad_f32 v80, s1, v22, v79
	v_madak_f32 v80, v22, v80, 0x3d2aabf7
	v_madak_f32 v80, v22, v80, 0xbf000004
	v_mad_f32 v22, v22, v80, 1.0
	v_and_b32_e32 v80, 1, v37
	v_cmp_eq_u32_e32 vcc, 0, v80
	v_cndmask_b32_e64 v22, -v36, v22, vcc
	v_lshlrev_b32_e32 v36, 30, v37
	v_and_b32_e32 v36, 0x80000000, v36
	v_xor_b32_e32 v22, v36, v22
	v_mul_f32_e32 v36, v40, v40
	v_mad_f32 v37, s2, v36, v23
	v_madak_f32 v37, v36, v37, 0xbe2aaa9d
	v_mul_f32_e32 v37, v36, v37
	v_mac_f32_e32 v40, v40, v37
	v_mad_f32 v37, s1, v36, v79
	v_madak_f32 v37, v36, v37, 0x3d2aabf7
	v_madak_f32 v37, v36, v37, 0xbf000004
	v_mad_f32 v36, v36, v37, 1.0
	v_and_b32_e32 v37, 1, v41
	v_cmp_eq_u32_e32 vcc, 0, v37
	v_lshlrev_b32_e32 v37, 30, v41
	v_xor_b32_e32 v17, v37, v17
	v_bfrev_b32_e32 v37, 1
	v_cndmask_b32_e32 v36, v36, v40, vcc
	v_and_b32_e32 v17, v37, v17
	s_mov_b32 s0, 0x7f7fffff
	v_xor_b32_e32 v17, v17, v36
	v_add_f32_e32 v80, v35, v27
	v_add_f32_e32 v40, v78, v31
	v_mov_b32_e32 v36, 0x7fc00000
	v_cmp_lt_u32_e32 vcc, s0, v19
	v_cndmask_b32_e32 v19, v22, v36, vcc
	v_add_f32_e32 v41, v34, v26
	v_add_f32_e32 v22, v77, v30
	v_cndmask_b32_e32 v17, v17, v36, vcc
	v_sub_f32_e32 v82, v40, v80
	v_mul_f32_e32 v83, v17, v82
	v_sub_f32_e32 v81, v22, v41
	v_mul_f32_e32 v82, v82, v19
	v_sub_f32_e32 v26, v34, v26
	v_sub_f32_e32 v27, v35, v27
	v_mac_f32_e32 v82, v81, v17
	v_sub_f32_e32 v17, v77, v30
	v_mad_f32 v30, v26, 0, -v27
	v_mac_f32_e32 v26, 0, v27
	v_mul_f32_e32 v27, v44, v44
	v_mad_f32 v83, v81, v19, -v83
	v_sub_f32_e32 v19, v78, v31
	v_mad_f32 v31, s2, v27, v23
	v_madak_f32 v31, v27, v31, 0xbe2aaa9d
	v_mul_f32_e32 v31, v27, v31
	v_mac_f32_e32 v44, v44, v31
	v_mad_f32 v31, s1, v27, v79
	v_madak_f32 v31, v27, v31, 0x3d2aabf7
	v_madak_f32 v31, v27, v31, 0xbf000004
	v_mad_f32 v27, v27, v31, 1.0
	v_and_b32_e32 v31, 1, v45
	v_cmp_eq_u32_e32 vcc, 0, v31
	v_lshlrev_b32_e32 v31, 30, v45
	v_cndmask_b32_e64 v27, -v44, v27, vcc
	v_and_b32_e32 v31, v37, v31
	v_xor_b32_e32 v27, v31, v27
	v_mul_f32_e32 v31, v48, v48
	v_mad_f32 v34, s2, v31, v23
	v_madak_f32 v34, v31, v34, 0xbe2aaa9d
	v_mul_f32_e32 v34, v31, v34
	v_mac_f32_e32 v48, v48, v34
	v_mad_f32 v34, s1, v31, v79
	v_madak_f32 v34, v31, v34, 0x3d2aabf7
	v_madak_f32 v34, v31, v34, 0xbf000004
	v_mad_f32 v31, v31, v34, 1.0
	v_and_b32_e32 v34, 1, v49
	v_cmp_eq_u32_e32 vcc, 0, v34
	v_lshlrev_b32_e32 v34, 30, v49
	v_xor_b32_e32 v34, v34, v38
	v_cndmask_b32_e32 v31, v31, v48, vcc
	v_and_b32_e32 v34, v37, v34
	v_xor_b32_e32 v31, v34, v31
	v_cmp_lt_u32_e32 vcc, s0, v39
	v_add_f32_e32 v35, v19, v26
	v_cndmask_b32_e32 v31, v31, v36, vcc
	v_add_f32_e32 v34, v17, v30
	v_sub_f32_e32 v19, v19, v26
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_mul_f32_e32 v38, v31, v35
	v_mul_f32_e32 v26, v50, v50
	v_mul_f32_e32 v35, v35, v27
	v_mad_f32 v38, v34, v27, -v38
	v_mad_f32 v27, s2, v26, v23
	v_madak_f32 v27, v26, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v26, v27
	v_mac_f32_e32 v50, v50, v27
	v_mad_f32 v27, s1, v26, v79
	v_madak_f32 v27, v26, v27, 0x3d2aabf7
	v_madak_f32 v27, v26, v27, 0xbf000004
	v_mad_f32 v26, v26, v27, 1.0
	v_and_b32_e32 v27, 1, v51
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v51
	v_cndmask_b32_e64 v26, -v50, v26, vcc
	v_and_b32_e32 v27, v37, v27
	v_xor_b32_e32 v26, v27, v26
	v_mul_f32_e32 v27, v54, v54
	v_sub_f32_e32 v17, v17, v30
	v_mad_f32 v30, s2, v27, v23
	v_madak_f32 v30, v27, v30, 0xbe2aaa9d
	v_mul_f32_e32 v30, v27, v30
	v_mac_f32_e32 v54, v54, v30
	v_mad_f32 v30, s1, v27, v79
	v_madak_f32 v30, v27, v30, 0x3d2aabf7
	v_madak_f32 v30, v27, v30, 0xbf000004
	v_mad_f32 v27, v27, v30, 1.0
	v_and_b32_e32 v30, 1, v55
	v_cmp_eq_u32_e32 vcc, 0, v30
	v_lshlrev_b32_e32 v30, 30, v55
	v_xor_b32_e32 v30, v30, v46
	v_cndmask_b32_e32 v27, v27, v54, vcc
	v_and_b32_e32 v30, v37, v30
	v_cmp_lt_u32_e32 vcc, s0, v47
	v_xor_b32_e32 v27, v30, v27
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_cndmask_b32_e32 v26, v26, v36, vcc
	v_mul_f32_e32 v30, v27, v19
	v_mac_f32_e32 v35, v34, v31
	v_mul_f32_e32 v31, v19, v26
	v_mad_f32 v30, v17, v26, -v30
	v_mad_f32 v26, v24, 0, -v25
	v_mac_f32_e32 v24, 0, v25
	v_sub_f32_e64 v25, -v20, v21
	v_sub_f32_e32 v20, v20, v21
	v_mul_f32_e32 v21, v56, v56
	v_mac_f32_e32 v31, v17, v27
	v_mad_f32 v27, s2, v21, v23
	v_madak_f32 v27, v21, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v21, v27
	v_mac_f32_e32 v56, v56, v27
	v_mad_f32 v27, s1, v21, v79
	v_madak_f32 v27, v21, v27, 0x3d2aabf7
	v_madak_f32 v27, v21, v27, 0xbf000004
	v_mad_f32 v21, v21, v27, 1.0
	v_and_b32_e32 v27, 1, v57
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v57
	v_cndmask_b32_e64 v21, -v56, v21, vcc
	v_and_b32_e32 v27, v37, v27
	v_xor_b32_e32 v21, v27, v21
	v_mul_f32_e32 v27, v60, v60
	v_sub_f32_e32 v17, v28, v29
	v_add_f32_e32 v19, v28, v29
	v_mad_f32 v28, s2, v27, v23
	v_madak_f32 v28, v27, v28, 0xbe2aaa9d
	v_mul_f32_e32 v28, v27, v28
	v_mac_f32_e32 v60, v60, v28
	v_mad_f32 v28, s1, v27, v79
	v_madak_f32 v28, v27, v28, 0x3d2aabf7
	v_madak_f32 v28, v27, v28, 0xbf000004
	v_mad_f32 v27, v27, v28, 1.0
	v_and_b32_e32 v28, 1, v61
	v_cmp_eq_u32_e32 vcc, 0, v28
	v_lshlrev_b32_e32 v28, 30, v61
	s_mov_b32 s3, 0x3f3504f3
	v_xor_b32_e32 v28, v28, v52
	v_cndmask_b32_e32 v27, v27, v60, vcc
	v_and_b32_e32 v28, v37, v28
	v_mul_f32_e32 v20, s3, v20
	v_xor_b32_e32 v27, v28, v27
	v_cmp_lt_u32_e32 vcc, s0, v53
	v_mul_f32_e32 v25, s3, v25
	v_add_f32_e32 v29, v33, v24
	v_mad_f32 v39, s3, v19, v20
	v_add_f32_e32 v28, v32, v26
	v_mad_f32 v34, s3, v17, v25
	v_cndmask_b32_e32 v27, v27, v36, vcc
	v_add_f32_e32 v45, v29, v39
	v_cndmask_b32_e32 v21, v21, v36, vcc
	v_add_f32_e32 v44, v28, v34
	v_mul_f32_e32 v46, v27, v45
	v_mad_f32 v46, v44, v21, -v46
	v_mul_f32_e32 v21, v45, v21
	v_mac_f32_e32 v21, v44, v27
	v_sub_f32_e32 v27, v28, v34
	v_sub_f32_e32 v28, v29, v39
	v_mul_f32_e32 v29, v62, v62
	v_mad_f32 v34, s2, v29, v23
	v_madak_f32 v34, v29, v34, 0xbe2aaa9d
	v_mul_f32_e32 v34, v29, v34
	v_mac_f32_e32 v62, v62, v34
	v_mad_f32 v34, s1, v29, v79
	v_madak_f32 v34, v29, v34, 0x3d2aabf7
	v_madak_f32 v34, v29, v34, 0xbf000004
	v_mad_f32 v29, v29, v34, 1.0
	v_and_b32_e32 v34, 1, v63
	v_cmp_eq_u32_e32 vcc, 0, v34
	v_lshlrev_b32_e32 v34, 30, v63
	v_cndmask_b32_e64 v29, -v62, v29, vcc
	v_and_b32_e32 v34, v37, v34
	v_xor_b32_e32 v29, v34, v29
	v_mul_f32_e32 v34, v66, v66
	v_mad_f32 v39, s2, v34, v23
	v_madak_f32 v39, v34, v39, 0xbe2aaa9d
	v_mul_f32_e32 v39, v34, v39
	v_mad_f32 v17, v17, s3, -v25
	v_mad_f32 v19, v19, s3, -v20
	v_mac_f32_e32 v66, v66, v39
	v_mad_f32 v39, s1, v34, v79
	v_mad_f32 v20, v17, 0, -v19
	v_mac_f32_e32 v17, 0, v19
	v_mul_f32_e32 v19, v68, v68
	v_madak_f32 v39, v34, v39, 0x3d2aabf7
	v_mad_f32 v25, s2, v19, v23
	v_madak_f32 v39, v34, v39, 0xbf000004
	v_madak_f32 v25, v19, v25, 0xbe2aaa9d
	v_mad_f32 v34, v34, v39, 1.0
	v_and_b32_e32 v39, 1, v67
	v_mul_f32_e32 v25, v19, v25
	v_cmp_eq_u32_e32 vcc, 0, v39
	v_lshlrev_b32_e32 v39, 30, v67
	v_mac_f32_e32 v68, v68, v25
	v_mad_f32 v25, s1, v19, v79
	v_xor_b32_e32 v39, v39, v58
	v_madak_f32 v25, v19, v25, 0x3d2aabf7
	v_madak_f32 v25, v19, v25, 0xbf000004
	v_cndmask_b32_e32 v34, v34, v66, vcc
	v_and_b32_e32 v39, v37, v39
	v_cmp_lt_u32_e32 vcc, s0, v59
	v_xor_b32_e32 v34, v39, v34
	v_mad_f32 v19, v19, v25, 1.0
	v_and_b32_e32 v25, 1, v69
	v_cndmask_b32_e32 v29, v29, v36, vcc
	v_cndmask_b32_e32 v34, v34, v36, vcc
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v69
	v_cndmask_b32_e64 v19, -v68, v19, vcc
	v_and_b32_e32 v25, v37, v25
	v_mul_f32_e32 v39, v34, v28
	v_mul_f32_e32 v44, v28, v29
	v_xor_b32_e32 v19, v25, v19
	v_mul_f32_e32 v25, v70, v70
	v_mad_f32 v39, v27, v29, -v39
	v_mac_f32_e32 v44, v27, v34
	v_mad_f32 v27, s2, v25, v23
	v_madak_f32 v27, v25, v27, 0xbe2aaa9d
	v_mul_f32_e32 v27, v25, v27
	v_mac_f32_e32 v70, v70, v27
	v_mad_f32 v27, s1, v25, v79
	v_madak_f32 v27, v25, v27, 0x3d2aabf7
	v_madak_f32 v27, v25, v27, 0xbf000004
	v_mad_f32 v25, v25, v27, 1.0
	v_and_b32_e32 v27, 1, v71
	v_cmp_eq_u32_e32 vcc, 0, v27
	v_lshlrev_b32_e32 v27, 30, v71
	v_xor_b32_e32 v27, v27, v64
	v_cndmask_b32_e32 v25, v25, v70, vcc
	v_and_b32_e32 v27, v37, v27
	v_sub_f32_e32 v24, v33, v24
	v_cmp_lt_u32_e32 vcc, s0, v65
	v_xor_b32_e32 v25, v27, v25
	v_sub_f32_e32 v26, v32, v26
	v_add_f32_e32 v28, v24, v17
	v_cndmask_b32_e32 v25, v25, v36, vcc
	v_add_f32_e32 v27, v26, v20
	v_cndmask_b32_e32 v19, v19, v36, vcc
	v_mul_f32_e32 v29, v25, v28
	v_mad_f32 v29, v27, v19, -v29
	v_mul_f32_e32 v19, v28, v19
	v_sub_f32_e32 v17, v24, v17
	v_mul_f32_e32 v24, v72, v72
	v_mac_f32_e32 v19, v27, v25
	v_mad_f32 v25, s2, v24, v23
	v_madak_f32 v25, v24, v25, 0xbe2aaa9d
	v_mul_f32_e32 v25, v24, v25
	v_mac_f32_e32 v72, v72, v25
	v_mad_f32 v25, s1, v24, v79
	v_madak_f32 v25, v24, v25, 0x3d2aabf7
	v_madak_f32 v25, v24, v25, 0xbf000004
	v_mad_f32 v24, v24, v25, 1.0
	v_and_b32_e32 v25, 1, v73
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v73
	v_cndmask_b32_e64 v24, -v72, v24, vcc
	v_and_b32_e32 v25, v37, v25
	v_xor_b32_e32 v24, v25, v24
	v_mul_f32_e32 v25, v74, v74
	v_sub_f32_e32 v20, v26, v20
	v_mac_f32_e32 v23, s2, v25
	v_mov_b32_e32 v26, 0xbe2aaa9d
	v_mac_f32_e32 v26, v25, v23
	v_mul_f32_e32 v23, v25, v26
	v_mac_f32_e32 v74, v74, v23
	v_mac_f32_e32 v79, s1, v25
	v_mov_b32_e32 v23, 0x3d2aabf7
	v_mac_f32_e32 v23, v25, v79
	v_mov_b32_e32 v26, 0xbf000004
	v_mac_f32_e32 v26, v25, v23
	v_mad_f32 v23, v25, v26, 1.0
	v_and_b32_e32 v25, 1, v75
	v_cmp_eq_u32_e32 vcc, 0, v25
	v_lshlrev_b32_e32 v25, 30, v75
	v_xor_b32_e32 v25, v25, v42
	v_cndmask_b32_e32 v23, v23, v74, vcc
	v_and_b32_e32 v25, v37, v25
	v_cmp_lt_u32_e32 vcc, s0, v43
	v_xor_b32_e32 v23, v25, v23
	v_cndmask_b32_e32 v24, v24, v36, vcc
	v_cndmask_b32_e32 v23, v23, v36, vcc
	v_mul_f32_e32 v25, v23, v17
	v_mul_f32_e32 v32, v17, v24
	v_lshrrev_b32_e32 v76, 3, v0
	v_mad_f32 v25, v20, v24, -v25
	v_mac_f32_e32 v32, v20, v23
	v_add_f32_e32 v20, v22, v41
	v_lshlrev_b32_e32 v17, 2, v0
	s_mov_b32 m0, -1
	s_movk_i32 s0, 0x420
	ds_write2_b32 v17, v20, v46 offset1:66
	ds_write2_b32 v17, v38, v29 offset0:132 offset1:198
	v_add_u32_e32 v33, vcc, s0, v17
	s_movk_i32 s0, 0x630
	v_cvt_f64_i32_e32 v[45:46], v76
	v_add_u32_e32 v34, vcc, s0, v17
	v_and_b32_e32 v18, 7, v0
	s_movk_i32 s0, 0x42
	v_mad_u32_u24 v20, v18, s0, v76
	ds_write2_b32 v33, v83, v39 offset1:66
	v_add_f32_e32 v22, v40, v80
	v_lshlrev_b32_e32 v39, 2, v20
	s_mov_b32 s1, 0x3fd921fb
	s_mov_b32 s0, 0x54442d18
	ds_write2_b32 v34, v30, v25 offset1:66
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[27:28], v39 offset1:8
	ds_read2_b32 v[23:24], v39 offset0:16 offset1:24
	ds_read2_b32 v[29:30], v39 offset0:32 offset1:40
	ds_read2_b32 v[25:26], v39 offset0:48 offset1:56
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_write2_b32 v17, v22, v21 offset1:66
	ds_write2_b32 v17, v35, v19 offset0:132 offset1:198
	v_mul_f64 v[19:20], v[45:46], s[0:1]
	ds_write2_b32 v33, v82, v44 offset1:66
	ds_write2_b32 v34, v31, v32 offset1:66
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[35:36], v39 offset1:8
	ds_read2_b32 v[37:38], v39 offset0:32 offset1:40
	ds_read2_b32 v[31:32], v39 offset0:16 offset1:24
	ds_read2_b32 v[33:34], v39 offset0:48 offset1:56
	v_cvt_f32_f64_e32 v20, v[19:20]
	s_brev_b32 s2, -2
	s_brev_b32 s0, 18
	s_waitcnt lgkmcnt(0)
	v_cmp_nlt_f32_e64 s[0:1], |v20|, s0
	v_and_b32_e32 v19, s2, v20
	v_and_b32_e32 v41, s2, v20
	s_barrier
	s_waitcnt lgkmcnt(0)
                                        ; implicit-def: $vgpr21
                                        ; implicit-def: $vgpr22
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_58
	s_cbranch_execz BB1_58
BB1_57:
	v_and_b32_e32 v22, 0x7fffff, v20
	v_or_b32_e32 v22, 0x800000, v22
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v39, v22, s4
	v_mul_lo_u32 v40, v22, s5
	v_mul_hi_u32 v43, v22, s5
	v_mul_lo_u32 v42, v22, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v39, vcc, v40, v39
	v_mul_lo_u32 v44, v22, s4
	v_cndmask_b32_e64 v40, 0, 1, vcc
	v_add_u32_e32 v40, vcc, v40, v43
	v_mul_hi_u32 v43, v22, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v40, vcc, v40, v44
	v_mul_lo_u32 v47, v22, s4
	v_cndmask_b32_e64 v44, 0, 1, vcc
	v_add_u32_e32 v43, vcc, v44, v43
	v_mul_hi_u32 v44, v22, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v43, vcc, v43, v47
	v_mul_lo_u32 v48, v22, s4
	v_cndmask_b32_e64 v47, 0, 1, vcc
	v_add_u32_e32 v44, vcc, v47, v44
	v_mul_hi_u32 v47, v22, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v44, vcc, v44, v48
	v_mul_lo_u32 v49, v22, s4
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v22, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v50, v22, s4
	v_add_u32_e32 v47, vcc, v47, v49
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_mul_hi_u32 v22, v22, s4
	v_add_u32_e32 v48, vcc, v49, v48
	v_add_u32_e32 v48, vcc, v48, v50
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_lshrrev_b32_e32 v21, 23, v19
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v21, vcc, s4, v21
	v_add_u32_e32 v22, vcc, v49, v22
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v22, v22, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v43, v43, v40, vcc
	v_cndmask_b32_e32 v40, v40, v39, vcc
	v_cndmask_b32_e32 v39, v39, v42, vcc
	v_cndmask_b32_e64 v42, 0, 32, vcc
	v_sub_u32_e32 v21, vcc, v21, v42
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v42, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v43, v43, v40, vcc
	v_cndmask_b32_e32 v39, v40, v39, vcc
	v_cndmask_b32_e64 v40, 0, 32, vcc
	v_cndmask_b32_e32 v22, v22, v48, vcc
	v_sub_u32_e32 v21, vcc, v21, v40
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e32 v22, v22, v42, vcc
	v_cndmask_b32_e32 v40, v42, v47, vcc
	v_cndmask_b32_e32 v42, v47, v44, vcc
	v_cndmask_b32_e32 v44, v44, v43, vcc
	v_cndmask_b32_e32 v39, v43, v39, vcc
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_sub_u32_e32 v21, vcc, v21, v43
	v_cmp_lt_u32_e32 vcc, 31, v21
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_cndmask_b32_e32 v22, v22, v40, vcc
	v_cndmask_b32_e32 v40, v40, v42, vcc
	v_cndmask_b32_e32 v42, v42, v44, vcc
	v_cndmask_b32_e32 v39, v44, v39, vcc
	v_sub_u32_e32 v21, vcc, v21, v43
	v_sub_u32_e32 v43, vcc, 32, v21
	v_alignbit_b32 v44, v22, v40, v43
	v_alignbit_b32 v47, v40, v42, v43
	v_cmp_ne_u32_e32 vcc, 0, v21
	v_cndmask_b32_e32 v22, v22, v44, vcc
	v_alignbit_b32 v43, v42, v39, v43
	v_cndmask_b32_e32 v21, v40, v47, vcc
	v_cndmask_b32_e32 v40, v42, v43, vcc
	v_alignbit_b32 v43, v22, v21, 30
	v_bfe_i32 v44, v22, 29, 1
	v_alignbit_b32 v21, v21, v40, 30
	v_alignbit_b32 v39, v40, v39, 30
	v_xor_b32_e32 v43, v44, v43
	v_xor_b32_e32 v21, v44, v21
	v_xor_b32_e32 v39, v44, v39
	v_ffbh_u32_e32 v44, v43
	v_cmp_ne_u32_e32 vcc, 0, v43
	v_cndmask_b32_e32 v44, 32, v44, vcc
	v_lshrrev_b32_e32 v42, 29, v22
	v_sub_u32_e32 v47, vcc, 31, v44
	v_alignbit_b32 v43, v43, v21, v47
	v_alignbit_b32 v21, v21, v39, v47
	v_lshlrev_b32_e32 v42, 31, v42
	v_lshlrev_b32_e32 v39, 23, v44
	v_lshrrev_b32_e32 v47, 9, v43
	v_sub_u32_e32 v39, vcc, v42, v39
	v_or_b32_e32 v39, v39, v47
	v_alignbit_b32 v43, v43, v21, 9
	v_add_u32_e32 v39, vcc, 0.5, v39
	v_ffbh_u32_e32 v47, v43
	v_cmp_ne_u32_e32 vcc, 0, v43
	v_cndmask_b32_e32 v47, 32, v47, vcc
	v_sub_u32_e32 v48, vcc, 31, v47
	v_alignbit_b32 v21, v43, v21, v48
	v_add_u32_e32 v43, vcc, v47, v44
	v_lshlrev_b32_e32 v43, 23, v43
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v43, vcc, s4, v43
	v_or_b32_e32 v42, v43, v42
	v_lshrrev_b32_e32 v21, 9, v21
	v_or_b32_e32 v21, v42, v21
	v_and_b32_e32 v42, 0xbffff000, v39
	v_mul_f32_e32 v44, 0xbfc90fda, v39
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v44, s4, v42
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v43, v39, v42
	v_mac_f32_e32 v44, s5, v42
	v_mac_f32_e32 v44, s4, v43
	v_mul_f32_e32 v42, 0x33a22168, v39
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v44, s5, v43
	v_mac_f32_e32 v42, s4, v21
	v_add_f32_e32 v21, v44, v42
	v_bfe_u32 v40, v22, 29, 1
	v_lshrrev_b32_e32 v22, 30, v22
	v_mac_f32_e32 v21, s4, v39
	v_add_u32_e32 v22, vcc, v40, v22
BB1_58:                                 ; %Flow515
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_60
	s_cbranch_execz BB1_60
BB1_59:
	v_mul_f32_e32 v21, 0x3f22f983, v41
	v_rndne_f32_e32 v39, v21
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v21, 0xfffff000, v39
	v_mul_f32_e32 v40, s4, v39
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v40, v21, s5, -v40
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v42, -v39, s4, v41
	v_sub_f32_e32 v22, v39, v21
	v_mac_f32_e32 v40, s6, v21
	v_mac_f32_e32 v40, s5, v22
	v_sub_f32_e32 v43, v41, v42
	v_mad_f32 v43, -v39, s4, v43
	v_mac_f32_e32 v40, s6, v22
	v_sub_f32_e32 v40, v43, v40
	v_add_f32_e32 v40, v42, v40
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v42, -v39, s4, v40
	v_sub_f32_e32 v40, v40, v42
	v_mad_f32 v40, -v39, s4, v40
	v_mul_f32_e32 v43, 0xb3a22168, v39
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v43, s4, v21
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v43, s5, v21
	v_mac_f32_e32 v43, s4, v22
	v_mac_f32_e32 v43, s5, v22
	v_cvt_i32_f32_e32 v22, v39
	v_sub_f32_e32 v21, v40, v43
	v_add_f32_e32 v21, v42, v21
	v_mac_f32_e32 v21, 0xa7c234c4, v39
BB1_60:                                 ; %_Z3cosf.exit16
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr39
                                        ; implicit-def: $vgpr40
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_62
	s_cbranch_execz BB1_62
BB1_61:
	v_and_b32_e32 v40, 0x7fffff, v20
	v_or_b32_e32 v40, 0x800000, v40
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v42, v40, s2
	v_mul_lo_u32 v43, v40, s3
	v_mul_hi_u32 v47, v40, s3
	v_mul_lo_u32 v44, v40, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v42, vcc, v43, v42
	v_mul_lo_u32 v48, v40, s2
	v_cndmask_b32_e64 v43, 0, 1, vcc
	v_add_u32_e32 v43, vcc, v43, v47
	v_mul_hi_u32 v47, v40, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v43, vcc, v43, v48
	v_mul_lo_u32 v49, v40, s2
	v_cndmask_b32_e64 v48, 0, 1, vcc
	v_add_u32_e32 v47, vcc, v48, v47
	v_mul_hi_u32 v48, v40, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v47, vcc, v47, v49
	v_mul_lo_u32 v50, v40, s2
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_hi_u32 v49, v40, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v48, vcc, v48, v50
	v_mul_lo_u32 v51, v40, s2
	v_cndmask_b32_e64 v50, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v50, v49
	v_mul_hi_u32 v50, v40, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v52, v40, s2
	v_add_u32_e32 v49, vcc, v49, v51
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_mul_hi_u32 v40, v40, s2
	v_add_u32_e32 v50, vcc, v51, v50
	v_add_u32_e32 v50, vcc, v50, v52
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_lshrrev_b32_e32 v39, 23, v19
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v39, vcc, s2, v39
	v_add_u32_e32 v40, vcc, v51, v40
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v40, v40, v50, vcc
	v_cndmask_b32_e32 v50, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v43, vcc
	v_cndmask_b32_e32 v43, v43, v42, vcc
	v_cndmask_b32_e32 v42, v42, v44, vcc
	v_cndmask_b32_e64 v44, 0, 32, vcc
	v_sub_u32_e32 v39, vcc, v39, v44
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v44, v50, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v47, v47, v43, vcc
	v_cndmask_b32_e32 v42, v43, v42, vcc
	v_cndmask_b32_e64 v43, 0, 32, vcc
	v_cndmask_b32_e32 v40, v40, v50, vcc
	v_sub_u32_e32 v39, vcc, v39, v43
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e32 v40, v40, v44, vcc
	v_cndmask_b32_e32 v43, v44, v49, vcc
	v_cndmask_b32_e32 v44, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v47, vcc
	v_cndmask_b32_e32 v42, v47, v42, vcc
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_sub_u32_e32 v39, vcc, v39, v47
	v_cmp_lt_u32_e32 vcc, 31, v39
	v_cndmask_b32_e64 v47, 0, 32, vcc
	v_cndmask_b32_e32 v40, v40, v43, vcc
	v_cndmask_b32_e32 v43, v43, v44, vcc
	v_cndmask_b32_e32 v44, v44, v48, vcc
	v_cndmask_b32_e32 v42, v48, v42, vcc
	v_sub_u32_e32 v39, vcc, v39, v47
	v_sub_u32_e32 v47, vcc, 32, v39
	v_alignbit_b32 v48, v40, v43, v47
	v_alignbit_b32 v49, v43, v44, v47
	v_cmp_ne_u32_e32 vcc, 0, v39
	v_cndmask_b32_e32 v40, v40, v48, vcc
	v_alignbit_b32 v47, v44, v42, v47
	v_cndmask_b32_e32 v39, v43, v49, vcc
	v_cndmask_b32_e32 v43, v44, v47, vcc
	v_alignbit_b32 v47, v40, v39, 30
	v_bfe_i32 v48, v40, 29, 1
	v_alignbit_b32 v39, v39, v43, 30
	v_alignbit_b32 v42, v43, v42, 30
	v_xor_b32_e32 v47, v48, v47
	v_xor_b32_e32 v39, v48, v39
	v_xor_b32_e32 v42, v48, v42
	v_ffbh_u32_e32 v48, v47
	v_cmp_ne_u32_e32 vcc, 0, v47
	v_cndmask_b32_e32 v48, 32, v48, vcc
	v_lshrrev_b32_e32 v44, 29, v40
	v_sub_u32_e32 v49, vcc, 31, v48
	v_alignbit_b32 v47, v47, v39, v49
	v_alignbit_b32 v39, v39, v42, v49
	v_lshlrev_b32_e32 v44, 31, v44
	v_lshlrev_b32_e32 v42, 23, v48
	v_lshrrev_b32_e32 v49, 9, v47
	v_sub_u32_e32 v42, vcc, v44, v42
	v_or_b32_e32 v42, v42, v49
	v_alignbit_b32 v47, v47, v39, 9
	v_add_u32_e32 v42, vcc, 0.5, v42
	v_ffbh_u32_e32 v49, v47
	v_cmp_ne_u32_e32 vcc, 0, v47
	v_cndmask_b32_e32 v49, 32, v49, vcc
	v_sub_u32_e32 v50, vcc, 31, v49
	v_alignbit_b32 v39, v47, v39, v50
	v_add_u32_e32 v47, vcc, v49, v48
	v_lshlrev_b32_e32 v47, 23, v47
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v47, vcc, s2, v47
	v_or_b32_e32 v44, v47, v44
	v_lshrrev_b32_e32 v39, 9, v39
	v_or_b32_e32 v39, v44, v39
	v_and_b32_e32 v44, 0xbffff000, v42
	v_mul_f32_e32 v48, 0xbfc90fda, v42
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v48, s2, v44
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v47, v42, v44
	v_mac_f32_e32 v48, s3, v44
	v_mac_f32_e32 v48, s2, v47
	v_mul_f32_e32 v44, 0x33a22168, v42
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v48, s3, v47
	v_mac_f32_e32 v44, s2, v39
	v_add_f32_e32 v39, v48, v44
	v_bfe_u32 v43, v40, 29, 1
	v_lshrrev_b32_e32 v40, 30, v40
	v_mac_f32_e32 v39, s2, v42
	v_add_u32_e32 v40, vcc, v43, v40
BB1_62:                                 ; %Flow514
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_64
	s_cbranch_execz BB1_64
BB1_63:
	v_mul_f32_e32 v39, 0x3f22f983, v41
	v_rndne_f32_e32 v42, v39
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v39, 0xfffff000, v42
	v_mul_f32_e32 v43, s2, v42
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v43, v39, s3, -v43
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v44, -v42, s2, v41
	v_sub_f32_e32 v40, v42, v39
	v_mac_f32_e32 v43, s4, v39
	v_mac_f32_e32 v43, s3, v40
	v_sub_f32_e32 v41, v41, v44
	v_mad_f32 v41, -v42, s2, v41
	v_mac_f32_e32 v43, s4, v40
	v_sub_f32_e32 v41, v41, v43
	v_add_f32_e32 v41, v44, v41
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v43, -v42, s2, v41
	v_sub_f32_e32 v41, v41, v43
	v_mad_f32 v41, -v42, s2, v41
	v_mul_f32_e32 v44, 0xb3a22168, v42
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v44, s2, v39
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v44, s3, v39
	v_mac_f32_e32 v44, s2, v40
	v_mac_f32_e32 v44, s3, v40
	v_cvt_i32_f32_e32 v40, v42
	v_sub_f32_e32 v39, v41, v44
	v_add_f32_e32 v39, v43, v39
	v_mac_f32_e32 v39, 0xa7c234c4, v42
BB1_64:                                 ; %_Z3sinf.exit15
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fc921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[41:42], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr47
                                        ; implicit-def: $vgpr48
	v_cvt_f32_f64_e32 v41, v[41:42]
	v_and_b32_e32 v42, s0, v41
	v_and_b32_e32 v43, s0, v41
	v_cmp_nlt_f32_e64 s[0:1], |v41|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_66
	s_cbranch_execz BB1_66
BB1_65:
	v_and_b32_e32 v47, 0x7fffff, v41
	v_or_b32_e32 v47, 0x800000, v47
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v48, v47, s4
	v_mul_lo_u32 v49, v47, s5
	v_mul_hi_u32 v51, v47, s5
	v_mul_lo_u32 v50, v47, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v48, vcc, v49, v48
	v_mul_lo_u32 v52, v47, s4
	v_cndmask_b32_e64 v49, 0, 1, vcc
	v_add_u32_e32 v49, vcc, v49, v51
	v_mul_hi_u32 v51, v47, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v49, vcc, v49, v52
	v_mul_lo_u32 v53, v47, s4
	v_cndmask_b32_e64 v52, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v52, v51
	v_mul_hi_u32 v52, v47, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_lo_u32 v54, v47, s4
	v_cndmask_b32_e64 v53, 0, 1, vcc
	v_add_u32_e32 v52, vcc, v53, v52
	v_mul_hi_u32 v53, v47, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v52, vcc, v52, v54
	v_mul_lo_u32 v55, v47, s4
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v47, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v56, v47, s4
	v_add_u32_e32 v53, vcc, v53, v55
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_mul_hi_u32 v47, v47, s4
	v_add_u32_e32 v54, vcc, v55, v54
	v_add_u32_e32 v54, vcc, v54, v56
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v42
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v44, vcc, s4, v44
	v_add_u32_e32 v47, vcc, v55, v47
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v49, v49, v48, vcc
	v_cndmask_b32_e32 v48, v48, v50, vcc
	v_cndmask_b32_e64 v50, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v50
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v50, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v51, v51, v49, vcc
	v_cndmask_b32_e32 v48, v49, v48, vcc
	v_cndmask_b32_e64 v49, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v54, vcc
	v_sub_u32_e32 v44, vcc, v44, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v47, v47, v50, vcc
	v_cndmask_b32_e32 v49, v50, v53, vcc
	v_cndmask_b32_e32 v50, v53, v52, vcc
	v_cndmask_b32_e32 v52, v52, v51, vcc
	v_cndmask_b32_e32 v48, v51, v48, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v47, v47, v49, vcc
	v_cndmask_b32_e32 v49, v49, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e32 v48, v52, v48, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_sub_u32_e32 v51, vcc, 32, v44
	v_alignbit_b32 v52, v47, v49, v51
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_alignbit_b32 v53, v49, v50, v51
	v_cndmask_b32_e32 v44, v47, v52, vcc
	v_alignbit_b32 v51, v50, v48, v51
	v_cndmask_b32_e32 v47, v49, v53, vcc
	v_cndmask_b32_e32 v49, v50, v51, vcc
	v_alignbit_b32 v51, v44, v47, 30
	v_bfe_i32 v52, v44, 29, 1
	v_alignbit_b32 v47, v47, v49, 30
	v_alignbit_b32 v48, v49, v48, 30
	v_xor_b32_e32 v51, v52, v51
	v_xor_b32_e32 v47, v52, v47
	v_xor_b32_e32 v48, v52, v48
	v_ffbh_u32_e32 v52, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_lshrrev_b32_e32 v50, 29, v44
	v_sub_u32_e32 v53, vcc, 31, v52
	v_alignbit_b32 v51, v51, v47, v53
	v_alignbit_b32 v47, v47, v48, v53
	v_lshlrev_b32_e32 v50, 31, v50
	v_lshlrev_b32_e32 v48, 23, v52
	v_lshrrev_b32_e32 v53, 9, v51
	v_sub_u32_e32 v48, vcc, v50, v48
	v_or_b32_e32 v48, v48, v53
	v_alignbit_b32 v51, v51, v47, 9
	v_add_u32_e32 v48, vcc, 0.5, v48
	v_ffbh_u32_e32 v53, v51
	v_cmp_ne_u32_e32 vcc, 0, v51
	v_cndmask_b32_e32 v53, 32, v53, vcc
	v_sub_u32_e32 v54, vcc, 31, v53
	v_alignbit_b32 v47, v51, v47, v54
	v_add_u32_e32 v51, vcc, v53, v52
	v_lshlrev_b32_e32 v51, 23, v51
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v51, vcc, s4, v51
	v_or_b32_e32 v50, v51, v50
	v_lshrrev_b32_e32 v47, 9, v47
	v_or_b32_e32 v47, v50, v47
	v_and_b32_e32 v50, 0xbffff000, v48
	v_mul_f32_e32 v52, 0xbfc90fda, v48
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v52, s4, v50
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v51, v48, v50
	v_mac_f32_e32 v52, s5, v50
	v_mac_f32_e32 v52, s4, v51
	v_mul_f32_e32 v50, 0x33a22168, v48
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v52, s5, v51
	v_mac_f32_e32 v50, s4, v47
	v_add_f32_e32 v47, v52, v50
	v_bfe_u32 v49, v44, 29, 1
	v_lshrrev_b32_e32 v44, 30, v44
	v_mac_f32_e32 v47, s4, v48
	v_add_u32_e32 v48, vcc, v49, v44
BB1_66:                                 ; %Flow513
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_68
	s_cbranch_execz BB1_68
BB1_67:
	v_mul_f32_e32 v44, 0x3f22f983, v43
	v_rndne_f32_e32 v44, v44
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v47, 0xfffff000, v44
	v_mul_f32_e32 v49, s4, v44
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v49, v47, s5, -v49
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v50, -v44, s4, v43
	v_sub_f32_e32 v48, v44, v47
	v_mac_f32_e32 v49, s6, v47
	v_mac_f32_e32 v49, s5, v48
	v_sub_f32_e32 v51, v43, v50
	v_mad_f32 v51, -v44, s4, v51
	v_mac_f32_e32 v49, s6, v48
	v_sub_f32_e32 v49, v51, v49
	v_add_f32_e32 v49, v50, v49
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v50, -v44, s4, v49
	v_sub_f32_e32 v49, v49, v50
	v_mad_f32 v49, -v44, s4, v49
	v_mul_f32_e32 v51, 0xb3a22168, v44
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v51, s4, v47
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v51, s5, v47
	v_mac_f32_e32 v51, s4, v48
	v_mac_f32_e32 v51, s5, v48
	v_cvt_i32_f32_e32 v48, v44
	v_sub_f32_e32 v47, v49, v51
	v_add_f32_e32 v47, v50, v47
	v_mac_f32_e32 v47, 0xa7c234c4, v44
BB1_68:                                 ; %_Z3cosf.exit14
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr51
                                        ; implicit-def: $vgpr52
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_70
	s_cbranch_execz BB1_70
BB1_69:
	v_and_b32_e32 v49, 0x7fffff, v41
	v_or_b32_e32 v49, 0x800000, v49
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v50, v49, s2
	v_mul_lo_u32 v51, v49, s3
	v_mul_hi_u32 v53, v49, s3
	v_mul_lo_u32 v52, v49, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v50, vcc, v51, v50
	v_mul_lo_u32 v54, v49, s2
	v_cndmask_b32_e64 v51, 0, 1, vcc
	v_add_u32_e32 v51, vcc, v51, v53
	v_mul_hi_u32 v53, v49, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v51, vcc, v51, v54
	v_mul_lo_u32 v55, v49, s2
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_hi_u32 v54, v49, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v53, vcc, v53, v55
	v_mul_lo_u32 v56, v49, s2
	v_cndmask_b32_e64 v55, 0, 1, vcc
	v_add_u32_e32 v54, vcc, v55, v54
	v_mul_hi_u32 v55, v49, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v54, vcc, v54, v56
	v_mul_lo_u32 v57, v49, s2
	v_cndmask_b32_e64 v56, 0, 1, vcc
	v_add_u32_e32 v55, vcc, v56, v55
	v_mul_hi_u32 v56, v49, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v58, v49, s2
	v_add_u32_e32 v55, vcc, v55, v57
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_mul_hi_u32 v49, v49, s2
	v_add_u32_e32 v56, vcc, v57, v56
	v_add_u32_e32 v56, vcc, v56, v58
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_lshrrev_b32_e32 v44, 23, v42
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v44, vcc, s2, v44
	v_add_u32_e32 v49, vcc, v57, v49
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v49, v49, v56, vcc
	v_cndmask_b32_e32 v56, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v51, vcc
	v_cndmask_b32_e32 v51, v51, v50, vcc
	v_cndmask_b32_e32 v50, v50, v52, vcc
	v_cndmask_b32_e64 v52, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v52
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v52, v56, v55, vcc
	v_cndmask_b32_e32 v55, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v51, vcc
	v_cndmask_b32_e32 v50, v51, v50, vcc
	v_cndmask_b32_e64 v51, 0, 32, vcc
	v_cndmask_b32_e32 v49, v49, v56, vcc
	v_sub_u32_e32 v44, vcc, v44, v51
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e32 v49, v49, v52, vcc
	v_cndmask_b32_e32 v51, v52, v55, vcc
	v_cndmask_b32_e32 v52, v55, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v50, v53, v50, vcc
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_sub_u32_e32 v44, vcc, v44, v53
	v_cmp_lt_u32_e32 vcc, 31, v44
	v_cndmask_b32_e64 v53, 0, 32, vcc
	v_cndmask_b32_e32 v49, v49, v51, vcc
	v_cndmask_b32_e32 v51, v51, v52, vcc
	v_cndmask_b32_e32 v52, v52, v54, vcc
	v_cndmask_b32_e32 v50, v54, v50, vcc
	v_sub_u32_e32 v44, vcc, v44, v53
	v_sub_u32_e32 v53, vcc, 32, v44
	v_alignbit_b32 v54, v49, v51, v53
	v_cmp_ne_u32_e32 vcc, 0, v44
	v_cndmask_b32_e32 v44, v49, v54, vcc
	v_alignbit_b32 v55, v51, v52, v53
	v_alignbit_b32 v53, v52, v50, v53
	v_cndmask_b32_e32 v49, v51, v55, vcc
	v_cndmask_b32_e32 v51, v52, v53, vcc
	v_lshrrev_b32_e32 v52, 29, v44
	v_alignbit_b32 v53, v44, v49, 30
	v_alignbit_b32 v49, v49, v51, 30
	v_alignbit_b32 v50, v51, v50, 30
	v_lshlrev_b32_e32 v51, 31, v52
	v_bfe_i32 v52, v44, 29, 1
	v_xor_b32_e32 v53, v52, v53
	v_xor_b32_e32 v49, v52, v49
	v_xor_b32_e32 v50, v52, v50
	v_ffbh_u32_e32 v52, v53
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v52, 32, v52, vcc
	v_sub_u32_e32 v55, vcc, 31, v52
	v_alignbit_b32 v53, v53, v49, v55
	v_alignbit_b32 v49, v49, v50, v55
	v_lshlrev_b32_e32 v50, 23, v52
	v_lshrrev_b32_e32 v55, 9, v53
	v_sub_u32_e32 v50, vcc, v51, v50
	v_or_b32_e32 v50, v50, v55
	v_alignbit_b32 v53, v53, v49, 9
	v_add_u32_e32 v50, vcc, 0.5, v50
	v_ffbh_u32_e32 v55, v53
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v55, 32, v55, vcc
	v_add_u32_e32 v52, vcc, v55, v52
	v_sub_u32_e32 v56, vcc, 31, v55
	v_lshlrev_b32_e32 v52, 23, v52
	s_mov_b32 s2, 0x33000000
	v_alignbit_b32 v49, v53, v49, v56
	v_sub_u32_e32 v52, vcc, s2, v52
	v_or_b32_e32 v51, v52, v51
	v_lshrrev_b32_e32 v49, 9, v49
	v_or_b32_e32 v49, v51, v49
	v_and_b32_e32 v51, 0xbffff000, v50
	v_mul_f32_e32 v53, 0xbfc90fda, v50
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v53, s2, v51
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v52, v50, v51
	v_mac_f32_e32 v53, s3, v51
	v_mac_f32_e32 v53, s2, v52
	v_mul_f32_e32 v51, 0x33a22168, v50
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v53, s3, v52
	v_mac_f32_e32 v51, s2, v49
	v_add_f32_e32 v51, v53, v51
	v_bfe_u32 v54, v44, 29, 1
	v_lshrrev_b32_e32 v44, 30, v44
	v_mac_f32_e32 v51, s2, v50
	v_add_u32_e32 v52, vcc, v54, v44
BB1_70:                                 ; %Flow512
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_72
	s_cbranch_execz BB1_72
BB1_71:
	v_mul_f32_e32 v44, 0x3f22f983, v43
	v_rndne_f32_e32 v44, v44
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v49, 0xfffff000, v44
	v_mul_f32_e32 v51, s2, v44
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v51, v49, s3, -v51
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v52, -v44, s2, v43
	v_sub_f32_e32 v50, v44, v49
	v_mac_f32_e32 v51, s4, v49
	v_mac_f32_e32 v51, s3, v50
	v_sub_f32_e32 v43, v43, v52
	v_mad_f32 v43, -v44, s2, v43
	v_mac_f32_e32 v51, s4, v50
	v_sub_f32_e32 v43, v43, v51
	v_add_f32_e32 v43, v52, v43
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v51, -v44, s2, v43
	v_sub_f32_e32 v43, v43, v51
	v_mad_f32 v43, -v44, s2, v43
	v_mul_f32_e32 v53, 0xb3a22168, v44
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v53, s2, v49
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v53, s3, v49
	v_mac_f32_e32 v53, s2, v50
	v_mac_f32_e32 v53, s3, v50
	v_cvt_i32_f32_e32 v52, v44
	v_sub_f32_e32 v43, v43, v53
	v_add_f32_e32 v51, v51, v43
	v_mac_f32_e32 v51, 0xa7c234c4, v44
BB1_72:                                 ; %_Z3sinf.exit13
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fe2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[43:44], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr49
                                        ; implicit-def: $vgpr50
	v_cvt_f32_f64_e32 v44, v[43:44]
	v_and_b32_e32 v43, s0, v44
	v_and_b32_e32 v55, s0, v44
	v_cmp_nlt_f32_e64 s[0:1], |v44|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_74
	s_cbranch_execz BB1_74
BB1_73:
	v_and_b32_e32 v50, 0x7fffff, v44
	v_or_b32_e32 v50, 0x800000, v50
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v53, v50, s4
	v_mul_lo_u32 v54, v50, s5
	v_mul_hi_u32 v57, v50, s5
	v_mul_lo_u32 v56, v50, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v53, vcc, v54, v53
	v_mul_lo_u32 v58, v50, s4
	v_cndmask_b32_e64 v54, 0, 1, vcc
	v_add_u32_e32 v54, vcc, v54, v57
	v_mul_hi_u32 v57, v50, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v54, vcc, v54, v58
	v_mul_lo_u32 v59, v50, s4
	v_cndmask_b32_e64 v58, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v58, v57
	v_mul_hi_u32 v58, v50, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_lo_u32 v60, v50, s4
	v_cndmask_b32_e64 v59, 0, 1, vcc
	v_add_u32_e32 v58, vcc, v59, v58
	v_mul_hi_u32 v59, v50, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v58, vcc, v58, v60
	v_mul_lo_u32 v61, v50, s4
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v50, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v62, v50, s4
	v_add_u32_e32 v59, vcc, v59, v61
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_mul_hi_u32 v50, v50, s4
	v_add_u32_e32 v60, vcc, v61, v60
	v_add_u32_e32 v60, vcc, v60, v62
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_lshrrev_b32_e32 v49, 23, v43
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v49, vcc, s4, v49
	v_add_u32_e32 v50, vcc, v61, v50
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v50, v50, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v54, vcc
	v_cndmask_b32_e32 v54, v54, v53, vcc
	v_cndmask_b32_e32 v53, v53, v56, vcc
	v_cndmask_b32_e64 v56, 0, 32, vcc
	v_sub_u32_e32 v49, vcc, v49, v56
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v56, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v57, v57, v54, vcc
	v_cndmask_b32_e32 v53, v54, v53, vcc
	v_cndmask_b32_e64 v54, 0, 32, vcc
	v_cndmask_b32_e32 v50, v50, v60, vcc
	v_sub_u32_e32 v49, vcc, v49, v54
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e32 v50, v50, v56, vcc
	v_cndmask_b32_e32 v54, v56, v59, vcc
	v_cndmask_b32_e32 v56, v59, v58, vcc
	v_cndmask_b32_e32 v58, v58, v57, vcc
	v_cndmask_b32_e32 v53, v57, v53, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_sub_u32_e32 v49, vcc, v49, v57
	v_cmp_lt_u32_e32 vcc, 31, v49
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v50, v50, v54, vcc
	v_cndmask_b32_e32 v54, v54, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e32 v53, v58, v53, vcc
	v_sub_u32_e32 v49, vcc, v49, v57
	v_sub_u32_e32 v57, vcc, 32, v49
	v_alignbit_b32 v58, v50, v54, v57
	v_alignbit_b32 v59, v54, v56, v57
	v_cmp_ne_u32_e32 vcc, 0, v49
	v_cndmask_b32_e32 v50, v50, v58, vcc
	v_alignbit_b32 v57, v56, v53, v57
	v_cndmask_b32_e32 v49, v54, v59, vcc
	v_cndmask_b32_e32 v54, v56, v57, vcc
	v_alignbit_b32 v57, v50, v49, 30
	v_bfe_i32 v58, v50, 29, 1
	v_alignbit_b32 v49, v49, v54, 30
	v_alignbit_b32 v53, v54, v53, 30
	v_xor_b32_e32 v57, v58, v57
	v_xor_b32_e32 v49, v58, v49
	v_xor_b32_e32 v53, v58, v53
	v_ffbh_u32_e32 v58, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, 32, v58, vcc
	v_lshrrev_b32_e32 v56, 29, v50
	v_sub_u32_e32 v59, vcc, 31, v58
	v_alignbit_b32 v57, v57, v49, v59
	v_alignbit_b32 v49, v49, v53, v59
	v_lshlrev_b32_e32 v56, 31, v56
	v_lshlrev_b32_e32 v53, 23, v58
	v_lshrrev_b32_e32 v59, 9, v57
	v_sub_u32_e32 v53, vcc, v56, v53
	v_or_b32_e32 v53, v53, v59
	v_alignbit_b32 v57, v57, v49, 9
	v_add_u32_e32 v53, vcc, 0.5, v53
	v_ffbh_u32_e32 v59, v57
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v59, 32, v59, vcc
	v_sub_u32_e32 v60, vcc, 31, v59
	v_alignbit_b32 v49, v57, v49, v60
	v_add_u32_e32 v57, vcc, v59, v58
	v_lshlrev_b32_e32 v57, 23, v57
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v57, vcc, s4, v57
	v_or_b32_e32 v56, v57, v56
	v_lshrrev_b32_e32 v49, 9, v49
	v_or_b32_e32 v49, v56, v49
	v_and_b32_e32 v56, 0xbffff000, v53
	v_mul_f32_e32 v58, 0xbfc90fda, v53
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v58, s4, v56
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v57, v53, v56
	v_mac_f32_e32 v58, s5, v56
	v_mac_f32_e32 v58, s4, v57
	v_mul_f32_e32 v56, 0x33a22168, v53
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v58, s5, v57
	v_mac_f32_e32 v56, s4, v49
	v_add_f32_e32 v49, v58, v56
	v_bfe_u32 v54, v50, 29, 1
	v_lshrrev_b32_e32 v50, 30, v50
	v_mac_f32_e32 v49, s4, v53
	v_add_u32_e32 v50, vcc, v54, v50
BB1_74:                                 ; %Flow511
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_76
	s_cbranch_execz BB1_76
BB1_75:
	v_mul_f32_e32 v49, 0x3f22f983, v55
	v_rndne_f32_e32 v53, v49
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v49, 0xfffff000, v53
	v_mul_f32_e32 v54, s4, v53
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v54, v49, s5, -v54
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v56, -v53, s4, v55
	v_sub_f32_e32 v50, v53, v49
	v_mac_f32_e32 v54, s6, v49
	v_mac_f32_e32 v54, s5, v50
	v_sub_f32_e32 v57, v55, v56
	v_mad_f32 v57, -v53, s4, v57
	v_mac_f32_e32 v54, s6, v50
	v_sub_f32_e32 v54, v57, v54
	v_add_f32_e32 v54, v56, v54
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v56, -v53, s4, v54
	v_sub_f32_e32 v54, v54, v56
	v_mad_f32 v54, -v53, s4, v54
	v_mul_f32_e32 v57, 0xb3a22168, v53
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v57, s4, v49
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v57, s5, v49
	v_mac_f32_e32 v57, s4, v50
	v_mac_f32_e32 v57, s5, v50
	v_cvt_i32_f32_e32 v50, v53
	v_sub_f32_e32 v49, v54, v57
	v_add_f32_e32 v49, v56, v49
	v_mac_f32_e32 v49, 0xa7c234c4, v53
BB1_76:                                 ; %_Z3cosf.exit12
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr53
                                        ; implicit-def: $vgpr54
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_78
	s_cbranch_execz BB1_78
BB1_77:
	v_and_b32_e32 v54, 0x7fffff, v44
	v_or_b32_e32 v54, 0x800000, v54
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v56, v54, s2
	v_mul_lo_u32 v57, v54, s3
	v_mul_hi_u32 v59, v54, s3
	v_mul_lo_u32 v58, v54, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v56, vcc, v57, v56
	v_mul_lo_u32 v60, v54, s2
	v_cndmask_b32_e64 v57, 0, 1, vcc
	v_add_u32_e32 v57, vcc, v57, v59
	v_mul_hi_u32 v59, v54, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v57, vcc, v57, v60
	v_mul_lo_u32 v61, v54, s2
	v_cndmask_b32_e64 v60, 0, 1, vcc
	v_add_u32_e32 v59, vcc, v60, v59
	v_mul_hi_u32 v60, v54, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v59, vcc, v59, v61
	v_mul_lo_u32 v62, v54, s2
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_hi_u32 v61, v54, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v60, vcc, v60, v62
	v_mul_lo_u32 v63, v54, s2
	v_cndmask_b32_e64 v62, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v62, v61
	v_mul_hi_u32 v62, v54, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v64, v54, s2
	v_add_u32_e32 v61, vcc, v61, v63
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_mul_hi_u32 v54, v54, s2
	v_add_u32_e32 v62, vcc, v63, v62
	v_add_u32_e32 v62, vcc, v62, v64
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_lshrrev_b32_e32 v53, 23, v43
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v53, vcc, s2, v53
	v_add_u32_e32 v54, vcc, v63, v54
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v54, v54, v62, vcc
	v_cndmask_b32_e32 v62, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v57, vcc
	v_cndmask_b32_e32 v57, v57, v56, vcc
	v_cndmask_b32_e32 v56, v56, v58, vcc
	v_cndmask_b32_e64 v58, 0, 32, vcc
	v_sub_u32_e32 v53, vcc, v53, v58
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v58, v62, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v59, v59, v57, vcc
	v_cndmask_b32_e32 v56, v57, v56, vcc
	v_cndmask_b32_e64 v57, 0, 32, vcc
	v_cndmask_b32_e32 v54, v54, v62, vcc
	v_sub_u32_e32 v53, vcc, v53, v57
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e32 v54, v54, v58, vcc
	v_cndmask_b32_e32 v57, v58, v61, vcc
	v_cndmask_b32_e32 v58, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v59, vcc
	v_cndmask_b32_e32 v56, v59, v56, vcc
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_sub_u32_e32 v53, vcc, v53, v59
	v_cmp_lt_u32_e32 vcc, 31, v53
	v_cndmask_b32_e64 v59, 0, 32, vcc
	v_cndmask_b32_e32 v54, v54, v57, vcc
	v_cndmask_b32_e32 v57, v57, v58, vcc
	v_cndmask_b32_e32 v58, v58, v60, vcc
	v_cndmask_b32_e32 v56, v60, v56, vcc
	v_sub_u32_e32 v53, vcc, v53, v59
	v_sub_u32_e32 v59, vcc, 32, v53
	v_alignbit_b32 v60, v54, v57, v59
	v_alignbit_b32 v61, v57, v58, v59
	v_cmp_ne_u32_e32 vcc, 0, v53
	v_cndmask_b32_e32 v54, v54, v60, vcc
	v_alignbit_b32 v59, v58, v56, v59
	v_cndmask_b32_e32 v53, v57, v61, vcc
	v_cndmask_b32_e32 v57, v58, v59, vcc
	v_alignbit_b32 v59, v54, v53, 30
	v_bfe_i32 v60, v54, 29, 1
	v_alignbit_b32 v53, v53, v57, 30
	v_alignbit_b32 v56, v57, v56, 30
	v_xor_b32_e32 v59, v60, v59
	v_xor_b32_e32 v53, v60, v53
	v_xor_b32_e32 v56, v60, v56
	v_ffbh_u32_e32 v60, v59
	v_cmp_ne_u32_e32 vcc, 0, v59
	v_cndmask_b32_e32 v60, 32, v60, vcc
	v_lshrrev_b32_e32 v58, 29, v54
	v_sub_u32_e32 v61, vcc, 31, v60
	v_alignbit_b32 v59, v59, v53, v61
	v_alignbit_b32 v53, v53, v56, v61
	v_lshlrev_b32_e32 v58, 31, v58
	v_lshlrev_b32_e32 v56, 23, v60
	v_lshrrev_b32_e32 v61, 9, v59
	v_sub_u32_e32 v56, vcc, v58, v56
	v_or_b32_e32 v56, v56, v61
	v_alignbit_b32 v59, v59, v53, 9
	v_add_u32_e32 v56, vcc, 0.5, v56
	v_ffbh_u32_e32 v61, v59
	v_cmp_ne_u32_e32 vcc, 0, v59
	v_cndmask_b32_e32 v61, 32, v61, vcc
	v_sub_u32_e32 v62, vcc, 31, v61
	v_alignbit_b32 v53, v59, v53, v62
	v_add_u32_e32 v59, vcc, v61, v60
	v_lshlrev_b32_e32 v59, 23, v59
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v59, vcc, s2, v59
	v_or_b32_e32 v58, v59, v58
	v_lshrrev_b32_e32 v53, 9, v53
	v_or_b32_e32 v53, v58, v53
	v_and_b32_e32 v58, 0xbffff000, v56
	v_mul_f32_e32 v60, 0xbfc90fda, v56
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v60, s2, v58
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v59, v56, v58
	v_mac_f32_e32 v60, s3, v58
	v_mac_f32_e32 v60, s2, v59
	v_mul_f32_e32 v58, 0x33a22168, v56
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v60, s3, v59
	v_mac_f32_e32 v58, s2, v53
	v_add_f32_e32 v53, v60, v58
	v_bfe_u32 v57, v54, 29, 1
	v_lshrrev_b32_e32 v54, 30, v54
	v_mac_f32_e32 v53, s2, v56
	v_add_u32_e32 v54, vcc, v57, v54
BB1_78:                                 ; %Flow510
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_80
	s_cbranch_execz BB1_80
BB1_79:
	v_mul_f32_e32 v53, 0x3f22f983, v55
	v_rndne_f32_e32 v56, v53
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v53, 0xfffff000, v56
	v_mul_f32_e32 v57, s2, v56
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v57, v53, s3, -v57
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v58, -v56, s2, v55
	v_sub_f32_e32 v54, v56, v53
	v_mac_f32_e32 v57, s4, v53
	v_mac_f32_e32 v57, s3, v54
	v_sub_f32_e32 v55, v55, v58
	v_mad_f32 v55, -v56, s2, v55
	v_mac_f32_e32 v57, s4, v54
	v_sub_f32_e32 v55, v55, v57
	v_add_f32_e32 v55, v58, v55
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v57, -v56, s2, v55
	v_sub_f32_e32 v55, v55, v57
	v_mad_f32 v55, -v56, s2, v55
	v_mul_f32_e32 v58, 0xb3a22168, v56
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v58, s2, v53
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v58, s3, v53
	v_mac_f32_e32 v58, s2, v54
	v_mac_f32_e32 v58, s3, v54
	v_cvt_i32_f32_e32 v54, v56
	v_sub_f32_e32 v53, v55, v58
	v_add_f32_e32 v53, v57, v53
	v_mac_f32_e32 v53, 0xa7c234c4, v56
BB1_80:                                 ; %_Z3sinf.exit11
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fb921fb
	s_mov_b32 s0, 0x54442d18
	v_mul_f64 v[55:56], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr57
                                        ; implicit-def: $vgpr58
	v_cvt_f32_f64_e32 v55, v[55:56]
	v_and_b32_e32 v56, s0, v55
	v_and_b32_e32 v59, s0, v55
	v_cmp_nlt_f32_e64 s[0:1], |v55|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_82
	s_cbranch_execz BB1_82
BB1_81:
	v_and_b32_e32 v58, 0x7fffff, v55
	v_or_b32_e32 v58, 0x800000, v58
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v60, v58, s4
	v_mul_lo_u32 v61, v58, s5
	v_mul_hi_u32 v63, v58, s5
	v_mul_lo_u32 v62, v58, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v60, vcc, v61, v60
	v_mul_lo_u32 v64, v58, s4
	v_cndmask_b32_e64 v61, 0, 1, vcc
	v_add_u32_e32 v61, vcc, v61, v63
	v_mul_hi_u32 v63, v58, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v61, vcc, v61, v64
	v_mul_lo_u32 v65, v58, s4
	v_cndmask_b32_e64 v64, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v64, v63
	v_mul_hi_u32 v64, v58, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_lo_u32 v66, v58, s4
	v_cndmask_b32_e64 v65, 0, 1, vcc
	v_add_u32_e32 v64, vcc, v65, v64
	v_mul_hi_u32 v65, v58, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v64, vcc, v64, v66
	v_mul_lo_u32 v67, v58, s4
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v58, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v68, v58, s4
	v_add_u32_e32 v65, vcc, v65, v67
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_mul_hi_u32 v58, v58, s4
	v_add_u32_e32 v66, vcc, v67, v66
	v_add_u32_e32 v66, vcc, v66, v68
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_lshrrev_b32_e32 v57, 23, v56
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v57, vcc, s4, v57
	v_add_u32_e32 v58, vcc, v67, v58
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v58, v58, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v61, v61, v60, vcc
	v_cndmask_b32_e32 v60, v60, v62, vcc
	v_cndmask_b32_e64 v62, 0, 32, vcc
	v_sub_u32_e32 v57, vcc, v57, v62
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v62, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v63, v63, v61, vcc
	v_cndmask_b32_e32 v60, v61, v60, vcc
	v_cndmask_b32_e64 v61, 0, 32, vcc
	v_cndmask_b32_e32 v58, v58, v66, vcc
	v_sub_u32_e32 v57, vcc, v57, v61
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e32 v58, v58, v62, vcc
	v_cndmask_b32_e32 v61, v62, v65, vcc
	v_cndmask_b32_e32 v62, v65, v64, vcc
	v_cndmask_b32_e32 v64, v64, v63, vcc
	v_cndmask_b32_e32 v60, v63, v60, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_sub_u32_e32 v57, vcc, v57, v63
	v_cmp_lt_u32_e32 vcc, 31, v57
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v58, v58, v61, vcc
	v_cndmask_b32_e32 v61, v61, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e32 v60, v64, v60, vcc
	v_sub_u32_e32 v57, vcc, v57, v63
	v_sub_u32_e32 v63, vcc, 32, v57
	v_alignbit_b32 v64, v58, v61, v63
	v_alignbit_b32 v65, v61, v62, v63
	v_cmp_ne_u32_e32 vcc, 0, v57
	v_cndmask_b32_e32 v58, v58, v64, vcc
	v_alignbit_b32 v63, v62, v60, v63
	v_cndmask_b32_e32 v57, v61, v65, vcc
	v_cndmask_b32_e32 v61, v62, v63, vcc
	v_alignbit_b32 v63, v58, v57, 30
	v_bfe_i32 v64, v58, 29, 1
	v_alignbit_b32 v57, v57, v61, 30
	v_alignbit_b32 v60, v61, v60, 30
	v_xor_b32_e32 v63, v64, v63
	v_xor_b32_e32 v57, v64, v57
	v_xor_b32_e32 v60, v64, v60
	v_ffbh_u32_e32 v64, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, 32, v64, vcc
	v_lshrrev_b32_e32 v62, 29, v58
	v_sub_u32_e32 v65, vcc, 31, v64
	v_alignbit_b32 v63, v63, v57, v65
	v_alignbit_b32 v57, v57, v60, v65
	v_lshlrev_b32_e32 v62, 31, v62
	v_lshlrev_b32_e32 v60, 23, v64
	v_lshrrev_b32_e32 v65, 9, v63
	v_sub_u32_e32 v60, vcc, v62, v60
	v_or_b32_e32 v60, v60, v65
	v_alignbit_b32 v63, v63, v57, 9
	v_add_u32_e32 v60, vcc, 0.5, v60
	v_ffbh_u32_e32 v65, v63
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v65, 32, v65, vcc
	v_sub_u32_e32 v66, vcc, 31, v65
	v_alignbit_b32 v57, v63, v57, v66
	v_add_u32_e32 v63, vcc, v65, v64
	v_lshlrev_b32_e32 v63, 23, v63
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v63, vcc, s4, v63
	v_or_b32_e32 v62, v63, v62
	v_lshrrev_b32_e32 v57, 9, v57
	v_or_b32_e32 v57, v62, v57
	v_and_b32_e32 v62, 0xbffff000, v60
	v_mul_f32_e32 v64, 0xbfc90fda, v60
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v64, s4, v62
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v63, v60, v62
	v_mac_f32_e32 v64, s5, v62
	v_mac_f32_e32 v64, s4, v63
	v_mul_f32_e32 v62, 0x33a22168, v60
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v64, s5, v63
	v_mac_f32_e32 v62, s4, v57
	v_add_f32_e32 v57, v64, v62
	v_bfe_u32 v61, v58, 29, 1
	v_lshrrev_b32_e32 v58, 30, v58
	v_mac_f32_e32 v57, s4, v60
	v_add_u32_e32 v58, vcc, v61, v58
BB1_82:                                 ; %Flow509
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_84
	s_cbranch_execz BB1_84
BB1_83:
	v_mul_f32_e32 v57, 0x3f22f983, v59
	v_rndne_f32_e32 v60, v57
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v57, 0xfffff000, v60
	v_mul_f32_e32 v61, s4, v60
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v61, v57, s5, -v61
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v62, -v60, s4, v59
	v_sub_f32_e32 v58, v60, v57
	v_mac_f32_e32 v61, s6, v57
	v_mac_f32_e32 v61, s5, v58
	v_sub_f32_e32 v63, v59, v62
	v_mad_f32 v63, -v60, s4, v63
	v_mac_f32_e32 v61, s6, v58
	v_sub_f32_e32 v61, v63, v61
	v_add_f32_e32 v61, v62, v61
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v62, -v60, s4, v61
	v_sub_f32_e32 v61, v61, v62
	v_mad_f32 v61, -v60, s4, v61
	v_mul_f32_e32 v63, 0xb3a22168, v60
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v63, s4, v57
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v63, s5, v57
	v_mac_f32_e32 v63, s4, v58
	v_mac_f32_e32 v63, s5, v58
	v_cvt_i32_f32_e32 v58, v60
	v_sub_f32_e32 v57, v61, v63
	v_add_f32_e32 v57, v62, v57
	v_mac_f32_e32 v57, 0xa7c234c4, v60
BB1_84:                                 ; %_Z3cosf.exit10
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr61
                                        ; implicit-def: $vgpr62
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_86
	s_cbranch_execz BB1_86
BB1_85:
	v_and_b32_e32 v61, 0x7fffff, v55
	v_or_b32_e32 v61, 0x800000, v61
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v62, v61, s2
	v_mul_lo_u32 v63, v61, s3
	v_mul_hi_u32 v65, v61, s3
	v_mul_lo_u32 v64, v61, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v62, vcc, v63, v62
	v_mul_lo_u32 v66, v61, s2
	v_cndmask_b32_e64 v63, 0, 1, vcc
	v_add_u32_e32 v63, vcc, v63, v65
	v_mul_hi_u32 v65, v61, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v63, vcc, v63, v66
	v_mul_lo_u32 v67, v61, s2
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_hi_u32 v66, v61, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v65, vcc, v65, v67
	v_mul_lo_u32 v68, v61, s2
	v_cndmask_b32_e64 v67, 0, 1, vcc
	v_add_u32_e32 v66, vcc, v67, v66
	v_mul_hi_u32 v67, v61, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v66, vcc, v66, v68
	v_mul_lo_u32 v69, v61, s2
	v_cndmask_b32_e64 v68, 0, 1, vcc
	v_add_u32_e32 v67, vcc, v68, v67
	v_mul_hi_u32 v68, v61, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v70, v61, s2
	v_add_u32_e32 v67, vcc, v67, v69
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_mul_hi_u32 v61, v61, s2
	v_add_u32_e32 v68, vcc, v69, v68
	v_add_u32_e32 v68, vcc, v68, v70
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_lshrrev_b32_e32 v60, 23, v56
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v60, vcc, s2, v60
	v_add_u32_e32 v61, vcc, v69, v61
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v61, v61, v68, vcc
	v_cndmask_b32_e32 v68, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v63, vcc
	v_cndmask_b32_e32 v63, v63, v62, vcc
	v_cndmask_b32_e32 v62, v62, v64, vcc
	v_cndmask_b32_e64 v64, 0, 32, vcc
	v_sub_u32_e32 v60, vcc, v60, v64
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v64, v68, v67, vcc
	v_cndmask_b32_e32 v67, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v63, vcc
	v_cndmask_b32_e32 v62, v63, v62, vcc
	v_cndmask_b32_e64 v63, 0, 32, vcc
	v_cndmask_b32_e32 v61, v61, v68, vcc
	v_sub_u32_e32 v60, vcc, v60, v63
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e32 v61, v61, v64, vcc
	v_cndmask_b32_e32 v63, v64, v67, vcc
	v_cndmask_b32_e32 v64, v67, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v62, v65, v62, vcc
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_sub_u32_e32 v60, vcc, v60, v65
	v_cmp_lt_u32_e32 vcc, 31, v60
	v_cndmask_b32_e64 v65, 0, 32, vcc
	v_cndmask_b32_e32 v61, v61, v63, vcc
	v_cndmask_b32_e32 v63, v63, v64, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e32 v62, v66, v62, vcc
	v_sub_u32_e32 v60, vcc, v60, v65
	v_sub_u32_e32 v65, vcc, 32, v60
	v_alignbit_b32 v66, v61, v63, v65
	v_cmp_ne_u32_e32 vcc, 0, v60
	v_alignbit_b32 v67, v63, v64, v65
	v_cndmask_b32_e32 v60, v61, v66, vcc
	v_alignbit_b32 v65, v64, v62, v65
	v_cndmask_b32_e32 v61, v63, v67, vcc
	v_cndmask_b32_e32 v63, v64, v65, vcc
	v_alignbit_b32 v65, v60, v61, 30
	v_bfe_i32 v66, v60, 29, 1
	v_alignbit_b32 v61, v61, v63, 30
	v_alignbit_b32 v62, v63, v62, 30
	v_xor_b32_e32 v65, v66, v65
	v_xor_b32_e32 v61, v66, v61
	v_xor_b32_e32 v62, v66, v62
	v_ffbh_u32_e32 v66, v65
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v66, 32, v66, vcc
	v_lshrrev_b32_e32 v64, 29, v60
	v_sub_u32_e32 v67, vcc, 31, v66
	v_alignbit_b32 v65, v65, v61, v67
	v_alignbit_b32 v61, v61, v62, v67
	v_lshlrev_b32_e32 v64, 31, v64
	v_lshlrev_b32_e32 v62, 23, v66
	v_lshrrev_b32_e32 v67, 9, v65
	v_sub_u32_e32 v62, vcc, v64, v62
	v_or_b32_e32 v62, v62, v67
	v_alignbit_b32 v65, v65, v61, 9
	v_add_u32_e32 v62, vcc, 0.5, v62
	v_ffbh_u32_e32 v67, v65
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v67, 32, v67, vcc
	v_sub_u32_e32 v68, vcc, 31, v67
	v_alignbit_b32 v61, v65, v61, v68
	v_add_u32_e32 v65, vcc, v67, v66
	v_lshlrev_b32_e32 v65, 23, v65
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v65, vcc, s2, v65
	v_or_b32_e32 v64, v65, v64
	v_lshrrev_b32_e32 v61, 9, v61
	v_or_b32_e32 v61, v64, v61
	v_and_b32_e32 v64, 0xbffff000, v62
	v_mul_f32_e32 v66, 0xbfc90fda, v62
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v66, s2, v64
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v65, v62, v64
	v_mac_f32_e32 v66, s3, v64
	v_mac_f32_e32 v66, s2, v65
	v_mul_f32_e32 v64, 0x33a22168, v62
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v66, s3, v65
	v_mac_f32_e32 v64, s2, v61
	v_add_f32_e32 v61, v66, v64
	v_bfe_u32 v63, v60, 29, 1
	v_lshrrev_b32_e32 v60, 30, v60
	v_mac_f32_e32 v61, s2, v62
	v_add_u32_e32 v62, vcc, v63, v60
BB1_86:                                 ; %Flow508
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_88
	s_cbranch_execz BB1_88
BB1_87:
	v_mul_f32_e32 v60, 0x3f22f983, v59
	v_rndne_f32_e32 v60, v60
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v61, 0xfffff000, v60
	v_mul_f32_e32 v63, s2, v60
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v63, v61, s3, -v63
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v64, -v60, s2, v59
	v_sub_f32_e32 v62, v60, v61
	v_mac_f32_e32 v63, s4, v61
	v_mac_f32_e32 v63, s3, v62
	v_sub_f32_e32 v59, v59, v64
	v_mad_f32 v59, -v60, s2, v59
	v_mac_f32_e32 v63, s4, v62
	v_sub_f32_e32 v59, v59, v63
	v_add_f32_e32 v59, v64, v59
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v63, -v60, s2, v59
	v_sub_f32_e32 v59, v59, v63
	v_mad_f32 v59, -v60, s2, v59
	v_mul_f32_e32 v64, 0xb3a22168, v60
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v64, s2, v61
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v64, s3, v61
	v_mac_f32_e32 v64, s2, v62
	v_mac_f32_e32 v64, s3, v62
	v_cvt_i32_f32_e32 v62, v60
	v_sub_f32_e32 v59, v59, v64
	v_add_f32_e32 v61, v63, v59
	v_mac_f32_e32 v61, 0xa7c234c4, v60
BB1_88:                                 ; %_Z3sinf.exit9
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fdf6a7a
	s_mov_b32 s0, 0x2955385e
	v_mul_f64 v[59:60], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr63
                                        ; implicit-def: $vgpr64
	v_cvt_f32_f64_e32 v59, v[59:60]
	v_and_b32_e32 v60, s0, v59
	v_and_b32_e32 v67, s0, v59
	v_cmp_nlt_f32_e64 s[0:1], |v59|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_90
	s_cbranch_execz BB1_90
BB1_89:
	v_and_b32_e32 v64, 0x7fffff, v59
	v_or_b32_e32 v64, 0x800000, v64
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v65, v64, s4
	v_mul_lo_u32 v66, v64, s5
	v_mul_hi_u32 v69, v64, s5
	v_mul_lo_u32 v68, v64, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v65, vcc, v66, v65
	v_mul_lo_u32 v70, v64, s4
	v_cndmask_b32_e64 v66, 0, 1, vcc
	v_add_u32_e32 v66, vcc, v66, v69
	v_mul_hi_u32 v69, v64, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v66, vcc, v66, v70
	v_mul_lo_u32 v71, v64, s4
	v_cndmask_b32_e64 v70, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v70, v69
	v_mul_hi_u32 v70, v64, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_lo_u32 v72, v64, s4
	v_cndmask_b32_e64 v71, 0, 1, vcc
	v_add_u32_e32 v70, vcc, v71, v70
	v_mul_hi_u32 v71, v64, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v70, vcc, v70, v72
	v_mul_lo_u32 v73, v64, s4
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v64, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v74, v64, s4
	v_add_u32_e32 v71, vcc, v71, v73
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_mul_hi_u32 v64, v64, s4
	v_add_u32_e32 v72, vcc, v73, v72
	v_add_u32_e32 v72, vcc, v72, v74
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_lshrrev_b32_e32 v63, 23, v60
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v63, vcc, s4, v63
	v_add_u32_e32 v64, vcc, v73, v64
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v64, v64, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v66, vcc
	v_cndmask_b32_e32 v66, v66, v65, vcc
	v_cndmask_b32_e32 v65, v65, v68, vcc
	v_cndmask_b32_e64 v68, 0, 32, vcc
	v_sub_u32_e32 v63, vcc, v63, v68
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v68, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v69, v69, v66, vcc
	v_cndmask_b32_e32 v65, v66, v65, vcc
	v_cndmask_b32_e64 v66, 0, 32, vcc
	v_cndmask_b32_e32 v64, v64, v72, vcc
	v_sub_u32_e32 v63, vcc, v63, v66
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e32 v64, v64, v68, vcc
	v_cndmask_b32_e32 v66, v68, v71, vcc
	v_cndmask_b32_e32 v68, v71, v70, vcc
	v_cndmask_b32_e32 v70, v70, v69, vcc
	v_cndmask_b32_e32 v65, v69, v65, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_sub_u32_e32 v63, vcc, v63, v69
	v_cmp_lt_u32_e32 vcc, 31, v63
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v64, v64, v66, vcc
	v_cndmask_b32_e32 v66, v66, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e32 v65, v70, v65, vcc
	v_sub_u32_e32 v63, vcc, v63, v69
	v_sub_u32_e32 v69, vcc, 32, v63
	v_alignbit_b32 v70, v64, v66, v69
	v_alignbit_b32 v71, v66, v68, v69
	v_cmp_ne_u32_e32 vcc, 0, v63
	v_cndmask_b32_e32 v64, v64, v70, vcc
	v_alignbit_b32 v69, v68, v65, v69
	v_cndmask_b32_e32 v63, v66, v71, vcc
	v_cndmask_b32_e32 v66, v68, v69, vcc
	v_alignbit_b32 v69, v64, v63, 30
	v_bfe_i32 v70, v64, 29, 1
	v_alignbit_b32 v63, v63, v66, 30
	v_alignbit_b32 v65, v66, v65, 30
	v_xor_b32_e32 v69, v70, v69
	v_xor_b32_e32 v63, v70, v63
	v_xor_b32_e32 v65, v70, v65
	v_ffbh_u32_e32 v70, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, 32, v70, vcc
	v_lshrrev_b32_e32 v68, 29, v64
	v_sub_u32_e32 v71, vcc, 31, v70
	v_alignbit_b32 v69, v69, v63, v71
	v_alignbit_b32 v63, v63, v65, v71
	v_lshlrev_b32_e32 v68, 31, v68
	v_lshlrev_b32_e32 v65, 23, v70
	v_lshrrev_b32_e32 v71, 9, v69
	v_sub_u32_e32 v65, vcc, v68, v65
	v_or_b32_e32 v65, v65, v71
	v_alignbit_b32 v69, v69, v63, 9
	v_add_u32_e32 v65, vcc, 0.5, v65
	v_ffbh_u32_e32 v71, v69
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v71, 32, v71, vcc
	v_sub_u32_e32 v72, vcc, 31, v71
	v_alignbit_b32 v63, v69, v63, v72
	v_add_u32_e32 v69, vcc, v71, v70
	v_lshlrev_b32_e32 v69, 23, v69
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v69, vcc, s4, v69
	v_or_b32_e32 v68, v69, v68
	v_lshrrev_b32_e32 v63, 9, v63
	v_or_b32_e32 v63, v68, v63
	v_and_b32_e32 v68, 0xbffff000, v65
	v_mul_f32_e32 v70, 0xbfc90fda, v65
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v70, s4, v68
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v69, v65, v68
	v_mac_f32_e32 v70, s5, v68
	v_mac_f32_e32 v70, s4, v69
	v_mul_f32_e32 v68, 0x33a22168, v65
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v70, s5, v69
	v_mac_f32_e32 v68, s4, v63
	v_add_f32_e32 v63, v70, v68
	v_bfe_u32 v66, v64, 29, 1
	v_lshrrev_b32_e32 v64, 30, v64
	v_mac_f32_e32 v63, s4, v65
	v_add_u32_e32 v64, vcc, v66, v64
BB1_90:                                 ; %Flow507
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_92
	s_cbranch_execz BB1_92
BB1_91:
	v_mul_f32_e32 v63, 0x3f22f983, v67
	v_rndne_f32_e32 v65, v63
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v63, 0xfffff000, v65
	v_mul_f32_e32 v66, s4, v65
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v66, v63, s5, -v66
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v68, -v65, s4, v67
	v_sub_f32_e32 v64, v65, v63
	v_mac_f32_e32 v66, s6, v63
	v_mac_f32_e32 v66, s5, v64
	v_sub_f32_e32 v69, v67, v68
	v_mad_f32 v69, -v65, s4, v69
	v_mac_f32_e32 v66, s6, v64
	v_sub_f32_e32 v66, v69, v66
	v_add_f32_e32 v66, v68, v66
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v68, -v65, s4, v66
	v_sub_f32_e32 v66, v66, v68
	v_mad_f32 v66, -v65, s4, v66
	v_mul_f32_e32 v69, 0xb3a22168, v65
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v69, s4, v63
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v69, s5, v63
	v_mac_f32_e32 v69, s4, v64
	v_mac_f32_e32 v69, s5, v64
	v_cvt_i32_f32_e32 v64, v65
	v_sub_f32_e32 v63, v66, v69
	v_add_f32_e32 v63, v68, v63
	v_mac_f32_e32 v63, 0xa7c234c4, v65
BB1_92:                                 ; %_Z3cosf.exit8
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr65
                                        ; implicit-def: $vgpr66
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_94
	s_cbranch_execz BB1_94
BB1_93:
	v_and_b32_e32 v66, 0x7fffff, v59
	v_or_b32_e32 v66, 0x800000, v66
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v68, v66, s2
	v_mul_lo_u32 v69, v66, s3
	v_mul_hi_u32 v71, v66, s3
	v_mul_lo_u32 v70, v66, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v68, vcc, v69, v68
	v_mul_lo_u32 v72, v66, s2
	v_cndmask_b32_e64 v69, 0, 1, vcc
	v_add_u32_e32 v69, vcc, v69, v71
	v_mul_hi_u32 v71, v66, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v69, vcc, v69, v72
	v_mul_lo_u32 v73, v66, s2
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_hi_u32 v72, v66, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v71, vcc, v71, v73
	v_mul_lo_u32 v74, v66, s2
	v_cndmask_b32_e64 v73, 0, 1, vcc
	v_add_u32_e32 v72, vcc, v73, v72
	v_mul_hi_u32 v73, v66, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v72, vcc, v72, v74
	v_mul_lo_u32 v75, v66, s2
	v_cndmask_b32_e64 v74, 0, 1, vcc
	v_add_u32_e32 v73, vcc, v74, v73
	v_mul_hi_u32 v74, v66, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v76, v66, s2
	v_add_u32_e32 v73, vcc, v73, v75
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_mul_hi_u32 v66, v66, s2
	v_add_u32_e32 v74, vcc, v75, v74
	v_add_u32_e32 v74, vcc, v74, v76
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_lshrrev_b32_e32 v65, 23, v60
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v65, vcc, s2, v65
	v_add_u32_e32 v66, vcc, v75, v66
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v66, v66, v74, vcc
	v_cndmask_b32_e32 v74, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v69, vcc
	v_cndmask_b32_e32 v69, v69, v68, vcc
	v_cndmask_b32_e32 v68, v68, v70, vcc
	v_cndmask_b32_e64 v70, 0, 32, vcc
	v_sub_u32_e32 v65, vcc, v65, v70
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v70, v74, v73, vcc
	v_cndmask_b32_e32 v73, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v69, vcc
	v_cndmask_b32_e32 v68, v69, v68, vcc
	v_cndmask_b32_e64 v69, 0, 32, vcc
	v_cndmask_b32_e32 v66, v66, v74, vcc
	v_sub_u32_e32 v65, vcc, v65, v69
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e32 v66, v66, v70, vcc
	v_cndmask_b32_e32 v69, v70, v73, vcc
	v_cndmask_b32_e32 v70, v73, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v68, v71, v68, vcc
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_sub_u32_e32 v65, vcc, v65, v71
	v_cmp_lt_u32_e32 vcc, 31, v65
	v_cndmask_b32_e64 v71, 0, 32, vcc
	v_cndmask_b32_e32 v66, v66, v69, vcc
	v_cndmask_b32_e32 v69, v69, v70, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e32 v68, v72, v68, vcc
	v_sub_u32_e32 v65, vcc, v65, v71
	v_sub_u32_e32 v71, vcc, 32, v65
	v_alignbit_b32 v72, v66, v69, v71
	v_alignbit_b32 v73, v69, v70, v71
	v_cmp_ne_u32_e32 vcc, 0, v65
	v_cndmask_b32_e32 v66, v66, v72, vcc
	v_alignbit_b32 v71, v70, v68, v71
	v_cndmask_b32_e32 v65, v69, v73, vcc
	v_cndmask_b32_e32 v69, v70, v71, vcc
	v_alignbit_b32 v71, v66, v65, 30
	v_bfe_i32 v72, v66, 29, 1
	v_alignbit_b32 v65, v65, v69, 30
	v_alignbit_b32 v68, v69, v68, 30
	v_xor_b32_e32 v71, v72, v71
	v_xor_b32_e32 v65, v72, v65
	v_xor_b32_e32 v68, v72, v68
	v_ffbh_u32_e32 v72, v71
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v72, 32, v72, vcc
	v_lshrrev_b32_e32 v70, 29, v66
	v_sub_u32_e32 v73, vcc, 31, v72
	v_alignbit_b32 v71, v71, v65, v73
	v_alignbit_b32 v65, v65, v68, v73
	v_lshlrev_b32_e32 v70, 31, v70
	v_lshlrev_b32_e32 v68, 23, v72
	v_lshrrev_b32_e32 v73, 9, v71
	v_sub_u32_e32 v68, vcc, v70, v68
	v_or_b32_e32 v68, v68, v73
	v_alignbit_b32 v71, v71, v65, 9
	v_add_u32_e32 v68, vcc, 0.5, v68
	v_ffbh_u32_e32 v73, v71
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v73, 32, v73, vcc
	v_sub_u32_e32 v74, vcc, 31, v73
	v_alignbit_b32 v65, v71, v65, v74
	v_add_u32_e32 v71, vcc, v73, v72
	v_lshlrev_b32_e32 v71, 23, v71
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v71, vcc, s2, v71
	v_or_b32_e32 v70, v71, v70
	v_lshrrev_b32_e32 v65, 9, v65
	v_or_b32_e32 v65, v70, v65
	v_and_b32_e32 v70, 0xbffff000, v68
	v_mul_f32_e32 v72, 0xbfc90fda, v68
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v72, s2, v70
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v71, v68, v70
	v_mac_f32_e32 v72, s3, v70
	v_mac_f32_e32 v72, s2, v71
	v_mul_f32_e32 v70, 0x33a22168, v68
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v72, s3, v71
	v_mac_f32_e32 v70, s2, v65
	v_add_f32_e32 v65, v72, v70
	v_bfe_u32 v69, v66, 29, 1
	v_lshrrev_b32_e32 v66, 30, v66
	v_mac_f32_e32 v65, s2, v68
	v_add_u32_e32 v66, vcc, v69, v66
BB1_94:                                 ; %Flow506
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_96
	s_cbranch_execz BB1_96
BB1_95:
	v_mul_f32_e32 v65, 0x3f22f983, v67
	v_rndne_f32_e32 v68, v65
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v65, 0xfffff000, v68
	v_mul_f32_e32 v69, s2, v68
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v69, v65, s3, -v69
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v70, -v68, s2, v67
	v_sub_f32_e32 v66, v68, v65
	v_mac_f32_e32 v69, s4, v65
	v_mac_f32_e32 v69, s3, v66
	v_sub_f32_e32 v67, v67, v70
	v_mad_f32 v67, -v68, s2, v67
	v_mac_f32_e32 v69, s4, v66
	v_sub_f32_e32 v67, v67, v69
	v_add_f32_e32 v67, v70, v67
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v69, -v68, s2, v67
	v_sub_f32_e32 v67, v67, v69
	v_mad_f32 v67, -v68, s2, v67
	v_mul_f32_e32 v70, 0xb3a22168, v68
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v70, s2, v65
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v70, s3, v65
	v_mac_f32_e32 v70, s2, v66
	v_mac_f32_e32 v70, s3, v66
	v_cvt_i32_f32_e32 v66, v68
	v_sub_f32_e32 v65, v67, v70
	v_add_f32_e32 v65, v69, v65
	v_mac_f32_e32 v65, 0xa7c234c4, v68
BB1_96:                                 ; %_Z3sinf.exit7
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fd2d97c
	s_mov_b32 s0, 0x7f3321d2
	v_mul_f64 v[67:68], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr69
                                        ; implicit-def: $vgpr70
	v_cvt_f32_f64_e32 v67, v[67:68]
	v_and_b32_e32 v68, s0, v67
	v_and_b32_e32 v73, s0, v67
	v_cmp_nlt_f32_e64 s[0:1], |v67|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_98
	s_cbranch_execz BB1_98
BB1_97:
	v_and_b32_e32 v70, 0x7fffff, v67
	v_or_b32_e32 v70, 0x800000, v70
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v71, v70, s4
	v_mul_lo_u32 v72, v70, s5
	v_mul_hi_u32 v75, v70, s5
	v_mul_lo_u32 v74, v70, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v71, vcc, v72, v71
	v_mul_lo_u32 v76, v70, s4
	v_cndmask_b32_e64 v72, 0, 1, vcc
	v_add_u32_e32 v72, vcc, v72, v75
	v_mul_hi_u32 v75, v70, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v72, vcc, v72, v76
	v_mul_lo_u32 v77, v70, s4
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_hi_u32 v76, v70, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_lo_u32 v78, v70, s4
	v_cndmask_b32_e64 v77, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v77, v76
	v_mul_hi_u32 v77, v70, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v76, vcc, v76, v78
	v_mul_lo_u32 v79, v70, s4
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v70, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v80, v70, s4
	v_add_u32_e32 v77, vcc, v77, v79
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_mul_hi_u32 v70, v70, s4
	v_add_u32_e32 v78, vcc, v79, v78
	v_add_u32_e32 v78, vcc, v78, v80
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_lshrrev_b32_e32 v69, 23, v68
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v69, vcc, s4, v69
	v_add_u32_e32 v70, vcc, v79, v70
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v70, v70, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v72, vcc
	v_cndmask_b32_e32 v72, v72, v71, vcc
	v_cndmask_b32_e32 v71, v71, v74, vcc
	v_cndmask_b32_e64 v74, 0, 32, vcc
	v_sub_u32_e32 v69, vcc, v69, v74
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v74, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v72, vcc
	v_cndmask_b32_e32 v71, v72, v71, vcc
	v_cndmask_b32_e64 v72, 0, 32, vcc
	v_cndmask_b32_e32 v70, v70, v78, vcc
	v_sub_u32_e32 v69, vcc, v69, v72
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e32 v70, v70, v74, vcc
	v_cndmask_b32_e32 v72, v74, v77, vcc
	v_cndmask_b32_e32 v74, v77, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v71, v75, v71, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_sub_u32_e32 v69, vcc, v69, v75
	v_cmp_lt_u32_e32 vcc, 31, v69
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v70, v70, v72, vcc
	v_cndmask_b32_e32 v72, v72, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v71, v76, v71, vcc
	v_sub_u32_e32 v69, vcc, v69, v75
	v_sub_u32_e32 v75, vcc, 32, v69
	v_alignbit_b32 v76, v70, v72, v75
	v_alignbit_b32 v77, v72, v74, v75
	v_cmp_ne_u32_e32 vcc, 0, v69
	v_cndmask_b32_e32 v70, v70, v76, vcc
	v_alignbit_b32 v75, v74, v71, v75
	v_cndmask_b32_e32 v69, v72, v77, vcc
	v_cndmask_b32_e32 v72, v74, v75, vcc
	v_alignbit_b32 v75, v70, v69, 30
	v_bfe_i32 v76, v70, 29, 1
	v_alignbit_b32 v69, v69, v72, 30
	v_alignbit_b32 v71, v72, v71, 30
	v_xor_b32_e32 v75, v76, v75
	v_xor_b32_e32 v69, v76, v69
	v_xor_b32_e32 v71, v76, v71
	v_ffbh_u32_e32 v76, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, 32, v76, vcc
	v_lshrrev_b32_e32 v74, 29, v70
	v_sub_u32_e32 v77, vcc, 31, v76
	v_alignbit_b32 v75, v75, v69, v77
	v_alignbit_b32 v69, v69, v71, v77
	v_lshlrev_b32_e32 v74, 31, v74
	v_lshlrev_b32_e32 v71, 23, v76
	v_lshrrev_b32_e32 v77, 9, v75
	v_sub_u32_e32 v71, vcc, v74, v71
	v_or_b32_e32 v71, v71, v77
	v_alignbit_b32 v75, v75, v69, 9
	v_add_u32_e32 v71, vcc, 0.5, v71
	v_ffbh_u32_e32 v77, v75
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v77, 32, v77, vcc
	v_sub_u32_e32 v78, vcc, 31, v77
	v_alignbit_b32 v69, v75, v69, v78
	v_add_u32_e32 v75, vcc, v77, v76
	v_lshlrev_b32_e32 v75, 23, v75
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v75, vcc, s4, v75
	v_or_b32_e32 v74, v75, v74
	v_lshrrev_b32_e32 v69, 9, v69
	v_or_b32_e32 v69, v74, v69
	v_and_b32_e32 v74, 0xbffff000, v71
	v_mul_f32_e32 v76, 0xbfc90fda, v71
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v76, s4, v74
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v75, v71, v74
	v_mac_f32_e32 v76, s5, v74
	v_mac_f32_e32 v76, s4, v75
	v_mul_f32_e32 v74, 0x33a22168, v71
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v76, s5, v75
	v_mac_f32_e32 v74, s4, v69
	v_add_f32_e32 v69, v76, v74
	v_bfe_u32 v72, v70, 29, 1
	v_lshrrev_b32_e32 v70, 30, v70
	v_mac_f32_e32 v69, s4, v71
	v_add_u32_e32 v70, vcc, v72, v70
BB1_98:                                 ; %Flow505
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_100
	s_cbranch_execz BB1_100
BB1_99:
	v_mul_f32_e32 v69, 0x3f22f983, v73
	v_rndne_f32_e32 v71, v69
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v69, 0xfffff000, v71
	v_mul_f32_e32 v72, s4, v71
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v72, v69, s5, -v72
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v74, -v71, s4, v73
	v_sub_f32_e32 v70, v71, v69
	v_mac_f32_e32 v72, s6, v69
	v_mac_f32_e32 v72, s5, v70
	v_sub_f32_e32 v75, v73, v74
	v_mad_f32 v75, -v71, s4, v75
	v_mac_f32_e32 v72, s6, v70
	v_sub_f32_e32 v72, v75, v72
	v_add_f32_e32 v72, v74, v72
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v74, -v71, s4, v72
	v_sub_f32_e32 v72, v72, v74
	v_mad_f32 v72, -v71, s4, v72
	v_mul_f32_e32 v75, 0xb3a22168, v71
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v75, s4, v69
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v75, s5, v69
	v_mac_f32_e32 v75, s4, v70
	v_mac_f32_e32 v75, s5, v70
	v_cvt_i32_f32_e32 v70, v71
	v_sub_f32_e32 v69, v72, v75
	v_add_f32_e32 v69, v74, v69
	v_mac_f32_e32 v69, 0xa7c234c4, v71
BB1_100:                                ; %_Z3cosf.exit6
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr71
                                        ; implicit-def: $vgpr72
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_102
	s_cbranch_execz BB1_102
BB1_101:
	v_and_b32_e32 v72, 0x7fffff, v67
	v_or_b32_e32 v72, 0x800000, v72
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v74, v72, s2
	v_mul_lo_u32 v75, v72, s3
	v_mul_hi_u32 v77, v72, s3
	v_mul_lo_u32 v76, v72, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v74, vcc, v75, v74
	v_mul_lo_u32 v78, v72, s2
	v_cndmask_b32_e64 v75, 0, 1, vcc
	v_add_u32_e32 v75, vcc, v75, v77
	v_mul_hi_u32 v77, v72, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v75, vcc, v75, v78
	v_mul_lo_u32 v79, v72, s2
	v_cndmask_b32_e64 v78, 0, 1, vcc
	v_add_u32_e32 v77, vcc, v78, v77
	v_mul_hi_u32 v78, v72, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v77, vcc, v77, v79
	v_mul_lo_u32 v80, v72, s2
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_hi_u32 v79, v72, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v78, vcc, v78, v80
	v_mul_lo_u32 v81, v72, s2
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v72, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v82, v72, s2
	v_add_u32_e32 v79, vcc, v79, v81
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_mul_hi_u32 v72, v72, s2
	v_add_u32_e32 v80, vcc, v81, v80
	v_add_u32_e32 v80, vcc, v80, v82
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_lshrrev_b32_e32 v71, 23, v68
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v71, vcc, s2, v71
	v_add_u32_e32 v72, vcc, v81, v72
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v72, v72, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v75, v75, v74, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_sub_u32_e32 v71, vcc, v71, v76
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v76, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v77, v77, v75, vcc
	v_cndmask_b32_e32 v74, v75, v74, vcc
	v_cndmask_b32_e64 v75, 0, 32, vcc
	v_cndmask_b32_e32 v72, v72, v80, vcc
	v_sub_u32_e32 v71, vcc, v71, v75
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e32 v72, v72, v76, vcc
	v_cndmask_b32_e32 v75, v76, v79, vcc
	v_cndmask_b32_e32 v76, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v77, vcc
	v_cndmask_b32_e32 v74, v77, v74, vcc
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_sub_u32_e32 v71, vcc, v71, v77
	v_cmp_lt_u32_e32 vcc, 31, v71
	v_cndmask_b32_e64 v77, 0, 32, vcc
	v_cndmask_b32_e32 v72, v72, v75, vcc
	v_cndmask_b32_e32 v75, v75, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v74, v78, v74, vcc
	v_sub_u32_e32 v71, vcc, v71, v77
	v_sub_u32_e32 v77, vcc, 32, v71
	v_alignbit_b32 v78, v72, v75, v77
	v_alignbit_b32 v79, v75, v76, v77
	v_cmp_ne_u32_e32 vcc, 0, v71
	v_cndmask_b32_e32 v72, v72, v78, vcc
	v_alignbit_b32 v77, v76, v74, v77
	v_cndmask_b32_e32 v71, v75, v79, vcc
	v_cndmask_b32_e32 v75, v76, v77, vcc
	v_alignbit_b32 v77, v72, v71, 30
	v_bfe_i32 v78, v72, 29, 1
	v_alignbit_b32 v71, v71, v75, 30
	v_alignbit_b32 v74, v75, v74, 30
	v_xor_b32_e32 v77, v78, v77
	v_xor_b32_e32 v71, v78, v71
	v_xor_b32_e32 v74, v78, v74
	v_ffbh_u32_e32 v78, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v78, 32, v78, vcc
	v_lshrrev_b32_e32 v76, 29, v72
	v_sub_u32_e32 v79, vcc, 31, v78
	v_alignbit_b32 v77, v77, v71, v79
	v_alignbit_b32 v71, v71, v74, v79
	v_lshlrev_b32_e32 v76, 31, v76
	v_lshlrev_b32_e32 v74, 23, v78
	v_lshrrev_b32_e32 v79, 9, v77
	v_sub_u32_e32 v74, vcc, v76, v74
	v_or_b32_e32 v74, v74, v79
	v_alignbit_b32 v77, v77, v71, 9
	v_add_u32_e32 v74, vcc, 0.5, v74
	v_ffbh_u32_e32 v79, v77
	v_cmp_ne_u32_e32 vcc, 0, v77
	v_cndmask_b32_e32 v79, 32, v79, vcc
	v_sub_u32_e32 v80, vcc, 31, v79
	v_alignbit_b32 v71, v77, v71, v80
	v_add_u32_e32 v77, vcc, v79, v78
	v_lshlrev_b32_e32 v77, 23, v77
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v77, vcc, s2, v77
	v_or_b32_e32 v76, v77, v76
	v_lshrrev_b32_e32 v71, 9, v71
	v_or_b32_e32 v71, v76, v71
	v_and_b32_e32 v76, 0xbffff000, v74
	v_mul_f32_e32 v78, 0xbfc90fda, v74
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v78, s2, v76
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v77, v74, v76
	v_mac_f32_e32 v78, s3, v76
	v_mac_f32_e32 v78, s2, v77
	v_mul_f32_e32 v76, 0x33a22168, v74
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v78, s3, v77
	v_mac_f32_e32 v76, s2, v71
	v_add_f32_e32 v71, v78, v76
	v_bfe_u32 v75, v72, 29, 1
	v_lshrrev_b32_e32 v72, 30, v72
	v_mac_f32_e32 v71, s2, v74
	v_add_u32_e32 v72, vcc, v75, v72
BB1_102:                                ; %Flow504
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_104
	s_cbranch_execz BB1_104
BB1_103:
	v_mul_f32_e32 v71, 0x3f22f983, v73
	v_rndne_f32_e32 v74, v71
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v71, 0xfffff000, v74
	v_mul_f32_e32 v75, s2, v74
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v75, v71, s3, -v75
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v76, -v74, s2, v73
	v_sub_f32_e32 v72, v74, v71
	v_mac_f32_e32 v75, s4, v71
	v_mac_f32_e32 v75, s3, v72
	v_sub_f32_e32 v73, v73, v76
	v_mad_f32 v73, -v74, s2, v73
	v_mac_f32_e32 v75, s4, v72
	v_sub_f32_e32 v73, v73, v75
	v_add_f32_e32 v73, v76, v73
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v75, -v74, s2, v73
	v_sub_f32_e32 v73, v73, v75
	v_mad_f32 v73, -v74, s2, v73
	v_mul_f32_e32 v76, 0xb3a22168, v74
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v76, s2, v71
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v76, s3, v71
	v_mac_f32_e32 v76, s2, v72
	v_mac_f32_e32 v76, s3, v72
	v_cvt_i32_f32_e32 v72, v74
	v_sub_f32_e32 v71, v73, v76
	v_add_f32_e32 v71, v75, v71
	v_mac_f32_e32 v71, 0xa7c234c4, v74
BB1_104:                                ; %_Z3sinf.exit5
	s_or_b64 exec, exec, s[0:1]
	s_mov_b32 s1, 0x3fe5fdbb
	s_mov_b32 s0, 0xe9bba775
	v_mul_f64 v[45:46], v[45:46], s[0:1]
	s_brev_b32 s0, -2
	s_brev_b32 s1, 18
                                        ; implicit-def: $vgpr73
                                        ; implicit-def: $vgpr74
	v_cvt_f32_f64_e32 v45, v[45:46]
	v_and_b32_e32 v46, s0, v45
	v_and_b32_e32 v77, s0, v45
	v_cmp_nlt_f32_e64 s[0:1], |v45|, s1
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[2:3], exec, s[2:3]
	; mask branch BB1_106
	s_cbranch_execz BB1_106
BB1_105:
	v_and_b32_e32 v74, 0x7fffff, v45
	v_or_b32_e32 v74, 0x800000, v74
	s_mov_b32 s4, 0xfe5163ab
	s_mov_b32 s5, 0x3c439041
	v_mul_hi_u32 v75, v74, s4
	v_mul_lo_u32 v76, v74, s5
	v_mul_hi_u32 v79, v74, s5
	v_mul_lo_u32 v78, v74, s4
	s_mov_b32 s4, 0xdb629599
	v_add_u32_e32 v75, vcc, v76, v75
	v_mul_lo_u32 v80, v74, s4
	v_cndmask_b32_e64 v76, 0, 1, vcc
	v_add_u32_e32 v76, vcc, v76, v79
	v_mul_hi_u32 v79, v74, s4
	s_mov_b32 s4, 0xf534ddc0
	v_add_u32_e32 v76, vcc, v76, v80
	v_mul_lo_u32 v81, v74, s4
	v_cndmask_b32_e64 v80, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v80, v79
	v_mul_hi_u32 v80, v74, s4
	s_mov_b32 s4, 0xfc2757d1
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_lo_u32 v82, v74, s4
	v_cndmask_b32_e64 v81, 0, 1, vcc
	v_add_u32_e32 v80, vcc, v81, v80
	v_mul_hi_u32 v81, v74, s4
	s_mov_b32 s4, 0x4e441529
	v_add_u32_e32 v80, vcc, v80, v82
	v_mul_lo_u32 v83, v74, s4
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v74, s4
	s_mov_b32 s4, 0xa2f9836e
	v_mul_lo_u32 v84, v74, s4
	v_add_u32_e32 v81, vcc, v81, v83
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_mul_hi_u32 v74, v74, s4
	v_add_u32_e32 v82, vcc, v83, v82
	v_add_u32_e32 v82, vcc, v82, v84
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_lshrrev_b32_e32 v73, 23, v46
	s_movk_i32 s4, 0xff88
	v_add_u32_e32 v73, vcc, s4, v73
	v_add_u32_e32 v74, vcc, v83, v74
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v74, v74, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v76, vcc
	v_cndmask_b32_e32 v76, v76, v75, vcc
	v_cndmask_b32_e32 v75, v75, v78, vcc
	v_cndmask_b32_e64 v78, 0, 32, vcc
	v_sub_u32_e32 v73, vcc, v73, v78
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v78, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v79, v79, v76, vcc
	v_cndmask_b32_e32 v75, v76, v75, vcc
	v_cndmask_b32_e64 v76, 0, 32, vcc
	v_cndmask_b32_e32 v74, v74, v82, vcc
	v_sub_u32_e32 v73, vcc, v73, v76
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e32 v74, v74, v78, vcc
	v_cndmask_b32_e32 v76, v78, v81, vcc
	v_cndmask_b32_e32 v78, v81, v80, vcc
	v_cndmask_b32_e32 v80, v80, v79, vcc
	v_cndmask_b32_e32 v75, v79, v75, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_sub_u32_e32 v73, vcc, v73, v79
	v_cmp_lt_u32_e32 vcc, 31, v73
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v74, v74, v76, vcc
	v_cndmask_b32_e32 v76, v76, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e32 v75, v80, v75, vcc
	v_sub_u32_e32 v73, vcc, v73, v79
	v_sub_u32_e32 v79, vcc, 32, v73
	v_alignbit_b32 v80, v74, v76, v79
	v_alignbit_b32 v81, v76, v78, v79
	v_cmp_ne_u32_e32 vcc, 0, v73
	v_cndmask_b32_e32 v74, v74, v80, vcc
	v_alignbit_b32 v79, v78, v75, v79
	v_cndmask_b32_e32 v73, v76, v81, vcc
	v_cndmask_b32_e32 v76, v78, v79, vcc
	v_alignbit_b32 v79, v74, v73, 30
	v_bfe_i32 v80, v74, 29, 1
	v_alignbit_b32 v73, v73, v76, 30
	v_alignbit_b32 v75, v76, v75, 30
	v_xor_b32_e32 v79, v80, v79
	v_xor_b32_e32 v73, v80, v73
	v_xor_b32_e32 v75, v80, v75
	v_ffbh_u32_e32 v80, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v80, 32, v80, vcc
	v_lshrrev_b32_e32 v78, 29, v74
	v_sub_u32_e32 v81, vcc, 31, v80
	v_alignbit_b32 v79, v79, v73, v81
	v_alignbit_b32 v73, v73, v75, v81
	v_lshlrev_b32_e32 v78, 31, v78
	v_lshlrev_b32_e32 v75, 23, v80
	v_lshrrev_b32_e32 v81, 9, v79
	v_sub_u32_e32 v75, vcc, v78, v75
	v_or_b32_e32 v75, v75, v81
	v_alignbit_b32 v79, v79, v73, 9
	v_add_u32_e32 v75, vcc, 0.5, v75
	v_ffbh_u32_e32 v81, v79
	v_cmp_ne_u32_e32 vcc, 0, v79
	v_cndmask_b32_e32 v81, 32, v81, vcc
	v_sub_u32_e32 v82, vcc, 31, v81
	v_alignbit_b32 v73, v79, v73, v82
	v_add_u32_e32 v79, vcc, v81, v80
	v_lshlrev_b32_e32 v79, 23, v79
	s_mov_b32 s4, 0x33000000
	v_sub_u32_e32 v79, vcc, s4, v79
	v_or_b32_e32 v78, v79, v78
	v_lshrrev_b32_e32 v73, 9, v73
	v_or_b32_e32 v73, v78, v73
	v_and_b32_e32 v78, 0xbffff000, v75
	v_mul_f32_e32 v80, 0xbfc90fda, v75
	s_mov_b32 s4, 0x3fc90000
	v_mac_f32_e32 v80, s4, v78
	s_mov_b32 s5, 0x39fda000
	v_sub_f32_e32 v79, v75, v78
	v_mac_f32_e32 v80, s5, v78
	v_mac_f32_e32 v80, s4, v79
	v_mul_f32_e32 v78, 0x33a22168, v75
	s_mov_b32 s4, 0x3fc90fda
	v_mac_f32_e32 v80, s5, v79
	v_mac_f32_e32 v78, s4, v73
	v_add_f32_e32 v73, v80, v78
	v_bfe_u32 v76, v74, 29, 1
	v_lshrrev_b32_e32 v74, 30, v74
	v_mac_f32_e32 v73, s4, v75
	v_add_u32_e32 v74, vcc, v76, v74
BB1_106:                                ; %Flow503
	s_or_saveexec_b64 s[2:3], s[2:3]
	s_xor_b64 exec, exec, s[2:3]
	; mask branch BB1_108
	s_cbranch_execz BB1_108
BB1_107:
	v_mul_f32_e32 v73, 0x3f22f983, v77
	v_rndne_f32_e32 v75, v73
	s_mov_b32 s4, 0x3fc90fda
	v_and_b32_e32 v73, 0xfffff000, v75
	v_mul_f32_e32 v76, s4, v75
	s_mov_b32 s5, 0x3fc90000
	v_mad_f32 v76, v73, s5, -v76
	s_mov_b32 s6, 0x39fda000
	v_mad_f32 v78, -v75, s4, v77
	v_sub_f32_e32 v74, v75, v73
	v_mac_f32_e32 v76, s6, v73
	v_mac_f32_e32 v76, s5, v74
	v_sub_f32_e32 v79, v77, v78
	v_mad_f32 v79, -v75, s4, v79
	v_mac_f32_e32 v76, s6, v74
	v_sub_f32_e32 v76, v79, v76
	v_add_f32_e32 v76, v78, v76
	s_mov_b32 s4, 0x33a22168
	v_mad_f32 v78, -v75, s4, v76
	v_sub_f32_e32 v76, v76, v78
	v_mad_f32 v76, -v75, s4, v76
	v_mul_f32_e32 v79, 0xb3a22168, v75
	s_mov_b32 s4, 0x33a22000
	v_mac_f32_e32 v79, s4, v73
	s_mov_b32 s5, 0x2c340000
	v_mac_f32_e32 v79, s5, v73
	v_mac_f32_e32 v79, s4, v74
	v_mac_f32_e32 v79, s5, v74
	v_cvt_i32_f32_e32 v74, v75
	v_sub_f32_e32 v73, v76, v79
	v_add_f32_e32 v73, v78, v73
	v_mac_f32_e32 v73, 0xa7c234c4, v75
BB1_108:                                ; %_Z3cosf.exit
	s_or_b64 exec, exec, s[2:3]
                                        ; implicit-def: $vgpr75
                                        ; implicit-def: $vgpr76
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_xor_b64 s[0:1], exec, s[2:3]
	; mask branch BB1_110
	s_cbranch_execz BB1_110
BB1_109:
	v_and_b32_e32 v76, 0x7fffff, v45
	v_or_b32_e32 v76, 0x800000, v76
	s_mov_b32 s2, 0xfe5163ab
	s_mov_b32 s3, 0x3c439041
	v_mul_hi_u32 v78, v76, s2
	v_mul_lo_u32 v79, v76, s3
	v_mul_hi_u32 v81, v76, s3
	v_mul_lo_u32 v80, v76, s2
	s_mov_b32 s2, 0xdb629599
	v_add_u32_e32 v78, vcc, v79, v78
	v_mul_lo_u32 v82, v76, s2
	v_cndmask_b32_e64 v79, 0, 1, vcc
	v_add_u32_e32 v79, vcc, v79, v81
	v_mul_hi_u32 v81, v76, s2
	s_mov_b32 s2, 0xf534ddc0
	v_add_u32_e32 v79, vcc, v79, v82
	v_mul_lo_u32 v83, v76, s2
	v_cndmask_b32_e64 v82, 0, 1, vcc
	v_add_u32_e32 v81, vcc, v82, v81
	v_mul_hi_u32 v82, v76, s2
	s_mov_b32 s2, 0xfc2757d1
	v_add_u32_e32 v81, vcc, v81, v83
	v_mul_lo_u32 v84, v76, s2
	v_cndmask_b32_e64 v83, 0, 1, vcc
	v_add_u32_e32 v82, vcc, v83, v82
	v_mul_hi_u32 v83, v76, s2
	s_mov_b32 s2, 0x4e441529
	v_add_u32_e32 v82, vcc, v82, v84
	v_mul_lo_u32 v85, v76, s2
	v_cndmask_b32_e64 v84, 0, 1, vcc
	v_add_u32_e32 v83, vcc, v84, v83
	v_mul_hi_u32 v84, v76, s2
	s_mov_b32 s2, 0xa2f9836e
	v_mul_lo_u32 v86, v76, s2
	v_add_u32_e32 v83, vcc, v83, v85
	v_cndmask_b32_e64 v85, 0, 1, vcc
	v_mul_hi_u32 v76, v76, s2
	v_add_u32_e32 v84, vcc, v85, v84
	v_add_u32_e32 v84, vcc, v84, v86
	v_cndmask_b32_e64 v85, 0, 1, vcc
	v_lshrrev_b32_e32 v75, 23, v46
	s_movk_i32 s2, 0xff88
	v_add_u32_e32 v75, vcc, s2, v75
	v_add_u32_e32 v76, vcc, v85, v76
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v76, v76, v84, vcc
	v_cndmask_b32_e32 v84, v84, v83, vcc
	v_cndmask_b32_e32 v83, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v79, vcc
	v_cndmask_b32_e32 v79, v79, v78, vcc
	v_cndmask_b32_e32 v78, v78, v80, vcc
	v_cndmask_b32_e64 v80, 0, 32, vcc
	v_sub_u32_e32 v75, vcc, v75, v80
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v80, v84, v83, vcc
	v_cndmask_b32_e32 v83, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v81, v81, v79, vcc
	v_cndmask_b32_e32 v78, v79, v78, vcc
	v_cndmask_b32_e64 v79, 0, 32, vcc
	v_cndmask_b32_e32 v76, v76, v84, vcc
	v_sub_u32_e32 v75, vcc, v75, v79
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e32 v76, v76, v80, vcc
	v_cndmask_b32_e32 v79, v80, v83, vcc
	v_cndmask_b32_e32 v80, v83, v82, vcc
	v_cndmask_b32_e32 v82, v82, v81, vcc
	v_cndmask_b32_e32 v78, v81, v78, vcc
	v_cndmask_b32_e64 v81, 0, 32, vcc
	v_sub_u32_e32 v75, vcc, v75, v81
	v_cmp_lt_u32_e32 vcc, 31, v75
	v_cndmask_b32_e64 v81, 0, 32, vcc
	v_cndmask_b32_e32 v76, v76, v79, vcc
	v_cndmask_b32_e32 v79, v79, v80, vcc
	v_cndmask_b32_e32 v80, v80, v82, vcc
	v_cndmask_b32_e32 v78, v82, v78, vcc
	v_sub_u32_e32 v75, vcc, v75, v81
	v_sub_u32_e32 v81, vcc, 32, v75
	v_alignbit_b32 v82, v76, v79, v81
	v_alignbit_b32 v83, v79, v80, v81
	v_cmp_ne_u32_e32 vcc, 0, v75
	v_cndmask_b32_e32 v76, v76, v82, vcc
	v_alignbit_b32 v81, v80, v78, v81
	v_cndmask_b32_e32 v75, v79, v83, vcc
	v_cndmask_b32_e32 v79, v80, v81, vcc
	v_alignbit_b32 v81, v76, v75, 30
	v_bfe_i32 v82, v76, 29, 1
	v_alignbit_b32 v75, v75, v79, 30
	v_alignbit_b32 v78, v79, v78, 30
	v_xor_b32_e32 v81, v82, v81
	v_xor_b32_e32 v75, v82, v75
	v_xor_b32_e32 v78, v82, v78
	v_ffbh_u32_e32 v82, v81
	v_cmp_ne_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v82, 32, v82, vcc
	v_lshrrev_b32_e32 v80, 29, v76
	v_sub_u32_e32 v83, vcc, 31, v82
	v_alignbit_b32 v81, v81, v75, v83
	v_alignbit_b32 v75, v75, v78, v83
	v_lshlrev_b32_e32 v80, 31, v80
	v_lshlrev_b32_e32 v78, 23, v82
	v_lshrrev_b32_e32 v83, 9, v81
	v_sub_u32_e32 v78, vcc, v80, v78
	v_or_b32_e32 v78, v78, v83
	v_alignbit_b32 v81, v81, v75, 9
	v_add_u32_e32 v78, vcc, 0.5, v78
	v_ffbh_u32_e32 v83, v81
	v_cmp_ne_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v83, 32, v83, vcc
	v_sub_u32_e32 v84, vcc, 31, v83
	v_alignbit_b32 v75, v81, v75, v84
	v_add_u32_e32 v81, vcc, v83, v82
	v_lshlrev_b32_e32 v81, 23, v81
	s_mov_b32 s2, 0x33000000
	v_sub_u32_e32 v81, vcc, s2, v81
	v_or_b32_e32 v80, v81, v80
	v_lshrrev_b32_e32 v75, 9, v75
	v_or_b32_e32 v75, v80, v75
	v_and_b32_e32 v80, 0xbffff000, v78
	v_mul_f32_e32 v82, 0xbfc90fda, v78
	s_mov_b32 s2, 0x3fc90000
	v_mac_f32_e32 v82, s2, v80
	s_mov_b32 s3, 0x39fda000
	v_sub_f32_e32 v81, v78, v80
	v_mac_f32_e32 v82, s3, v80
	v_mac_f32_e32 v82, s2, v81
	v_mul_f32_e32 v80, 0x33a22168, v78
	s_mov_b32 s2, 0x3fc90fda
	v_mac_f32_e32 v82, s3, v81
	v_mac_f32_e32 v80, s2, v75
	v_add_f32_e32 v75, v82, v80
	v_bfe_u32 v79, v76, 29, 1
	v_lshrrev_b32_e32 v76, 30, v76
	v_mac_f32_e32 v75, s2, v78
	v_add_u32_e32 v76, vcc, v79, v76
BB1_110:                                ; %Flow
	s_or_saveexec_b64 s[0:1], s[0:1]
	s_xor_b64 exec, exec, s[0:1]
	; mask branch BB1_112
	s_cbranch_execz BB1_112
BB1_111:
	v_mul_f32_e32 v75, 0x3f22f983, v77
	v_rndne_f32_e32 v78, v75
	s_mov_b32 s2, 0x3fc90fda
	v_and_b32_e32 v75, 0xfffff000, v78
	v_mul_f32_e32 v79, s2, v78
	s_mov_b32 s3, 0x3fc90000
	v_mad_f32 v79, v75, s3, -v79
	s_mov_b32 s4, 0x39fda000
	v_mad_f32 v80, -v78, s2, v77
	v_sub_f32_e32 v76, v78, v75
	v_mac_f32_e32 v79, s4, v75
	v_mac_f32_e32 v79, s3, v76
	v_sub_f32_e32 v77, v77, v80
	v_mad_f32 v77, -v78, s2, v77
	v_mac_f32_e32 v79, s4, v76
	v_sub_f32_e32 v77, v77, v79
	v_add_f32_e32 v77, v80, v77
	s_mov_b32 s2, 0x33a22168
	v_mad_f32 v79, -v78, s2, v77
	v_sub_f32_e32 v77, v77, v79
	v_mad_f32 v77, -v78, s2, v77
	v_mul_f32_e32 v80, 0xb3a22168, v78
	s_mov_b32 s2, 0x33a22000
	v_mac_f32_e32 v80, s2, v75
	s_mov_b32 s3, 0x2c340000
	v_mac_f32_e32 v80, s3, v75
	v_mac_f32_e32 v80, s2, v76
	v_mac_f32_e32 v80, s3, v76
	v_cvt_i32_f32_e32 v76, v78
	v_sub_f32_e32 v75, v77, v80
	v_add_f32_e32 v75, v79, v75
	v_mac_f32_e32 v75, 0xa7c234c4, v78
BB1_112:                                ; %_Z3sinf.exit
	s_or_b64 exec, exec, s[0:1]
	v_and_b32_e32 v0, 0xf8, v0
	v_mul_u32_u24_e32 v0, 9, v0
	v_or_b32_e32 v0, v0, v18
	v_add_f32_e32 v18, v27, v29
	v_sub_f32_e32 v27, v27, v29
	v_add_f32_e32 v29, v28, v30
	v_sub_f32_e32 v28, v28, v30
	v_add_f32_e32 v30, v35, v37
	v_sub_f32_e32 v35, v35, v37
	v_add_f32_e32 v37, v36, v38
	v_sub_f32_e32 v36, v36, v38
	v_add_f32_e32 v38, v23, v25
	v_sub_f32_e32 v23, v23, v25
	v_add_f32_e32 v25, v24, v26
	v_sub_f32_e32 v24, v24, v26
	v_add_f32_e32 v26, v31, v33
	v_sub_f32_e32 v31, v31, v33
	v_add_f32_e32 v33, v32, v34
	v_sub_f32_e32 v32, v32, v34
	v_sub_f32_e32 v34, v29, v25
	v_sub_f32_e32 v77, v37, v33
	v_mad_f32 v78, v34, 0, -v77
	v_mac_f32_e32 v34, 0, v77
	s_mov_b32 s4, 0xb94c1982
	v_mov_b32_e32 v77, 0x3c0881c4
	v_mul_f32_e32 v79, v47, v47
	v_mad_f32 v80, s4, v79, v77
	v_madak_f32 v80, v79, v80, 0xbe2aaa9d
	v_mul_f32_e32 v80, v79, v80
	v_mac_f32_e32 v47, v47, v80
	s_mov_b32 s3, 0x37d75334
	v_mov_b32_e32 v80, 0xbab64f3b
	v_mad_f32 v81, s3, v79, v80
	v_madak_f32 v81, v79, v81, 0x3d2aabf7
	v_madak_f32 v81, v79, v81, 0xbf000004
	v_mad_f32 v79, v79, v81, 1.0
	v_and_b32_e32 v81, 1, v48
	v_cmp_eq_u32_e32 vcc, 0, v81
	v_cndmask_b32_e64 v47, -v47, v79, vcc
	v_lshlrev_b32_e32 v48, 30, v48
	v_bfrev_b32_e32 v79, 1
	v_and_b32_e32 v48, v79, v48
	v_xor_b32_e32 v47, v48, v47
	v_mul_f32_e32 v48, v51, v51
	v_mad_f32 v81, s4, v48, v77
	v_madak_f32 v81, v48, v81, 0xbe2aaa9d
	v_mul_f32_e32 v81, v48, v81
	v_mac_f32_e32 v51, v51, v81
	v_mad_f32 v81, s3, v48, v80
	v_madak_f32 v81, v48, v81, 0x3d2aabf7
	v_madak_f32 v81, v48, v81, 0xbf000004
	v_mad_f32 v48, v48, v81, 1.0
	v_and_b32_e32 v81, 1, v52
	v_cmp_eq_u32_e32 vcc, 0, v81
	v_cndmask_b32_e32 v48, v48, v51, vcc
	v_lshlrev_b32_e32 v51, 30, v52
	v_xor_b32_e32 v41, v51, v41
	v_and_b32_e32 v41, v79, v41
	s_mov_b32 s2, 0x7f7fffff
	v_xor_b32_e32 v41, v41, v48
	v_sub_f32_e32 v51, v30, v26
	v_mov_b32_e32 v48, 0x7fc00000
	v_cmp_lt_u32_e32 vcc, s2, v42
	v_cndmask_b32_e32 v42, v47, v48, vcc
	v_sub_f32_e32 v47, v18, v38
	v_add_f32_e32 v81, v51, v34
	v_cndmask_b32_e32 v41, v41, v48, vcc
	v_add_f32_e32 v52, v47, v78
	v_mul_f32_e32 v82, v41, v81
	v_mad_f32 v82, v52, v42, -v82
	v_mul_f32_e32 v42, v81, v42
	v_mac_f32_e32 v42, v52, v41
	v_sub_f32_e32 v41, v28, v36
	v_add_f32_e32 v28, v28, v36
	v_mad_f32 v36, v23, 0, -v31
	v_mac_f32_e32 v23, 0, v31
	v_sub_f32_e64 v31, -v24, v32
	v_sub_f32_e32 v24, v24, v32
	v_mul_f32_e32 v32, v57, v57
	v_mad_f32 v52, s4, v32, v77
	v_madak_f32 v52, v32, v52, 0xbe2aaa9d
	v_mul_f32_e32 v52, v32, v52
	v_mac_f32_e32 v57, v57, v52
	v_mad_f32 v52, s3, v32, v80
	v_madak_f32 v52, v32, v52, 0x3d2aabf7
	v_madak_f32 v52, v32, v52, 0xbf000004
	v_mad_f32 v32, v32, v52, 1.0
	v_and_b32_e32 v52, 1, v58
	v_cmp_eq_u32_e32 vcc, 0, v52
	v_lshlrev_b32_e32 v52, 30, v58
	v_cndmask_b32_e64 v32, -v57, v32, vcc
	v_and_b32_e32 v52, v79, v52
	v_xor_b32_e32 v32, v52, v32
	v_mul_f32_e32 v52, v61, v61
	v_mad_f32 v57, s4, v52, v77
	v_madak_f32 v57, v52, v57, 0xbe2aaa9d
	v_mul_f32_e32 v57, v52, v57
	v_mac_f32_e32 v61, v61, v57
	v_mad_f32 v57, s3, v52, v80
	v_madak_f32 v57, v52, v57, 0x3d2aabf7
	v_madak_f32 v57, v52, v57, 0xbf000004
	s_mov_b32 s0, 0x3f3504f3
	v_mad_f32 v52, v52, v57, 1.0
	v_and_b32_e32 v57, 1, v62
	v_cmp_eq_u32_e32 vcc, 0, v57
	v_lshlrev_b32_e32 v57, 30, v62
	v_mul_f32_e32 v24, s0, v24
	v_mul_f32_e32 v31, s0, v31
	v_xor_b32_e32 v55, v57, v55
	v_mad_f32 v57, s0, v41, v31
	v_mad_f32 v58, s0, v28, v24
	v_mad_f32 v31, v41, s0, -v31
	v_mad_f32 v24, v28, s0, -v24
	v_mad_f32 v28, v31, 0, -v24
	v_mac_f32_e32 v31, 0, v24
	v_mul_f32_e32 v24, v69, v69
	v_cndmask_b32_e32 v52, v52, v61, vcc
	v_cmp_lt_u32_e32 vcc, s2, v56
	v_add_f32_e32 v56, v35, v23
	v_sub_f32_e32 v23, v35, v23
	v_mad_f32 v35, s4, v24, v77
	v_madak_f32 v35, v24, v35, 0xbe2aaa9d
	v_mul_f32_e32 v35, v24, v35
	v_mac_f32_e32 v69, v69, v35
	v_mad_f32 v35, s3, v24, v80
	v_madak_f32 v35, v24, v35, 0x3d2aabf7
	v_madak_f32 v35, v24, v35, 0xbf000004
	v_and_b32_e32 v55, v79, v55
	v_xor_b32_e32 v52, v55, v52
	v_mad_f32 v24, v24, v35, 1.0
	v_and_b32_e32 v35, 1, v70
	v_cndmask_b32_e32 v32, v32, v48, vcc
	v_cndmask_b32_e32 v52, v52, v48, vcc
	v_cmp_eq_u32_e32 vcc, 0, v35
	v_lshlrev_b32_e32 v35, 30, v70
	v_cndmask_b32_e64 v24, -v69, v24, vcc
	v_and_b32_e32 v35, v79, v35
	v_xor_b32_e32 v24, v35, v24
	v_mul_f32_e32 v35, v71, v71
	v_add_f32_e32 v55, v27, v36
	v_sub_f32_e32 v27, v27, v36
	v_mad_f32 v36, s4, v35, v77
	v_madak_f32 v36, v35, v36, 0xbe2aaa9d
	v_mul_f32_e32 v36, v35, v36
	v_mac_f32_e32 v71, v71, v36
	v_mad_f32 v36, s3, v35, v80
	v_madak_f32 v36, v35, v36, 0x3d2aabf7
	v_madak_f32 v36, v35, v36, 0xbf000004
	v_mad_f32 v35, v35, v36, 1.0
	v_and_b32_e32 v36, 1, v72
	v_cmp_eq_u32_e32 vcc, 0, v36
	v_lshlrev_b32_e32 v36, 30, v72
	v_xor_b32_e32 v36, v36, v67
	v_add_f32_e32 v62, v56, v58
	v_cndmask_b32_e32 v35, v35, v71, vcc
	v_and_b32_e32 v36, v79, v36
	v_xor_b32_e32 v35, v36, v35
	v_cmp_lt_u32_e32 vcc, s2, v68
	v_add_f32_e32 v61, v55, v57
	v_mul_f32_e32 v81, v52, v62
	v_mad_f32 v81, v61, v32, -v81
	v_mul_f32_e32 v32, v62, v32
	v_cndmask_b32_e32 v35, v35, v48, vcc
	v_add_f32_e32 v41, v23, v31
	v_mac_f32_e32 v32, v61, v52
	v_add_f32_e32 v36, v27, v28
	v_cndmask_b32_e32 v24, v24, v48, vcc
	v_mul_f32_e32 v52, v35, v41
	v_mul_f32_e32 v41, v41, v24
	v_mad_f32 v52, v36, v24, -v52
	v_add_f32_e32 v18, v18, v38
	v_add_f32_e32 v24, v29, v25
	v_add_f32_e32 v25, v18, v24
	v_sub_f32_e32 v29, v18, v24
	v_mul_f32_e32 v18, v21, v21
	v_mad_f32 v24, s4, v18, v77
	v_madak_f32 v24, v18, v24, 0xbe2aaa9d
	v_mul_f32_e32 v24, v18, v24
	v_mac_f32_e32 v21, v21, v24
	v_mad_f32 v24, s3, v18, v80
	v_madak_f32 v24, v18, v24, 0x3d2aabf7
	v_madak_f32 v24, v18, v24, 0xbf000004
	v_mad_f32 v18, v18, v24, 1.0
	v_and_b32_e32 v24, 1, v22
	v_cmp_eq_u32_e32 vcc, 0, v24
	v_cndmask_b32_e64 v18, -v21, v18, vcc
	v_lshlrev_b32_e32 v21, 30, v22
	v_and_b32_e32 v21, 0x80000000, v21
	v_xor_b32_e32 v18, v21, v18
	v_mul_f32_e32 v21, v39, v39
	v_mad_f32 v22, s4, v21, v77
	v_madak_f32 v22, v21, v22, 0xbe2aaa9d
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v39, v39, v22
	v_mad_f32 v22, s3, v21, v80
	v_madak_f32 v22, v21, v22, 0x3d2aabf7
	v_madak_f32 v22, v21, v22, 0xbf000004
	v_mad_f32 v21, v21, v22, 1.0
	v_and_b32_e32 v22, 1, v40
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v40
	v_xor_b32_e32 v20, v22, v20
	v_cndmask_b32_e32 v21, v21, v39, vcc
	v_and_b32_e32 v20, v79, v20
	v_xor_b32_e32 v20, v20, v21
	v_mul_f32_e32 v21, v63, v63
	v_mad_f32 v22, s4, v21, v77
	v_madak_f32 v22, v21, v22, 0xbe2aaa9d
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v63, v63, v22
	v_mad_f32 v22, s3, v21, v80
	v_madak_f32 v22, v21, v22, 0x3d2aabf7
	v_madak_f32 v22, v21, v22, 0xbf000004
	v_mad_f32 v21, v21, v22, 1.0
	v_and_b32_e32 v22, 1, v64
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v64
	v_cndmask_b32_e64 v21, -v63, v21, vcc
	v_and_b32_e32 v22, v79, v22
	v_xor_b32_e32 v21, v22, v21
	v_mul_f32_e32 v22, v65, v65
	v_mad_f32 v24, s4, v22, v77
	v_madak_f32 v24, v22, v24, 0xbe2aaa9d
	v_mul_f32_e32 v24, v22, v24
	v_mac_f32_e32 v65, v65, v24
	v_mad_f32 v24, s3, v22, v80
	v_madak_f32 v24, v22, v24, 0x3d2aabf7
	v_madak_f32 v24, v22, v24, 0xbf000004
	v_mad_f32 v22, v22, v24, 1.0
	v_and_b32_e32 v24, 1, v66
	v_cmp_eq_u32_e32 vcc, 0, v24
	v_lshlrev_b32_e32 v24, 30, v66
	v_xor_b32_e32 v24, v24, v59
	v_cndmask_b32_e32 v22, v22, v65, vcc
	v_and_b32_e32 v24, v79, v24
	v_cmp_lt_u32_e32 vcc, s2, v19
	v_mac_f32_e32 v41, v36, v35
	ds_write2_b32 v17, v25, v81 offset1:72
	ds_write2_b32 v17, v82, v52 offset0:144 offset1:216
	v_add_f32_e32 v25, v30, v26
	v_add_f32_e32 v26, v37, v33
	v_xor_b32_e32 v22, v24, v22
	v_cndmask_b32_e32 v35, v18, v48, vcc
	v_cndmask_b32_e32 v36, v20, v48, vcc
	v_cmp_lt_u32_e32 vcc, s2, v60
	v_sub_f32_e32 v37, v25, v26
	v_cndmask_b32_e32 v39, v22, v48, vcc
	v_sub_f32_e32 v33, v56, v58
	v_mul_f32_e32 v18, v36, v37
	s_movk_i32 s5, 0x480
	v_cndmask_b32_e32 v38, v21, v48, vcc
	v_sub_f32_e32 v30, v55, v57
	v_mul_f32_e32 v19, v39, v33
	v_mad_f32 v18, v29, v35, -v18
	v_mad_f32 v19, v30, v38, -v19
	v_add_u32_e32 v40, vcc, s5, v17
	ds_write2_b32 v40, v18, v19 offset1:72
	v_mul_f32_e32 v18, v49, v49
	v_mad_f32 v19, s4, v18, v77
	v_madak_f32 v19, v18, v19, 0xbe2aaa9d
	v_mul_f32_e32 v19, v18, v19
	v_mac_f32_e32 v49, v49, v19
	v_mad_f32 v19, s3, v18, v80
	v_madak_f32 v19, v18, v19, 0x3d2aabf7
	v_madak_f32 v19, v18, v19, 0xbf000004
	v_mad_f32 v18, v18, v19, 1.0
	v_and_b32_e32 v19, 1, v50
	v_cmp_eq_u32_e32 vcc, 0, v19
	v_lshlrev_b32_e32 v19, 30, v50
	v_cndmask_b32_e64 v18, -v49, v18, vcc
	v_and_b32_e32 v19, v79, v19
	v_xor_b32_e32 v18, v19, v18
	v_mul_f32_e32 v19, v53, v53
	v_mad_f32 v20, s4, v19, v77
	v_madak_f32 v20, v19, v20, 0xbe2aaa9d
	v_mul_f32_e32 v20, v19, v20
	v_mac_f32_e32 v53, v53, v20
	v_mad_f32 v20, s3, v19, v80
	v_madak_f32 v20, v19, v20, 0x3d2aabf7
	v_madak_f32 v20, v19, v20, 0xbf000004
	v_mad_f32 v19, v19, v20, 1.0
	v_and_b32_e32 v20, 1, v54
	v_cmp_eq_u32_e32 vcc, 0, v20
	v_lshlrev_b32_e32 v20, 30, v54
	v_xor_b32_e32 v20, v20, v44
	v_cndmask_b32_e32 v19, v19, v53, vcc
	v_and_b32_e32 v20, v79, v20
	v_xor_b32_e32 v19, v20, v19
	v_mul_f32_e32 v20, v73, v73
	v_mad_f32 v21, s4, v20, v77
	v_madak_f32 v21, v20, v21, 0xbe2aaa9d
	v_mul_f32_e32 v21, v20, v21
	v_mac_f32_e32 v73, v73, v21
	v_mad_f32 v21, s3, v20, v80
	v_madak_f32 v21, v20, v21, 0x3d2aabf7
	v_madak_f32 v21, v20, v21, 0xbf000004
	v_mad_f32 v20, v20, v21, 1.0
	v_and_b32_e32 v21, 1, v74
	v_cmp_eq_u32_e32 vcc, 0, v21
	v_lshlrev_b32_e32 v21, 30, v74
	v_cndmask_b32_e64 v20, -v73, v20, vcc
	v_and_b32_e32 v21, v79, v21
	v_xor_b32_e32 v20, v21, v20
	v_mul_f32_e32 v21, v75, v75
	v_mac_f32_e32 v77, s4, v21
	v_mov_b32_e32 v22, 0xbe2aaa9d
	v_mac_f32_e32 v22, v21, v77
	v_mul_f32_e32 v22, v21, v22
	v_mac_f32_e32 v75, v75, v22
	v_mac_f32_e32 v80, s3, v21
	v_mov_b32_e32 v22, 0x3d2aabf7
	v_sub_f32_e32 v27, v27, v28
	v_sub_f32_e32 v28, v23, v31
	v_mac_f32_e32 v22, v21, v80
	v_mov_b32_e32 v23, 0xbf000004
	v_mac_f32_e32 v23, v21, v22
	v_and_b32_e32 v22, 1, v76
	v_cmp_eq_u32_e32 vcc, 0, v22
	v_lshlrev_b32_e32 v22, 30, v76
	v_mad_f32 v21, v21, v23, 1.0
	v_xor_b32_e32 v22, v22, v45
	v_cndmask_b32_e32 v21, v21, v75, vcc
	v_cmp_lt_u32_e32 vcc, s2, v43
	v_and_b32_e32 v22, v79, v22
	v_xor_b32_e32 v21, v22, v21
	v_cndmask_b32_e32 v31, v18, v48, vcc
	v_cndmask_b32_e32 v43, v19, v48, vcc
	v_cmp_lt_u32_e32 vcc, s2, v46
	v_sub_f32_e32 v34, v51, v34
	v_cndmask_b32_e32 v45, v21, v48, vcc
	s_movk_i32 s1, 0x6c0
	v_cndmask_b32_e32 v44, v20, v48, vcc
	v_mul_f32_e32 v19, v45, v28
	v_sub_f32_e32 v47, v47, v78
	v_mul_f32_e32 v18, v43, v34
	v_add_u32_e32 v46, vcc, s1, v17
	v_mad_f32 v18, v47, v31, -v18
	v_mad_f32 v19, v27, v44, -v19
	v_add_f32_e32 v26, v25, v26
	v_lshlrev_b32_e32 v0, 2, v0
	ds_write2_b32 v46, v18, v19 offset1:72
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[18:19], v0 offset1:8
	ds_read2_b32 v[20:21], v0 offset0:16 offset1:24
	ds_read2_b32 v[22:23], v0 offset0:32 offset1:40
	ds_read2_b32 v[24:25], v0 offset0:48 offset1:56
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_write2_b32 v17, v26, v32 offset1:72
	ds_write2_b32 v17, v42, v41 offset0:144 offset1:216
	v_mul_f32_e32 v26, v33, v38
	v_mul_f32_e32 v17, v37, v35
	v_mac_f32_e32 v17, v29, v36
	v_mac_f32_e32 v26, v30, v39
	ds_write2_b32 v40, v17, v26 offset1:72
	v_mul_f32_e32 v17, v34, v31
	v_mul_f32_e32 v26, v28, v44
	v_mac_f32_e32 v17, v47, v43
	v_mac_f32_e32 v26, v27, v45
	ds_write2_b32 v46, v17, v26 offset1:72
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read2_b32 v[26:27], v0 offset1:8
	ds_read2_b32 v[28:29], v0 offset0:16 offset1:24
	ds_read2_b32 v[30:31], v0 offset0:32 offset1:40
	ds_read2_b32 v[32:33], v0 offset0:48 offset1:56
	v_add_f32_e32 v0, v18, v22
	v_add_f32_e32 v38, v20, v24
	v_add_f32_e32 v40, v21, v25
	v_add_f32_e32 v36, v19, v23
	s_waitcnt lgkmcnt(1)
	v_add_f32_e32 v17, v26, v30
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v39, v28, v32
	v_add_f32_e32 v37, v27, v31
	v_add_f32_e32 v41, v29, v33
	v_add_f32_e32 v42, v0, v38
	v_add_f32_e32 v44, v36, v40
	v_add_f32_e32 v43, v17, v39
	v_add_f32_e32 v45, v37, v41
	s_mov_b32 s1, 0x3b000000
	v_add_f32_e32 v34, v42, v44
	v_add_f32_e32 v35, v43, v45
	v_mul_f32_e32 v34, s1, v34
	v_mul_f32_e32 v35, s1, v35
	flat_store_dwordx2 v[11:12], v[34:35]
	v_sub_f32_e32 v11, v19, v23
	v_sub_f32_e32 v12, v27, v31
	v_sub_f32_e32 v21, v21, v25
	v_sub_f32_e32 v23, v29, v33
	v_sub_f32_e32 v18, v18, v22
	v_sub_f32_e32 v20, v20, v24
	v_sub_f32_e32 v22, v28, v32
	v_sub_f32_e32 v24, v11, v12
	v_add_f32_e32 v25, v11, v12
	v_sub_f32_e64 v11, -v21, v23
	v_sub_f32_e32 v12, v21, v23
	v_sub_f32_e32 v19, v26, v30
	v_mad_f32 v26, v20, 0, -v22
	v_mac_f32_e32 v20, 0, v22
	v_mul_f32_e32 v21, s0, v11
	v_mul_f32_e32 v22, s0, v12
	v_add_f32_e32 v23, v18, v26
	v_mad_f32 v28, s0, v24, v21
	v_add_f32_e32 v27, v19, v20
	v_mad_f32 v29, s0, v25, v22
	v_add_f32_e32 v11, v23, v28
	v_add_f32_e32 v12, v27, v29
	v_mul_f32_e32 v11, s1, v11
	v_mul_f32_e32 v12, s1, v12
	flat_store_dwordx2 v[9:10], v[11:12]
	v_sub_f32_e32 v12, v36, v40
	v_sub_f32_e32 v9, v37, v41
	v_sub_f32_e32 v11, v17, v39
	v_mad_f32 v17, v12, 0, -v9
	v_mac_f32_e32 v12, 0, v9
	v_sub_f32_e32 v0, v0, v38
	v_add_f32_e32 v9, v0, v17
	v_add_f32_e32 v10, v11, v12
	v_mul_f32_e32 v9, s1, v9
	v_mul_f32_e32 v10, s1, v10
	flat_store_dwordx2 v[5:6], v[9:10]
	v_sub_f32_e32 v10, v11, v12
	v_sub_f32_e32 v0, v0, v17
	v_mad_f32 v12, v24, s0, -v21
	v_mad_f32 v17, v25, s0, -v22
	v_sub_f32_e32 v9, v18, v26
	v_mad_f32 v18, v12, 0, -v17
	v_sub_f32_e32 v11, v19, v20
	v_mac_f32_e32 v12, 0, v17
	v_sub_f32_e32 v5, v42, v44
	v_sub_f32_e32 v6, v43, v45
	v_sub_f32_e32 v17, v23, v28
	v_sub_f32_e32 v19, v27, v29
	v_add_f32_e32 v20, v9, v18
	v_sub_f32_e32 v21, v9, v18
	v_add_f32_e32 v18, v11, v12
	v_sub_f32_e32 v22, v11, v12
	v_mul_f32_e32 v11, s1, v17
	v_mul_f32_e32 v12, s1, v19
	v_mul_f32_e32 v17, s1, v20
	v_mul_f32_e32 v5, s1, v5
	v_mul_f32_e32 v6, s1, v6
	v_mul_f32_e32 v18, s1, v18
	v_mul_f32_e32 v9, s1, v0
	v_mul_f32_e32 v10, s1, v10
	v_mul_f32_e32 v19, s1, v21
	v_mul_f32_e32 v20, s1, v22
	flat_store_dwordx2 v[1:2], v[17:18]
	flat_store_dwordx2 v[3:4], v[5:6]
	flat_store_dwordx2 v[7:8], v[11:12]
	flat_store_dwordx2 v[13:14], v[9:10]
	flat_store_dwordx2 v[15:16], v[19:20]
	s_endpgm
.Lfunc_end1:
	.size	ifft1D_512, .Lfunc_end1-ifft1D_512
                                        ; -- End function
	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 32484
; NumSgprs: 35
; NumVgprs: 87
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 192
; IeeeMode: 1
; LDSByteSize: 2304 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 21
; NumSGPRsForWavesPerEU: 35
; NumVGPRsForWavesPerEU: 87
; Occupancy: 2
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.text
	.protected	chk1D_512       ; -- Begin function chk1D_512
	.globl	chk1D_512
	.p2align	8
	.type	chk1D_512,@function
	.amdgpu_hsa_kernel chk1D_512
chk1D_512:                              ; @chk1D_512
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 2
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		granulated_workitem_vgpr_count = 4
		granulated_wavefront_sgpr_count = 4
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_wgp_mode = 0
		enable_mem_ordered = 0
		enable_fwd_progress = 0
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_trap_handler = 0
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_wavefront_size32 = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 80
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 35
		workitem_vgpr_count = 20
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = -1
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; %bb.0:
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_lshl_b32 s6, s6, 9
	v_or_b32_e32 v1, s6, v0
	v_mov_b32_e32 v0, 0
	v_ashrrev_i64 v[0:1], 29, v[0:1]
	s_load_dword s0, s[4:5], 0x8
	s_waitcnt lgkmcnt(0)
	v_add_u32_e32 v0, vcc, s2, v0
	v_mov_b32_e32 v2, s3
	v_addc_u32_e32 v1, vcc, v2, v1, vcc
	s_movk_i32 s2, 0x200
	v_add_u32_e32 v2, vcc, s2, v0
	v_addc_u32_e32 v3, vcc, 0, v1, vcc
	s_movk_i32 s6, 0x400
	v_add_u32_e32 v4, vcc, s6, v0
	v_addc_u32_e32 v5, vcc, 0, v1, vcc
	s_movk_i32 s10, 0x600
	v_add_u32_e32 v6, vcc, s10, v0
	v_addc_u32_e32 v7, vcc, 0, v1, vcc
	s_movk_i32 s12, 0x800
	v_add_u32_e32 v8, vcc, s12, v0
	v_addc_u32_e32 v9, vcc, 0, v1, vcc
	s_movk_i32 s14, 0xa00
	s_ashr_i32 s1, s0, 31
	v_add_u32_e32 v10, vcc, s14, v0
	s_lshl_b64 s[0:1], s[0:1], 3
	v_addc_u32_e32 v11, vcc, 0, v1, vcc
	v_mov_b32_e32 v13, s1
	v_add_u32_e32 v12, vcc, s0, v0
	v_addc_u32_e32 v13, vcc, v1, v13, vcc
	s_movk_i32 s11, 0xe00
	v_add_u32_e32 v14, vcc, s11, v12
	v_addc_u32_e32 v15, vcc, 0, v13, vcc
	flat_load_dwordx2 v[16:17], v[0:1]
	flat_load_dwordx2 v[18:19], v[12:13]
	flat_load_dwordx2 v[14:15], v[14:15]
	flat_load_dwordx2 v[2:3], v[2:3]
	flat_load_dwordx2 v[4:5], v[4:5]
	s_movk_i32 s15, 0xc00
	s_mov_b32 s16, s7
	flat_load_dwordx2 v[6:7], v[6:7]
	s_mov_b32 s32, s16
	s_waitcnt vmcnt(4) lgkmcnt(4)
	v_cmp_neq_f32_e32 vcc, v16, v18
	v_add_u32_e64 v16, s[2:3], s2, v12
	v_cmp_neq_f32_e64 s[0:1], v17, v19
	v_addc_u32_e64 v17, s[2:3], 0, v13, s[2:3]
	v_add_u32_e64 v18, s[2:3], s6, v12
	v_addc_u32_e64 v19, s[2:3], 0, v13, s[2:3]
	flat_load_dwordx2 v[18:19], v[18:19]
	flat_load_dwordx2 v[16:17], v[16:17]
	s_or_b64 s[0:1], vcc, s[0:1]
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_cmp_neq_f32_e64 s[2:3], v2, v16
	v_add_u32_e64 v2, s[8:9], s15, v0
	v_cmp_neq_f32_e64 s[6:7], v3, v17
	v_addc_u32_e64 v3, s[8:9], 0, v1, s[8:9]
	v_add_u32_e64 v0, s[8:9], s11, v0
	v_addc_u32_e64 v1, s[8:9], 0, v1, s[8:9]
	v_add_u32_e64 v16, s[8:9], s10, v12
	v_addc_u32_e64 v17, s[8:9], 0, v13, s[8:9]
	v_cmp_neq_f32_e64 s[8:9], v4, v18
	v_add_u32_e64 v4, s[12:13], s12, v12
	v_cmp_neq_f32_e64 s[10:11], v5, v19
	v_addc_u32_e64 v5, s[12:13], 0, v13, s[12:13]
	v_add_u32_e64 v18, s[12:13], s14, v12
	v_addc_u32_e64 v19, s[12:13], 0, v13, s[12:13]
	v_add_u32_e64 v12, s[12:13], s15, v12
	flat_load_dwordx2 v[8:9], v[8:9]
	flat_load_dwordx2 v[16:17], v[16:17]
	v_addc_u32_e64 v13, s[12:13], 0, v13, s[12:13]
	flat_load_dwordx2 v[0:1], v[0:1]
	flat_load_dwordx2 v[2:3], v[2:3]
	flat_load_dwordx2 v[10:11], v[10:11]
	flat_load_dwordx2 v[12:13], v[12:13]
	flat_load_dwordx2 v[18:19], v[18:19]
	flat_load_dwordx2 v[4:5], v[4:5]
	s_or_b64 s[2:3], s[2:3], s[6:7]
	s_or_b64 s[0:1], s[0:1], s[2:3]
	s_or_b64 s[2:3], s[8:9], s[10:11]
	s_or_b64 s[2:3], s[0:1], s[2:3]
	s_waitcnt vmcnt(6) lgkmcnt(6)
	v_cmp_neq_f32_e32 vcc, v6, v16
	v_cmp_neq_f32_e64 s[0:1], v7, v17
	s_or_b64 s[0:1], vcc, s[0:1]
	s_or_b64 s[2:3], s[2:3], s[0:1]
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_cmp_neq_f32_e32 vcc, v8, v4
	v_cmp_neq_f32_e64 s[0:1], v9, v5
	s_or_b64 s[0:1], vcc, s[0:1]
	s_or_b64 s[2:3], s[2:3], s[0:1]
	v_cmp_neq_f32_e32 vcc, v10, v18
	v_cmp_neq_f32_e64 s[0:1], v11, v19
	s_or_b64 s[0:1], vcc, s[0:1]
	s_or_b64 s[2:3], s[2:3], s[0:1]
	v_cmp_neq_f32_e32 vcc, v2, v12
	v_cmp_neq_f32_e64 s[0:1], v3, v13
	s_or_b64 s[0:1], vcc, s[0:1]
	s_or_b64 s[2:3], s[2:3], s[0:1]
	v_cmp_neq_f32_e32 vcc, v0, v14
	v_cmp_neq_f32_e64 s[0:1], v1, v15
	s_or_b64 s[0:1], vcc, s[0:1]
	s_or_b64 s[0:1], s[2:3], s[0:1]
	s_and_saveexec_b64 s[2:3], s[0:1]
	; mask branch BB2_2
	s_cbranch_execz BB2_2
BB2_1:
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	v_mov_b32_e32 v2, 1
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v0, s0
	v_mov_b32_e32 v1, s1
	flat_store_dword v[0:1], v2
BB2_2:
	s_endpgm
.Lfunc_end2:
	.size	chk1D_512, .Lfunc_end2-chk1D_512
                                        ; -- End function
	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 636
; NumSgprs: 35
; NumVgprs: 20
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 192
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 4
; VGPRBlocks: 4
; NumSGPRsForWavesPerEU: 35
; NumVGPRsForWavesPerEU: 20
; Occupancy: 10
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0

	.ident	"HCC clang version 10.0.0 (/data/jenkins-workspace/compute-rocm-rel-3.0/external/hcc-tot/llvm-project/clang 40756364719e83a2ddd5abe0affe700723cdd852) (based on HCC 3.0.19493-75ea952-4075636 )"
	.section	".note.GNU-stack"
	.addrsig
	.amd_amdgpu_isa "amdgcn-amd-amdhsa--gfx803"
	.amd_amdgpu_hsa_metadata
---
Version:         [ 1, 0 ]
Kernels:
  - Name:            fft1D_512
    SymbolName:      'fft1D_512@kd'
    Language:        OpenCL C
    LanguageVersion: [ 1, 2 ]
    Args:
      - Name:            work
        TypeName:        'float2*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       F32
        AddrSpaceQual:   Global
        AccQual:         Default
      - Name:            smem
        TypeName:        'float*'
        Size:            4
        Align:           4
        ValueKind:       DynamicSharedPointer
        ValueType:       F32
        PointeeAlign:    4
        AddrSpaceQual:   Local
        AccQual:         Default
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetX
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetY
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetZ
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenMultiGridSyncArg
        ValueType:       I8
        AddrSpaceQual:   Global
    CodeProps:
      KernargSegmentSize: 72
      GroupSegmentFixedSize: 0
      PrivateSegmentFixedSize: 0
      KernargSegmentAlign: 8
      WavefrontSize:   64
      NumSGPRs:        35
      NumVGPRs:        87
      MaxFlatWorkGroupSize: 256
  - Name:            ifft1D_512
    SymbolName:      'ifft1D_512@kd'
    Language:        OpenCL C
    LanguageVersion: [ 1, 2 ]
    Args:
      - Name:            work
        TypeName:        'float2*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       F32
        AddrSpaceQual:   Global
        AccQual:         Default
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetX
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetY
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetZ
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenMultiGridSyncArg
        ValueType:       I8
        AddrSpaceQual:   Global
    CodeProps:
      KernargSegmentSize: 64
      GroupSegmentFixedSize: 2304
      PrivateSegmentFixedSize: 0
      KernargSegmentAlign: 8
      WavefrontSize:   64
      NumSGPRs:        35
      NumVGPRs:        87
      MaxFlatWorkGroupSize: 256
  - Name:            chk1D_512
    SymbolName:      'chk1D_512@kd'
    Language:        OpenCL C
    LanguageVersion: [ 1, 2 ]
    Args:
      - Name:            work
        TypeName:        'float2*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       F32
        AddrSpaceQual:   Global
        AccQual:         Default
      - Name:            half_n_cmplx
        TypeName:        int
        Size:            4
        Align:           4
        ValueKind:       ByValue
        ValueType:       I32
        AccQual:         Default
      - Name:            fail
        TypeName:        'int*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       I32
        AddrSpaceQual:   Global
        AccQual:         Default
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetX
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetY
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetZ
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenMultiGridSyncArg
        ValueType:       I8
        AddrSpaceQual:   Global
    CodeProps:
      KernargSegmentSize: 80
      GroupSegmentFixedSize: 0
      PrivateSegmentFixedSize: 0
      KernargSegmentAlign: 8
      WavefrontSize:   64
      NumSGPRs:        35
      NumVGPRs:        20
      MaxFlatWorkGroupSize: 256
...

	.end_amd_amdgpu_hsa_metadata
