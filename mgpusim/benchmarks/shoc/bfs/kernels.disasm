
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
0000000000001100 BFS_kernel_warp:
	s_load_dwordx4 s[12:15], s[6:7], 0x18                      // 000000001100: C00A0303 00000018 
	s_load_dword s16, s[6:7], 0x30                             // 000000001108: C0020403 00000030 
	s_waitcnt lgkmcnt(0)                                       // 000000001110: BF8C007F 
	s_ashr_i32 s2, s12, 31                                     // 000000001114: 90029F0C 
	s_add_i32 s0, s12, s2                                      // 000000001118: 8100020C 
	s_xor_b32 s3, s0, s2                                       // 00000000111C: 88030200 
	v_cvt_f32_u32_e32 v1, s3                                   // 000000001120: 7E020C03 
	s_load_dword s0, s[4:5], 0x4                               // 000000001124: C0020002 00000004 
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000112C: 7E024701 
	s_waitcnt lgkmcnt(0)                                       // 000000001130: BF8C007F 
	s_and_b32 s0, s0, 0xffff                                   // 000000001134: 8600FF00 0000FFFF 
	s_mul_i32 s17, s8, s0                                      // 00000000113C: 92110008 
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 000000001140: 0A0202FF 4F800000 
	v_cvt_u32_f32_e32 v1, v1                                   // 000000001148: 7E020F01 
	v_add_u32_e32 v2, vcc, s17, v0                             // 00000000114C: 32040011 
	v_add_u32_e32 v2, vcc, s16, v2                             // 000000001150: 32040410 
	v_ashrrev_i32_e32 v5, 31, v2                               // 000000001154: 220A049F 
	v_mul_lo_u32 v3, v1, s3                                    // 000000001158: D2850003 00000701 
	v_mul_hi_u32 v4, v1, s3                                    // 000000001160: D2860004 00000701 
	v_sub_u32_e32 v6, vcc, 0, v3                               // 000000001168: 340C0680 
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 00000000116C: D0CA0000 00020880 
	v_cndmask_b32_e64 v3, v3, v6, s[0:1]                       // 000000001174: D1000003 00020D03 
	v_mul_hi_u32 v3, v3, v1                                    // 00000000117C: D2860003 00020303 
	v_add_u32_e32 v4, vcc, v2, v5                              // 000000001184: 32080B02 
	v_xor_b32_e32 v6, v4, v5                                   // 000000001188: 2A0C0B04 
	v_add_u32_e32 v4, vcc, v3, v1                              // 00000000118C: 32080303 
	v_subrev_u32_e32 v1, vcc, v3, v1                           // 000000001190: 36020303 
	v_cndmask_b32_e64 v1, v1, v4, s[0:1]                       // 000000001194: D1000001 00020901 
	v_mul_hi_u32 v1, v1, v6                                    // 00000000119C: D2860001 00020D01 
	v_xor_b32_e32 v4, s2, v5                                   // 0000000011A4: 2A080A02 
	v_mul_lo_u32 v3, v1, s3                                    // 0000000011A8: D2850003 00000701 
	v_add_u32_e32 v5, vcc, -1, v1                              // 0000000011B0: 320A02C1 
	v_sub_u32_e32 v7, vcc, v6, v3                              // 0000000011B4: 340E0706 
	v_cmp_le_u32_e64 s[0:1], s3, v7                            // 0000000011B8: D0CB0000 00020E03 
	v_cmp_ge_u32_e64 s[2:3], v6, v3                            // 0000000011C0: D0CE0002 00020706 
	v_add_u32_e32 v3, vcc, 1, v1                               // 0000000011C8: 32060281 
	s_and_b64 vcc, s[0:1], s[2:3]                              // 0000000011CC: 86EA0200 
	v_cndmask_b32_e32 v1, v1, v3, vcc                          // 0000000011D0: 00020701 
	v_cndmask_b32_e64 v1, v5, v1, s[2:3]                       // 0000000011D4: D1000001 000A0305 
	v_xor_b32_e32 v5, v1, v4                                   // 0000000011DC: 2A0A0901 
	v_sub_u32_e32 v6, vcc, v5, v4                              // 0000000011E0: 340C0905 
	v_mul_lo_u32 v1, v6, s13                                   // 0000000011E4: D2850001 00001B06 
	s_add_i32 s0, s13, 1                                       // 0000000011EC: 8100810D 
	v_mov_b32_e32 v8, s0                                       // 0000000011F0: 7E100200 
	v_sub_u32_e32 v7, vcc, s14, v1                             // 0000000011F4: 340E020E 
	v_add_u32_e32 v7, vcc, 1, v7                               // 0000000011F8: 320E0E81 
	v_add_u32_e32 v3, vcc, s13, v1                             // 0000000011FC: 3206020D 
	v_max_i32_e32 v7, 0, v7                                    // 000000001200: 1A0E0E80 
	v_cmp_gt_u32_e32 vcc, s14, v3                              // 000000001204: 7D98060E 
	v_cndmask_b32_e32 v3, v7, v8, vcc                          // 000000001208: 00061107 
	v_add_u32_e32 v3, vcc, v1, v3                              // 00000000120C: 32060701 
	v_add_u32_e32 v3, vcc, -1, v3                              // 000000001210: 320606C1 
	v_cmp_lt_i32_e32 vcc, v1, v3                               // 000000001214: 7D820701 
	s_and_saveexec_b64 s[0:1], vcc                             // 000000001218: BE80206A 
	s_cbranch_execz BB0_11                                     // 00000000121C: BF880059 

0000000000001220 BB0_1:
	v_sub_u32_e32 v4, vcc, v4, v5                              // 000000001220: 34080B04 
	v_mul_lo_u32 v5, s12, v4                                   // 000000001224: D2850005 0002080C 
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 00000000122C: C00A0003 00000000 
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 000000001234: C00A0203 00000010 
	s_load_dwordx2 s[4:5], s[6:7], 0x28                        // 00000000123C: C0060103 00000028 
	v_mul_lo_u32 v6, v6, s12                                   // 000000001244: D2850006 00001906 
	v_add_u32_e32 v0, vcc, v0, v5                              // 00000000124C: 32000B00 
	v_add_u32_e32 v0, vcc, s17, v0                             // 000000001250: 32000011 
	s_add_i32 s6, s15, 1                                       // 000000001254: 8106810F 
	v_sub_u32_e32 v4, vcc, v2, v6                              // 000000001258: 34080D02 
	v_add_u32_e32 v0, vcc, s16, v0                             // 00000000125C: 32000010 
	s_waitcnt lgkmcnt(0)                                       // 000000001260: BF8C007F 
	s_mov_b64 s[10:11], 0                                      // 000000001264: BE8A0180 

0000000000001268 BB0_2:
	v_ashrrev_i32_e32 v2, 31, v1                               // 000000001268: 2204029F 
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000000126C: D28F0005 00020282 
	v_mov_b32_e32 v7, s1                                       // 000000001274: 7E0E0201 
	v_add_u32_e32 v5, vcc, s0, v5                              // 000000001278: 320A0A00 
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 00000000127C: 380C0D07 
	flat_load_dword v5, v[5:6]                                 // 000000001280: DC500000 05000005 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001288: BF8C0070 
	v_cmp_eq_u32_e32 vcc, s15, v5                              // 00000000128C: 7D940A0F 
	s_and_saveexec_b64 s[16:17], vcc                           // 000000001290: BE90206A 
	s_cbranch_execz BB0_10                                     // 000000001294: BF880035 

0000000000001298 BB0_3:
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000001298: D28F0005 00020282 
	v_mov_b32_e32 v2, s3                                       // 0000000012A0: 7E040203 
	v_add_u32_e32 v5, vcc, s2, v5                              // 0000000012A4: 320A0A02 
	v_addc_u32_e32 v6, vcc, v2, v6, vcc                        // 0000000012A8: 380C0D02 
	flat_load_dwordx2 v[5:6], v[5:6]                           // 0000000012AC: DC540000 05000005 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000012B4: BF8C0070 
	v_sub_u32_e32 v2, vcc, v6, v5                              // 0000000012B8: 34040B06 
	v_cmp_lt_u32_e32 vcc, v4, v2                               // 0000000012BC: 7D920504 
	s_and_saveexec_b64 s[18:19], vcc                           // 0000000012C0: BE92206A 
	s_cbranch_execz BB0_9                                      // 0000000012C4: BF880028 

00000000000012c8 BB0_4:
	v_add_u32_e32 v5, vcc, v4, v5                              // 0000000012C8: 320A0B04 
	s_mov_b64 s[20:21], 0                                      // 0000000012CC: BE940180 
	v_mov_b32_e32 v6, 0                                        // 0000000012D0: 7E0C0280 

00000000000012d4 BB0_5:
	v_add_u32_e32 v7, vcc, v5, v6                              // 0000000012D4: 320E0D05 
	v_mov_b32_e32 v8, 0                                        // 0000000012D8: 7E100280 
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 0000000012DC: D28F0007 00020E82 
	v_mov_b32_e32 v9, s9                                       // 0000000012E4: 7E120209 
	v_add_u32_e32 v7, vcc, s8, v7                              // 0000000012E8: 320E0E08 
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 0000000012EC: 38101109 
	flat_load_dword v7, v[7:8]                                 // 0000000012F0: DC500000 07000007 
	v_mov_b32_e32 v9, s1                                       // 0000000012F8: 7E120201 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000012FC: BF8C0070 
	v_ashrrev_i32_e32 v8, 31, v7                               // 000000001300: 22100E9F 
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000001304: D28F0007 00020E82 
	v_add_u32_e32 v7, vcc, s0, v7                              // 00000000130C: 320E0E00 
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000001310: 38101109 
	flat_load_dword v9, v[7:8]                                 // 000000001314: DC500000 09000007 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000131C: BF8C0070 
	v_cmp_eq_u32_e32 vcc, -1, v9                               // 000000001320: 7D9412C1 
	s_and_saveexec_b64 s[22:23], vcc                           // 000000001324: BE96206A 

0000000000001328 BB0_6:
	v_mov_b32_e32 v9, s6                                       // 000000001328: 7E120206 
	flat_store_dword v[7:8], v9                                // 00000000132C: DC700000 00000907 
	v_mov_b32_e32 v8, s5                                       // 000000001334: 7E100205 
	v_mov_b32_e32 v9, 1                                        // 000000001338: 7E120281 
	v_mov_b32_e32 v7, s4                                       // 00000000133C: 7E0E0204 
	flat_store_dword v[7:8], v9                                // 000000001340: DC700000 00000907 

0000000000001348 BB0_7:
	s_or_b64 exec, exec, s[22:23]                              // 000000001348: 87FE167E 
	v_add_u32_e32 v6, vcc, s12, v6                             // 00000000134C: 320C0C0C 
	v_add_u32_e32 v7, vcc, v0, v6                              // 000000001350: 320E0D00 
	v_cmp_ge_u32_e32 vcc, v7, v2                               // 000000001354: 7D9C0507 
	s_or_b64 s[20:21], vcc, s[20:21]                           // 000000001358: 8794146A 
	s_andn2_b64 exec, exec, s[20:21]                           // 00000000135C: 89FE147E 
	s_cbranch_execnz BB0_5                                     // 000000001360: BF89FFDC 
	s_or_b64 exec, exec, s[20:21]                              // 000000001364: 87FE147E 

0000000000001368 BB0_9:
	s_or_b64 exec, exec, s[18:19]                              // 000000001368: 87FE127E 

000000000000136c BB0_10:
	s_or_b64 exec, exec, s[16:17]                              // 00000000136C: 87FE107E 
	v_add_u32_e32 v1, vcc, 1, v1                               // 000000001370: 32020281 
	v_cmp_eq_u32_e32 vcc, v1, v3                               // 000000001374: 7D940701 
	s_or_b64 s[10:11], vcc, s[10:11]                           // 000000001378: 878A0A6A 
	s_andn2_b64 exec, exec, s[10:11]                           // 00000000137C: 89FE0A7E 
	s_cbranch_execnz BB0_2                                     // 000000001380: BF89FFB9 

0000000000001384 BB0_11:
	s_endpgm                                                   // 000000001384: BF810000 
