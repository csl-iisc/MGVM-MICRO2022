
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
0000000000003100 simpleNonSeparableConvolution:
	s_load_dword s0, s[4:5], 0x4                               // 000000003100: C0020002 00000004 
	s_load_dwordx4 s[12:15], s[6:7], 0x18                      // 000000003108: C00A0303 00000018 
	s_load_dwordx2 s[20:21], s[6:7], 0x30                      // 000000003110: C0060503 00000030 
	s_waitcnt lgkmcnt(0)                                       // 000000003118: BF8C007F 
	s_and_b32 s0, s0, 0xffff                                   // 00000000311C: 8600FF00 0000FFFF 
	v_cvt_f32_u32_e32 v1, s12                                  // 000000003124: 7E020C0C 
	s_mul_i32 s5, s8, s0                                       // 000000003128: 92050008 
	v_add_u32_e32 v2, vcc, s5, v0                              // 00000000312C: 32040005 
	v_rcp_iflag_f32_e32 v3, v1                                 // 000000003130: 7E064701 
	v_add_u32_e32 v1, vcc, s20, v2                             // 000000003134: 32020414 
	v_mul_f32_e32 v2, 0x4f800000, v3                           // 000000003138: 0A0406FF 4F800000 
	v_cvt_u32_f32_e32 v2, v2                                   // 000000003140: 7E040F02 
	v_mul_lo_u32 v3, v2, s12                                   // 000000003144: D2850003 00001902 
	v_mul_hi_u32 v4, v2, s12                                   // 00000000314C: D2860004 00001902 
	v_sub_u32_e32 v5, vcc, 0, v3                               // 000000003154: 340A0680 
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 000000003158: D0CA0000 00020880 
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]                       // 000000003160: D1000003 00020B03 
	v_mul_hi_u32 v3, v3, v2                                    // 000000003168: D2860003 00020503 
	v_add_u32_e32 v4, vcc, v3, v2                              // 000000003170: 32080503 
	v_subrev_u32_e32 v2, vcc, v3, v2                           // 000000003174: 36040503 
	v_cndmask_b32_e64 v2, v2, v4, s[0:1]                       // 000000003178: D1000002 00020902 
	v_mul_hi_u32 v2, v2, v1                                    // 000000003180: D2860002 00020302 
	v_mul_lo_u32 v3, v2, s12                                   // 000000003188: D2850003 00001902 
	v_add_u32_e32 v4, vcc, 1, v2                               // 000000003190: 32080481 
	v_add_u32_e32 v5, vcc, -1, v2                              // 000000003194: 320A04C1 
	v_sub_u32_e32 v6, vcc, v1, v3                              // 000000003198: 340C0701 
	v_cmp_ge_u32_e32 vcc, v1, v3                               // 00000000319C: 7D9C0701 
	v_cmp_le_u32_e64 s[0:1], s12, v6                           // 0000000031A0: D0CB0000 00020C0C 
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000031A8: 86806A00 
	v_cndmask_b32_e64 v2, v2, v4, s[0:1]                       // 0000000031AC: D1000002 00020902 
	v_cndmask_b32_e32 v4, v5, v2, vcc                          // 0000000031B4: 00080505 
	v_cmp_gt_u32_e32 vcc, s13, v4                              // 0000000031B8: 7D98080D 
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000031BC: BE80206A 
	s_cbranch_execz BB0_9                                      // 0000000031C0: BF88004E 

00000000000031c4 BB0_1:
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 0000000031C4: C00A0203 00000010 
	v_add_u32_e32 v2, vcc, s15, v4                             // 0000000031CC: 3204080F 
	v_cmp_lt_u32_e32 vcc, v4, v2                               // 0000000031D0: 7D920504 
	v_mov_b32_e32 v2, 0                                        // 0000000031D4: 7E040280 
	s_and_saveexec_b64 s[2:3], vcc                             // 0000000031D8: BE82206A 
	s_cbranch_execz BB0_8                                      // 0000000031DC: BF88003B 

00000000000031e0 BB0_2:
	s_load_dwordx4 s[16:19], s[6:7], 0x0                       // 0000000031E0: C00A0403 00000000 
	s_load_dword s4, s[6:7], 0x28                              // 0000000031E8: C0020103 00000028 
	v_mul_lo_u32 v5, v4, s12                                   // 0000000031F0: D2850005 00001904 
	v_mov_b32_e32 v3, 0                                        // 0000000031F8: 7E060280 
	v_mov_b32_e32 v2, 0                                        // 0000000031FC: 7E040280 
	s_waitcnt lgkmcnt(0)                                       // 000000003200: BF8C007F 
	s_sub_i32 s0, s4, s12                                      // 000000003204: 81800C04 
	v_mul_lo_u32 v4, v4, s0                                    // 000000003208: D2850004 00000104 
	v_sub_u32_e32 v5, vcc, v1, v5                              // 000000003210: 340A0B01 
	v_add_u32_e32 v6, vcc, s14, v5                             // 000000003214: 320C0A0E 
	v_cmp_lt_u32_e64 s[0:1], v5, v6                            // 000000003218: D0C90000 00020D05 
	v_add_u32_e32 v0, vcc, v0, v4                              // 000000003220: 32000900 
	v_add_u32_e32 v0, vcc, s5, v0                              // 000000003224: 32000005 
	v_add_u32_e32 v0, vcc, s20, v0                             // 000000003228: 32000014 
	v_mov_b32_e32 v4, v3                                       // 00000000322C: 7E080303 

0000000000003230 BB0_3:
	s_and_saveexec_b64 s[6:7], s[0:1]                          // 000000003230: BE862000 
	s_cbranch_execz BB0_6                                      // 000000003234: BF88001E 

0000000000003238 BB0_4:
	v_mov_b32_e32 v5, s14                                      // 000000003238: 7E0A020E 
	v_mov_b32_e32 v6, v3                                       // 00000000323C: 7E0C0303 
	v_mov_b32_e32 v8, v0                                       // 000000003240: 7E100300 

0000000000003244 BB0_5:
	v_mov_b32_e32 v9, 0                                        // 000000003244: 7E120280 
	v_lshlrev_b64 v[10:11], 2, v[8:9]                          // 000000003248: D28F000A 00021082 
	v_mov_b32_e32 v7, s17                                      // 000000003250: 7E0E0211 
	v_add_u32_e32 v10, vcc, s16, v10                           // 000000003254: 32141410 
	v_addc_u32_e32 v11, vcc, v7, v11, vcc                      // 000000003258: 38161707 
	flat_load_dword v11, v[10:11]                              // 00000000325C: DC500000 0B00000A 
	v_mov_b32_e32 v7, v9                                       // 000000003264: 7E0E0309 
	v_lshlrev_b64 v[9:10], 2, v[6:7]                           // 000000003268: D28F0009 00020C82 
	v_add_u32_e32 v8, vcc, 1, v8                               // 000000003270: 32101081 
	v_add_u32_e32 v6, vcc, 1, v6                               // 000000003274: 320C0C81 
	v_add_u32_e32 v7, vcc, s18, v9                             // 000000003278: 320E1212 
	v_mov_b32_e32 v12, s19                                     // 00000000327C: 7E180213 
	v_addc_u32_e32 v9, vcc, v12, v10, vcc                      // 000000003280: 3812150C 
	v_readfirstlane_b32 s10, v7                                // 000000003284: 7E140507 
	v_readfirstlane_b32 s11, v9                                // 000000003288: 7E160509 
	s_load_dword s5, s[10:11], 0x0                             // 00000000328C: C0020145 00000000 
	v_add_u32_e32 v5, vcc, -1, v5                              // 000000003294: 320A0AC1 
	v_cmp_eq_u32_e32 vcc, 0, v5                                // 000000003298: 7D940A80 
	s_and_b64 vcc, exec, vcc                                   // 00000000329C: 86EA6A7E 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000032A0: BF8C0070 
	v_cvt_f32_u32_e32 v7, v11                                  // 0000000032A4: 7E0E0D0B 
	v_mac_f32_e32 v2, s5, v7                                   // 0000000032A8: 2C040E05 
	s_cbranch_vccz BB0_5                                       // 0000000032AC: BF86FFE5 

00000000000032b0 BB0_6:
	s_or_b64 exec, exec, s[6:7]                                // 0000000032B0: 87FE067E 
	v_add_u32_e32 v4, vcc, 1, v4                               // 0000000032B4: 32080881 
	v_add_u32_e32 v0, vcc, s4, v0                              // 0000000032B8: 32000004 
	v_add_u32_e32 v3, vcc, s14, v3                             // 0000000032BC: 3206060E 
	v_cmp_eq_u32_e32 vcc, s15, v4                              // 0000000032C0: 7D94080F 
	s_and_b64 vcc, exec, vcc                                   // 0000000032C4: 86EA6A7E 
	s_cbranch_vccz BB0_3                                       // 0000000032C8: BF86FFD9 

00000000000032cc BB0_8:
	s_or_b64 exec, exec, s[2:3]                                // 0000000032CC: 87FE027E 
	v_add_f32_e32 v0, 0.5, v2                                  // 0000000032D0: 020004F0 
	v_mov_b32_e32 v2, 0                                        // 0000000032D4: 7E040280 
	v_cvt_i32_f32_e32 v3, v0                                   // 0000000032D8: 7E061100 
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000032DC: D28F0000 00020282 
	s_waitcnt lgkmcnt(0)                                       // 0000000032E4: BF8C007F 
	v_mov_b32_e32 v2, s9                                       // 0000000032E8: 7E040209 
	v_add_u32_e32 v0, vcc, s8, v0                              // 0000000032EC: 32000008 
	v_addc_u32_e32 v1, vcc, v2, v1, vcc                        // 0000000032F0: 38020302 
	flat_store_dword v[0:1], v3                                // 0000000032F4: DC700000 00000300 

00000000000032fc BB0_9:
	s_endpgm                                                   // 0000000032FC: BF810000 

0000000000003400 simpleSeparableConvolutionPass1:
	s_load_dword s0, s[4:5], 0x4                               // 000000003400: C0020002 00000004 
	s_load_dwordx2 s[12:13], s[6:7], 0x18                      // 000000003408: C0060303 00000018 
	s_load_dword s4, s[6:7], 0x20                              // 000000003410: C0020103 00000020 
	s_load_dword s5, s[6:7], 0x30                              // 000000003418: C0020143 00000030 
	s_waitcnt lgkmcnt(0)                                       // 000000003420: BF8C007F 
	s_and_b32 s0, s0, 0xffff                                   // 000000003424: 8600FF00 0000FFFF 
	v_cvt_f32_u32_e32 v1, s12                                  // 00000000342C: 7E020C0C 
	s_mul_i32 s14, s8, s0                                      // 000000003430: 920E0008 
	s_add_i32 s0, s4, s13                                      // 000000003434: 81000D04 
	s_add_i32 s8, s0, -1                                       // 000000003438: 8108C100 
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000343C: 7E024701 
	v_add_u32_e32 v2, vcc, s14, v0                             // 000000003440: 3204000E 
	v_add_u32_e32 v2, vcc, s5, v2                              // 000000003444: 32040405 
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 000000003448: 0A0202FF 4F800000 
	v_cvt_u32_f32_e32 v1, v1                                   // 000000003450: 7E020F01 
	v_mul_lo_u32 v3, v1, s12                                   // 000000003454: D2850003 00001901 
	v_mul_hi_u32 v4, v1, s12                                   // 00000000345C: D2860004 00001901 
	v_sub_u32_e32 v5, vcc, 0, v3                               // 000000003464: 340A0680 
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 000000003468: D0CA0000 00020880 
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]                       // 000000003470: D1000003 00020B03 
	v_mul_hi_u32 v3, v3, v1                                    // 000000003478: D2860003 00020303 
	v_add_u32_e32 v4, vcc, v3, v1                              // 000000003480: 32080303 
	v_subrev_u32_e32 v1, vcc, v3, v1                           // 000000003484: 36020303 
	v_cndmask_b32_e64 v1, v1, v4, s[0:1]                       // 000000003488: D1000001 00020901 
	v_mul_hi_u32 v1, v1, v2                                    // 000000003490: D2860001 00020501 
	v_mul_lo_u32 v3, v1, s12                                   // 000000003498: D2850003 00001901 
	v_add_u32_e32 v4, vcc, -1, v1                              // 0000000034A0: 320802C1 
	v_sub_u32_e32 v5, vcc, v2, v3                              // 0000000034A4: 340A0702 
	v_cmp_ge_u32_e64 s[0:1], v2, v3                            // 0000000034A8: D0CE0000 00020702 
	v_cmp_le_u32_e64 s[2:3], s12, v5                           // 0000000034B0: D0CB0002 00020A0C 
	v_add_u32_e32 v3, vcc, 1, v1                               // 0000000034B8: 32060281 
	s_and_b64 vcc, s[2:3], s[0:1]                              // 0000000034BC: 86EA0002 
	v_cndmask_b32_e32 v1, v1, v3, vcc                          // 0000000034C0: 00020701 
	v_cndmask_b32_e64 v1, v4, v1, s[0:1]                       // 0000000034C4: D1000001 00020304 
	v_cmp_gt_u32_e32 vcc, s8, v1                               // 0000000034CC: 7D980208 
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000034D0: BE80206A 
	s_cbranch_execz BB1_5                                      // 0000000034D4: BF88003E 

00000000000034d8 BB1_1:
	v_mul_lo_u32 v3, v1, s12                                   // 0000000034D8: D2850003 00001901 
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 0000000034E0: C00A0203 00000010 
	s_load_dwordx2 s[2:3], s[6:7], 0x28                        // 0000000034E8: C0060083 00000028 
	v_sub_u32_e32 v2, vcc, v2, v3                              // 0000000034F0: 34040702 
	v_add_u32_e32 v3, vcc, s4, v2                              // 0000000034F4: 32060404 
	v_cmp_lt_u32_e32 vcc, v2, v3                               // 0000000034F8: 7D920702 
	v_mov_b32_e32 v3, 0                                        // 0000000034FC: 7E060280 
	s_waitcnt lgkmcnt(0)                                       // 000000003500: BF8C007F 
	s_and_saveexec_b64 s[10:11], vcc                           // 000000003504: BE8A206A 
	s_cbranch_execz BB1_4                                      // 000000003508: BF880025 

000000000000350c BB1_2:
	s_sub_i32 s0, s2, s12                                      // 00000000350C: 81800C02 
	s_load_dwordx4 s[16:19], s[6:7], 0x0                       // 000000003510: C00A0403 00000000 
	v_mul_lo_u32 v3, v1, s0                                    // 000000003518: D2850003 00000101 
	v_add_u32_e32 v0, vcc, v0, v3                              // 000000003520: 32000700 
	v_add_u32_e32 v0, vcc, s14, v0                             // 000000003524: 3200000E 
	s_waitcnt lgkmcnt(0)                                       // 000000003528: BF8C007F 
	v_mov_b32_e32 v6, s18                                      // 00000000352C: 7E0C0212 
	v_add_u32_e32 v4, vcc, s5, v0                              // 000000003530: 32080005 
	v_mov_b32_e32 v3, 0                                        // 000000003534: 7E060280 
	v_mov_b32_e32 v7, s19                                      // 000000003538: 7E0E0213 
	v_mov_b32_e32 v0, s4                                       // 00000000353C: 7E000204 

0000000000003540 BB1_3:
	v_mov_b32_e32 v5, 0                                        // 000000003540: 7E0A0280 
	v_lshlrev_b64 v[8:9], 2, v[4:5]                            // 000000003544: D28F0008 00020882 
	v_readfirstlane_b32 s0, v6                                 // 00000000354C: 7E000506 
	v_readfirstlane_b32 s1, v7                                 // 000000003550: 7E020507 
	s_load_dword s2, s[0:1], 0x0                               // 000000003554: C0020080 00000000 
	v_mov_b32_e32 v5, s17                                      // 00000000355C: 7E0A0211 
	v_add_u32_e64 v8, s[0:1], s16, v8                          // 000000003560: D1190008 00021010 
	v_addc_u32_e64 v9, s[0:1], v5, v9, s[0:1]                  // 000000003568: D11C0009 00021305 
	flat_load_dword v5, v[8:9]                                 // 000000003570: DC500000 05000008 
	v_add_u32_e32 v4, vcc, 1, v4                               // 000000003578: 32080881 
	v_add_u32_e32 v0, vcc, -1, v0                              // 00000000357C: 320000C1 
	v_add_u32_e32 v6, vcc, 4, v6                               // 000000003580: 320C0C84 
	v_addc_u32_e32 v7, vcc, 0, v7, vcc                         // 000000003584: 380E0E80 
	v_cmp_eq_u32_e32 vcc, 0, v0                                // 000000003588: 7D940080 
	s_and_b64 vcc, exec, vcc                                   // 00000000358C: 86EA6A7E 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003590: BF8C0070 
	v_cvt_f32_u32_e32 v5, v5                                   // 000000003594: 7E0A0D05 
	v_mac_f32_e32 v3, s2, v5                                   // 000000003598: 2C060A02 
	s_cbranch_vccz BB1_3                                       // 00000000359C: BF86FFE8 

00000000000035a0 BB1_4:
	s_or_b64 exec, exec, s[10:11]                              // 0000000035A0: 87FE0A7E 
	v_mul_lo_u32 v0, v2, s3                                    // 0000000035A4: D2850000 00000702 
	v_mov_b32_e32 v2, 0                                        // 0000000035AC: 7E040280 
	v_mov_b32_e32 v4, s9                                       // 0000000035B0: 7E080209 
	v_add_u32_e32 v1, vcc, v0, v1                              // 0000000035B4: 32020300 
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000035B8: D28F0000 00020282 
	v_add_u32_e32 v0, vcc, s8, v0                              // 0000000035C0: 32000008 
	v_addc_u32_e32 v1, vcc, v4, v1, vcc                        // 0000000035C4: 38020304 
	flat_store_dword v[0:1], v3                                // 0000000035C8: DC700000 00000300 

00000000000035d0 BB1_5:
	s_endpgm                                                   // 0000000035D0: BF810000 
	s_nop 0                                                    // 0000000035D4: BF800000 
	s_nop 0                                                    // 0000000035D8: BF800000 
	s_nop 0                                                    // 0000000035DC: BF800000 
	s_nop 0                                                    // 0000000035E0: BF800000 
	s_nop 0                                                    // 0000000035E4: BF800000 
	s_nop 0                                                    // 0000000035E8: BF800000 
	s_nop 0                                                    // 0000000035EC: BF800000 
	s_nop 0                                                    // 0000000035F0: BF800000 
	s_nop 0                                                    // 0000000035F4: BF800000 
	s_nop 0                                                    // 0000000035F8: BF800000 
	s_nop 0                                                    // 0000000035FC: BF800000 

0000000000003700 simpleSeparableConvolutionPass2:
	s_load_dword s0, s[4:5], 0x4                               // 000000003700: C0020002 00000004 
	s_load_dwordx2 s[2:3], s[6:7], 0x18                        // 000000003708: C0060083 00000018 
	s_load_dword s12, s[6:7], 0x30                             // 000000003710: C0020303 00000030 
	s_waitcnt lgkmcnt(0)                                       // 000000003718: BF8C007F 
	s_and_b32 s0, s0, 0xffff                                   // 00000000371C: 8600FF00 0000FFFF 
	v_cvt_f32_u32_e32 v1, s3                                   // 000000003724: 7E020C03 
	s_mul_i32 s13, s8, s0                                      // 000000003728: 920D0008 
	v_add_u32_e32 v2, vcc, s13, v0                             // 00000000372C: 3204000D 
	v_add_u32_e32 v2, vcc, s12, v2                             // 000000003730: 3204040C 
	v_rcp_iflag_f32_e32 v1, v1                                 // 000000003734: 7E024701 
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 000000003738: 0A0202FF 4F800000 
	v_cvt_u32_f32_e32 v1, v1                                   // 000000003740: 7E020F01 
	v_mul_lo_u32 v3, v1, s3                                    // 000000003744: D2850003 00000701 
	v_mul_hi_u32 v4, v1, s3                                    // 00000000374C: D2860004 00000701 
	v_sub_u32_e32 v5, vcc, 0, v3                               // 000000003754: 340A0680 
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 000000003758: D0CA0000 00020880 
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]                       // 000000003760: D1000003 00020B03 
	v_mul_hi_u32 v3, v3, v1                                    // 000000003768: D2860003 00020303 
	v_add_u32_e32 v4, vcc, v3, v1                              // 000000003770: 32080303 
	v_subrev_u32_e32 v1, vcc, v3, v1                           // 000000003774: 36020303 
	v_cndmask_b32_e64 v1, v1, v4, s[0:1]                       // 000000003778: D1000001 00020901 
	v_mul_hi_u32 v1, v1, v2                                    // 000000003780: D2860001 00020501 
	v_mul_lo_u32 v3, v1, s3                                    // 000000003788: D2850003 00000701 
	v_add_u32_e32 v4, vcc, 1, v1                               // 000000003790: 32080281 
	v_add_u32_e32 v5, vcc, -1, v1                              // 000000003794: 320A02C1 
	v_sub_u32_e32 v6, vcc, v2, v3                              // 000000003798: 340C0702 
	v_cmp_ge_u32_e32 vcc, v2, v3                               // 00000000379C: 7D9C0702 
	v_cmp_le_u32_e64 s[0:1], s3, v6                            // 0000000037A0: D0CB0000 00020C03 
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000037A8: 86806A00 
	v_cndmask_b32_e64 v1, v1, v4, s[0:1]                       // 0000000037AC: D1000001 00020901 
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 0000000037B4: 00020305 
	v_cmp_gt_u32_e32 vcc, s2, v1                               // 0000000037B8: 7D980202 
	s_and_saveexec_b64 s[0:1], vcc                             // 0000000037BC: BE80206A 
	s_cbranch_execz BB2_6                                      // 0000000037C0: BF880041 

00000000000037c4 BB2_1:
	v_mul_lo_u32 v3, v1, s3                                    // 0000000037C4: D2850003 00000701 
	s_load_dwordx4 s[8:11], s[6:7], 0x10                       // 0000000037CC: C00A0203 00000010 
	s_load_dword s0, s[6:7], 0x20                              // 0000000037D4: C0020003 00000020 
	v_sub_u32_e32 v2, vcc, v2, v3                              // 0000000037DC: 34040702 
	s_waitcnt lgkmcnt(0)                                       // 0000000037E0: BF8C007F 
	v_add_u32_e32 v3, vcc, s0, v2                              // 0000000037E4: 32060400 
	v_cmp_lt_u32_e32 vcc, v2, v3                               // 0000000037E8: 7D920702 
	v_mov_b32_e32 v3, 0                                        // 0000000037EC: 7E060280 
	s_and_saveexec_b64 s[4:5], vcc                             // 0000000037F0: BE84206A 
	s_cbranch_execz BB2_5                                      // 0000000037F4: BF880028 

00000000000037f8 BB2_2:
	s_load_dwordx4 s[16:19], s[6:7], 0x0                       // 0000000037F8: C00A0403 00000000 
	s_load_dword s1, s[6:7], 0x2c                              // 000000003800: C0020043 0000002C 
	v_mov_b32_e32 v4, s0                                       // 000000003808: 7E080200 
	v_mov_b32_e32 v3, 0                                        // 00000000380C: 7E060280 
	s_waitcnt lgkmcnt(0)                                       // 000000003810: BF8C007F 
	v_mov_b32_e32 v5, s18                                      // 000000003814: 7E0A0212 
	s_sub_i32 s0, s1, s3                                       // 000000003818: 81800301 
	v_mul_lo_u32 v7, v1, s0                                    // 00000000381C: D2850007 00000101 
	v_mov_b32_e32 v6, s19                                      // 000000003824: 7E0C0213 
	v_add_u32_e32 v0, vcc, v0, v7                              // 000000003828: 32000F00 
	v_add_u32_e32 v0, vcc, s13, v0                             // 00000000382C: 3200000D 
	v_add_u32_e32 v7, vcc, s12, v0                             // 000000003830: 320E000C 

0000000000003834 BB2_3:
	v_mov_b32_e32 v8, 0                                        // 000000003834: 7E100280 
	v_lshlrev_b64 v[8:9], 2, v[7:8]                            // 000000003838: D28F0008 00020E82 
	v_mov_b32_e32 v0, s17                                      // 000000003840: 7E000211 
	v_add_u32_e64 v8, s[0:1], s16, v8                          // 000000003844: D1190008 00021010 
	v_addc_u32_e64 v9, s[0:1], v0, v9, s[0:1]                  // 00000000384C: D11C0009 00021300 
	flat_load_dword v0, v[8:9]                                 // 000000003854: DC500000 00000008 
	v_readfirstlane_b32 s6, v5                                 // 00000000385C: 7E0C0505 
	v_readfirstlane_b32 s7, v6                                 // 000000003860: 7E0E0506 
	s_load_dword s0, s[6:7], 0x0                               // 000000003864: C0020003 00000000 
	v_add_u32_e32 v4, vcc, -1, v4                              // 00000000386C: 320808C1 
	v_add_u32_e32 v5, vcc, 4, v5                               // 000000003870: 320A0A84 
	v_addc_u32_e32 v6, vcc, 0, v6, vcc                         // 000000003874: 380C0C80 
	v_add_u32_e32 v7, vcc, 1, v7                               // 000000003878: 320E0E81 
	v_cmp_eq_u32_e32 vcc, 0, v4                                // 00000000387C: 7D940880 
	s_and_b64 vcc, exec, vcc                                   // 000000003880: 86EA6A7E 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003884: BF8C0070 
	v_mac_f32_e32 v3, s0, v0                                   // 000000003888: 2C060000 
	s_cbranch_vccz BB2_3                                       // 00000000388C: BF86FFE9 
	v_add_f32_e32 v0, 0.5, v3                                  // 000000003890: 020006F0 
	v_cvt_i32_f32_e32 v3, v0                                   // 000000003894: 7E061100 

0000000000003898 BB2_5:
	s_or_b64 exec, exec, s[4:5]                                // 000000003898: 87FE047E 
	v_mul_lo_u32 v0, v2, s2                                    // 00000000389C: D2850000 00000502 
	v_mov_b32_e32 v2, 0                                        // 0000000038A4: 7E040280 
	v_mov_b32_e32 v4, s9                                       // 0000000038A8: 7E080209 
	v_add_u32_e32 v1, vcc, v0, v1                              // 0000000038AC: 32020300 
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000038B0: D28F0000 00020282 
	v_add_u32_e32 v0, vcc, s8, v0                              // 0000000038B8: 32000008 
	v_addc_u32_e32 v1, vcc, v4, v1, vcc                        // 0000000038BC: 38020304 
	flat_store_dword v[0:1], v3                                // 0000000038C0: DC700000 00000300 

00000000000038c8 BB2_6:
	s_endpgm                                                   // 0000000038C8: BF810000 
