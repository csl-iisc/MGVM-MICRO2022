; ModuleID = 'gups_kernel.cl'
source_filename = "gups_kernel.cl"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: convergent norecurse nounwind
define protected amdgpu_kernel void @RandomAccessUpdate(i64 %0, i64 addrspace(1)* %1, i64 addrspace(1)* nocapture readnone %2) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 !kernel_arg_name !8 {
  %4 = lshr i64 %0, 12
  %5 = and i64 %4, 1125899906842623
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = add i64 %0, -1
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %19, %9 ]
  %11 = phi i64 [ undef, %7 ], [ %15, %9 ]
  %12 = shl i64 %11, 1
  %13 = icmp slt i64 %11, 0
  %14 = select i1 %13, i64 7, i64 0
  %15 = xor i64 %14, %12
  %16 = and i64 %15, %8
  %17 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %16
  %18 = tail call i64 @_Z8atom_xorPU3AS1Vmm(i64 addrspace(1)* %17, i64 %15) #2
  %19 = add nuw nsw i64 %10, 1
  %20 = icmp eq i64 %19, %5
  br i1 %20, label %21, label %9

21:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: convergent
declare hidden i64 @_Z8atom_xorPU3AS1Vmm(i64 addrspace(1)*, i64) local_unnamed_addr #1

attributes #0 = { convergent norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "amdgpu-implicitarg-num-bytes"="56" "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="fiji" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "uniform-work-group-size"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="fiji" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { convergent nounwind }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 1, i32 2}
!3 = !{!"clang version 11.0.0 (/src/external/llvm-project/clang 0383ad1cfb0a8e05b0a020e8632400194628b243)"}
!4 = !{i32 0, i32 1, i32 1}
!5 = !{!"none", !"none", !"none"}
!6 = !{!"ulong", !"ulong*", !"ulong*"}
!7 = !{!"", !"", !""}
!8 = !{!"TableSize", !"Table", !"Starts"}
