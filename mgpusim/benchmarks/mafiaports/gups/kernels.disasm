	.text
	.hsa_code_object_version 2,1
	.hsa_code_object_isa 8,0,3,"AMD","AMDGPU"
	.protected	RandomAccessUpdate ; -- Begin function RandomAccessUpdate
	.globl	RandomAccessUpdate
	.p2align	8
	.type	RandomAccessUpdate,@function
	.amdgpu_hsa_kernel RandomAccessUpdate
RandomAccessUpdate:                     ; @RandomAccessUpdate
RandomAccessUpdate$local:
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 2
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		granulated_workitem_vgpr_count = 1
		granulated_wavefront_sgpr_count = 2
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_wgp_mode = 0
		enable_mem_ordered = 0
		enable_fwd_progress = 0
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 8
		enable_trap_handler = 0
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 1
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_wavefront_size32 = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 80
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 18
		workitem_vgpr_count = 8
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = -1
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; %bb.0:
	s_load_dwordx4 s[0:3], s[6:7], 0x0
	s_waitcnt lgkmcnt(0)
	s_add_i32 s9, s0, 0xfff
	s_cmpk_lt_u32 s9, 0x1fff
	s_cbranch_scc1 BB0_3
; %bb.1:
	s_load_dwordx4 s[12:15], s[6:7], 0x10
	s_load_dword s6, s[6:7], 0x18
	s_load_dword s4, s[4:5], 0x4
	v_mov_b32_e32 v1, 0
	s_ashr_i32 s9, s0, 31
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v2, s13
	s_lshr_b32 s9, s9, 20
	s_and_b32 s4, s4, 0xffff
	s_mul_i32 s8, s8, s4
	s_add_i32 s6, s6, s8
	v_add_u32_e32 v0, vcc, s6, v0
	v_lshlrev_b64 v[0:1], 3, v[0:1]
	s_add_i32 s9, s0, s9
	v_add_u32_e32 v0, vcc, s12, v0
	v_addc_u32_e32 v1, vcc, v2, v1, vcc
	flat_load_dwordx2 v[0:1], v[0:1]
	s_ashr_i32 s10, s9, 12
	s_ashr_i32 s11, s10, 31
	s_add_u32 s4, s0, -1
	s_addc_u32 s5, s1, -1
	s_mov_b64 s[6:7], 0
BB0_2:                                  ; =>This Inner Loop Header: Depth=1
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_ashrrev_i32_e32 v4, 31, v1
	v_lshlrev_b64 v[2:3], 1, v[0:1]
	v_and_b32_e32 v4, 7, v4
	v_xor_b32_e32 v2, v4, v2
	v_and_b32_e32 v5, s5, v3
	v_and_b32_e32 v4, s4, v2
	v_lshlrev_b64 v[4:5], 3, v[4:5]
	v_mov_b32_e32 v6, s3
	v_add_u32_e64 v4, s[0:1], s2, v4
	v_addc_u32_e64 v5, s[0:1], v6, v5, s[0:1]
	flat_load_dwordx2 v[6:7], v[4:5]
	s_add_u32 s6, s6, 1
	v_mov_b32_e32 v0, s10
	v_mov_b32_e32 v1, s11
	s_addc_u32 s7, s7, 0
	v_cmp_lt_u64_e32 vcc, s[6:7], v[0:1]
	v_mov_b32_e32 v0, v2
	v_mov_b32_e32 v1, v3
	s_and_b64 vcc, exec, vcc
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_xor_b32_e32 v3, v3, v7
	v_xor_b32_e32 v2, v2, v6
	flat_store_dwordx2 v[4:5], v[2:3]
	s_cbranch_vccnz BB0_2
BB0_3:                                  ; %.loopexit
	s_endpgm
.Lfunc_end0:
	.size	RandomAccessUpdate, .Lfunc_end0-RandomAccessUpdate
                                        ; -- End function
	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 268
; NumSgprs: 18
; NumVgprs: 8
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 192
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 2
; VGPRBlocks: 1
; NumSGPRsForWavesPerEU: 18
; NumVGPRsForWavesPerEU: 8
; Occupancy: 10
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:USER_SGPR: 8
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.ident	"clang version 11.0.0 (/src/external/llvm-project/clang 0383ad1cfb0a8e05b0a020e8632400194628b243)"
	.section	".note.GNU-stack"
	.addrsig
	.amd_amdgpu_isa "amdgcn-amd-amdhsa--gfx803"
	.amd_amdgpu_hsa_metadata
---
Version:         [ 1, 0 ]
Kernels:
  - Name:            RandomAccessUpdate
    SymbolName:      'RandomAccessUpdate@kd'
    Language:        OpenCL C
    LanguageVersion: [ 1, 2 ]
    Args:
      - Name:            TableSize
        TypeName:        ulong
        Size:            8
        Align:           8
        ValueKind:       ByValue
        ValueType:       U64
        AccQual:         Default
      - Name:            Table
        TypeName:        'ulong*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       U64
        AddrSpaceQual:   Global
        AccQual:         Default
      - Name:            Starts
        TypeName:        'ulong*'
        Size:            8
        Align:           8
        ValueKind:       GlobalBuffer
        ValueType:       U64
        AddrSpaceQual:   Global
        AccQual:         Default
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetX
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetY
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenGlobalOffsetZ
        ValueType:       I64
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenNone
        ValueType:       I8
        AddrSpaceQual:   Global
      - Size:            8
        Align:           8
        ValueKind:       HiddenMultiGridSyncArg
        ValueType:       I8
        AddrSpaceQual:   Global
    CodeProps:
      KernargSegmentSize: 80
      GroupSegmentFixedSize: 0
      PrivateSegmentFixedSize: 0
      KernargSegmentAlign: 8
      WavefrontSize:   64
      NumSGPRs:        18
      NumVGPRs:        8
      MaxFlatWorkGroupSize: 256
...

	.end_amd_amdgpu_hsa_metadata
