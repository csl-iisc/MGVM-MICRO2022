; ModuleID = 'gups_kernel.cl'
source_filename = "gups_kernel.cl"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: convergent nofree norecurse nounwind
define protected amdgpu_kernel void @RandomAccessUpdate(i64 %0, i64 addrspace(1)* nocapture %1, i64 addrspace(1)* nocapture readonly %2) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 !kernel_arg_name !8 {
  %4 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %5 = trunc i64 %0 to i32
  %6 = sdiv i32 %5, 4096
  %7 = sext i32 %6 to i64
  %8 = add i32 %5, 4095
  %9 = icmp ugt i32 %8, 8190
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = and i64 %4, 4294967295
  %12 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %11
  %13 = load i64, i64 addrspace(1)* %12, align 8, !tbaa !9
  %14 = add i64 %0, -1
  %15 = icmp ugt i64 %7, 1
  %16 = select i1 %15, i64 %7, i64 1
  br label %17

17:                                               ; preds = %17, %10
  %18 = phi i64 [ 0, %10 ], [ %28, %17 ]
  %19 = phi i64 [ %13, %10 ], [ %23, %17 ]
  %20 = shl i64 %19, 1
  %21 = icmp slt i64 %19, 0
  %22 = select i1 %21, i64 7, i64 0
  %23 = xor i64 %22, %20
  %24 = and i64 %23, %14
  %25 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %24
  %26 = load i64, i64 addrspace(1)* %25, align 8, !tbaa !9
  %27 = xor i64 %26, %23
  store i64 %27, i64 addrspace(1)* %25, align 8, !tbaa !9
  %28 = add nuw i64 %18, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %17

30:                                               ; preds = %17, %3
  ret void
}

; Function Attrs: convergent nounwind readnone
declare hidden i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

attributes #0 = { convergent nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "amdgpu-implicitarg-num-bytes"="56" "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="fiji" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "uniform-work-group-size"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { convergent nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "denormal-fp-math-f32"="preserve-sign,preserve-sign" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="fiji" "target-features"="+16-bit-insts,+ci-insts,+dpp,+flat-address-space,+gfx8-insts,+s-memrealtime,-code-object-v3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { convergent nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 1, i32 2}
!3 = !{!"clang version 11.0.0 (/src/external/llvm-project/clang 0383ad1cfb0a8e05b0a020e8632400194628b243)"}
!4 = !{i32 0, i32 1, i32 1}
!5 = !{!"none", !"none", !"none"}
!6 = !{!"ulong", !"ulong*", !"ulong*"}
!7 = !{!"", !"", !""}
!8 = !{!"TableSize", !"Table", !"Starts"}
!9 = !{!10, !10, i64 0}
!10 = !{!"long", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}
